{
    "sourceFile": "src/wishlistSlice.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 27,
            "patches": [
                {
                    "date": 1740916344890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740916376952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,31 @@\n import { createSlice } from \"@reduxjs/toolkit\";\n \n const loadCartFromStorage =()=>{\n-    const storedCart = loadCartFromStorage.getItem(\"cart\");\n+    const storedCart = loadCartFromStorage.getItem(\"wishlist\");\n     return storedCart ? JSON.parse(storedCart) : []\n }\n const cartSlice = createSlice({\n-    name: \"cart\",\n+    name: \"wishlist\",\n     initialState: {\n         items: [],\n     },\n     reducers: {\n         setCart: (state, action) => {\n             state.items = action.payload;\n-            localStorage.setItem(\"cart\", JSON.stringify(state.items)); // Save to localStorage\n+            localStorage.setItem(\"wishlist\", JSON.stringify(state.items)); // Save to localStorage\n         },\n         addToCart: (state, action) => {\n             state.items.push(action.payload);\n-            localStorage.setItem(\"cart\", JSON.stringify(state.items)); // Save to localStorage\n+            localStorage.setItem(\"wishlist\", JSON.stringify(state.items)); // Save to localStorage\n         },\n         removeFromCart: (state, action) => {\n             state.items = state.items.filter(item => item.id !== action.payload);\n-            localStorage.setItem(\"cart\", JSON.stringify(state.items));\n+            localStorage.setItem(\"wishlist\", JSON.stringify(state.items));\n         },\n         clearCart: (state) => {\n             state.items = [];\n-            // localStorage.removeItem(\"cart\");\n+            // localStorage.removeItem(\"wishlist\");\n         }\n     }\n });\n \n"
                },
                {
                    "date": 1740916913775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     initialState: {\n         items: [],\n     },\n     reducers: {\n-        setCart: (state, action) => {\n+        set: (state, action) => {\n             state.items = action.payload;\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items)); // Save to localStorage\n         },\n         addToCart: (state, action) => {\n@@ -28,6 +28,6 @@\n         }\n     }\n });\n \n-export const { setCart, addToCart, removeFromCart, clearCart } = cartSlice.actions;\n+export const { set, addToCart, removeFromCart, clearCart } = cartSlice.actions;\n export default cartSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740916919198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     initialState: {\n         items: [],\n     },\n     reducers: {\n-        set: (state, action) => {\n+        setWishList: (state, action) => {\n             state.items = action.payload;\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items)); // Save to localStorage\n         },\n         addToCart: (state, action) => {\n@@ -28,6 +28,6 @@\n         }\n     }\n });\n \n-export const { set, addToCart, removeFromCart, clearCart } = cartSlice.actions;\n+export const { setWishList, addToCart, removeFromCart, clearCart } = cartSlice.actions;\n export default cartSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740916931370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         setWishList: (state, action) => {\n             state.items = action.payload;\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items)); // Save to localStorage\n         },\n-        addToCart: (state, action) => {\n+        addToWis: (state, action) => {\n             state.items.push(action.payload);\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items)); // Save to localStorage\n         },\n         removeFromCart: (state, action) => {\n@@ -28,6 +28,6 @@\n         }\n     }\n });\n \n-export const { setWishList, addToCart, removeFromCart, clearCart } = cartSlice.actions;\n+export const { setWishList, addToWis, removeFromCart, clearCart } = cartSlice.actions;\n export default cartSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740916936491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         setWishList: (state, action) => {\n             state.items = action.payload;\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items)); // Save to localStorage\n         },\n-        addToWis: (state, action) => {\n+        addToWishList: (state, action) => {\n             state.items.push(action.payload);\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items)); // Save to localStorage\n         },\n         removeFromCart: (state, action) => {\n@@ -28,6 +28,6 @@\n         }\n     }\n });\n \n-export const { setWishList, addToWis, removeFromCart, clearCart } = cartSlice.actions;\n+export const { setWishList, addToWishList, removeFromCart, clearCart } = cartSlice.actions;\n export default cartSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740916946322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n         addToWishList: (state, action) => {\n             state.items.push(action.payload);\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items)); // Save to localStorage\n         },\n-        removeFromCart: (state, action) => {\n+        removeFrom: (state, action) => {\n             state.items = state.items.filter(item => item.id !== action.payload);\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items));\n         },\n         clearCart: (state) => {\n@@ -28,6 +28,6 @@\n         }\n     }\n });\n \n-export const { setWishList, addToWishList, removeFromCart, clearCart } = cartSlice.actions;\n+export const { setWishList, addToWishList, removeFrom, clearCart } = cartSlice.actions;\n export default cartSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740916953242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n         addToWishList: (state, action) => {\n             state.items.push(action.payload);\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items)); // Save to localStorage\n         },\n-        removeFrom: (state, action) => {\n+        removeFromW: (state, action) => {\n             state.items = state.items.filter(item => item.id !== action.payload);\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items));\n         },\n         clearCart: (state) => {\n@@ -28,6 +28,6 @@\n         }\n     }\n });\n \n-export const { setWishList, addToWishList, removeFrom, clearCart } = cartSlice.actions;\n+export const { setWishList, addToWishList, removeFromW, clearCart } = cartSlice.actions;\n export default cartSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740916958363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n         addToWishList: (state, action) => {\n             state.items.push(action.payload);\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items)); // Save to localStorage\n         },\n-        removeFromW: (state, action) => {\n+        removeFromWishList: (state, action) => {\n             state.items = state.items.filter(item => item.id !== action.payload);\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items));\n         },\n         clearCart: (state) => {\n@@ -28,6 +28,6 @@\n         }\n     }\n });\n \n-export const { setWishList, addToWishList, removeFromW, clearCart } = cartSlice.actions;\n+export const { setWishList, addToWishList, removeFromWishList, clearCart } = cartSlice.actions;\n export default cartSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740916978081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,13 +21,13 @@\n         removeFromWishList: (state, action) => {\n             state.items = state.items.filter(item => item.id !== action.payload);\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items));\n         },\n-        clearCart: (state) => {\n+        clear: (state) => {\n             state.items = [];\n             // localStorage.removeItem(\"wishlist\");\n         }\n     }\n });\n \n-export const { setWishList, addToWishList, removeFromWishList, clearCart } = cartSlice.actions;\n+export const { setWishList, addToWishList, removeFromWishList, clear } = cartSlice.actions;\n export default cartSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740916983620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,13 +21,13 @@\n         removeFromWishList: (state, action) => {\n             state.items = state.items.filter(item => item.id !== action.payload);\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items));\n         },\n-        clear: (state) => {\n+        clearWishList: (state) => {\n             state.items = [];\n             // localStorage.removeItem(\"wishlist\");\n         }\n     }\n });\n \n-export const { setWishList, addToWishList, removeFromWishList, clear } = cartSlice.actions;\n+export const { setWishList, addToWishList, removeFromWishList, clearWishList } = cartSlice.actions;\n export default cartSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740916996609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n             localStorage.setItem(\"wishlist\", JSON.stringify(state.items));\n         },\n         clearWishList: (state) => {\n             state.items = [];\n-            // localStorage.removeItem(\"wishlist\");\n+            localStorage.removeItem(\"wishlist\");\n         }\n     }\n });\n \n"
                },
                {
                    "date": 1743674928311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,33 +1,25 @@\n-import { createSlice } from \"@reduxjs/toolkit\";\n+import { createSlice } from '@reduxjs/toolkit';\n \n-const loadCartFromStorage =()=>{\n-    const storedCart = loadCartFromStorage.getItem(\"wishlist\");\n-    return storedCart ? JSON.parse(storedCart) : []\n-}\n-const cartSlice = createSlice({\n-    name: \"wishlist\",\n-    initialState: {\n-        items: [],\n+const initialState = {\n+  user: null,\n+  token: null\n+};\n+\n+const authSlice = createSlice({\n+  name: 'auth',\n+  initialState,\n+  reducers: {\n+    setCredentials: (state, action) => {\n+      const { user, token } = action.payload;\n+      state.user = user;\n+      state.token = token;\n     },\n-    reducers: {\n-        setWishList: (state, action) => {\n-            state.items = action.payload;\n-            localStorage.setItem(\"wishlist\", JSON.stringify(state.items)); // Save to localStorage\n-        },\n-        addToWishList: (state, action) => {\n-            state.items.push(action.payload);\n-            localStorage.setItem(\"wishlist\", JSON.stringify(state.items)); // Save to localStorage\n\\ No newline at end of file\n-        },\n-        removeFromWishList: (state, action) => {\n-            state.items = state.items.filter(item => item.id !== action.payload);\n-            localStorage.setItem(\"wishlist\", JSON.stringify(state.items));\n-        },\n-        clearWishList: (state) => {\n-            state.items = [];\n-            localStorage.removeItem(\"wishlist\");\n-        }\n+    logout: (state) => {\n+      state.user = null;\n+      state.token = null;\n     }\n+  }\n });\n \n-export const { setWishList, addToWishList, removeFromWishList, clearWishList } = cartSlice.actions;\n-export default cartSlice.reducer;\n+export const { setCredentials, logout } = authSlice.actions;\n+export default authSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743676641365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,67 @@\n+// features/wishlistSlice.js\n import { createSlice } from '@reduxjs/toolkit';\n \n const initialState = {\n-  user: null,\n-  token: null\n+  items: [],        // For authenticated users\n+  guestItems: [],   // For guest users\n+  status: 'idle',   // 'idle' | 'loading' | 'succeeded' | 'failed'\n+  error: null\n };\n \n-const authSlice = createSlice({\n-  name: 'auth',\n+const wishlistSlice = createSlice({\n+  name: 'wishlist',\n   initialState,\n   reducers: {\n-    setCredentials: (state, action) => {\n-      const { user, token } = action.payload;\n-      state.user = user;\n-      state.token = token;\n+    wishlistLoading: (state) => {\n+      state.status = 'loading';\n     },\n\\ No newline at end of file\n-    logout: (state) => {\n-      state.user = null;\n-      state.token = null;\n+    wishlistLoaded: (state, action) => {\n+      state.status = 'succeeded';\n+      state.items = action.payload;\n+    },\n+    guestWishlistLoaded: (state, action) => {\n+      state.guestItems = action.payload;\n+    },\n+    itemAdded: (state, action) => {\n+      const productId = action.payload;\n+      if (state.items.includes(productId)) return;\n+      state.items.push(productId);\n+    },\n+    itemRemoved: (state, action) => {\n+      const productId = action.payload;\n+      state.items = state.items.filter(id => id !== productId);\n+    },\n+    guestItemAdded: (state, action) => {\n+      const productId = action.payload;\n+      if (state.guestItems.includes(productId)) return;\n+      state.guestItems.push(productId);\n+    },\n+    guestItemRemoved: (state, action) => {\n+      const productId = action.payload;\n+      state.guestItems = state.guestItems.filter(id => id !== productId);\n+    },\n+    wishlistSyncComplete: (state, action) => {\n+      state.items = action.payload;\n+      state.guestItems = [];\n     }\n   }\n });\n \n-export const { setCredentials, logout } = authSlice.actions;\n-export default authSlice.reducer;\n+export const {\n+  wishlistLoading,\n+  wishlistLoaded,\n+  guestWishlistLoaded,\n+  itemAdded,\n+  itemRemoved,\n+  guestItemAdded,\n+  guestItemRemoved,\n+  wishlistSyncComplete\n+} = wishlistSlice.actions;\n+\n+// Selectors\n+export const selectWishlistItems = (state) => state.wishlist.items;\n+export const selectGuestWishlistItems = (state) => state.wishlist.guestItems;\n+export const selectWishlistStatus = (state) => state.wishlist.status;\n+export const selectWishlistError = (state) => state.wishlist.error;\n+\n+export default wishlistSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743679375270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,67 +1,49 @@\n-// features/wishlistSlice.js\n import { createSlice } from '@reduxjs/toolkit';\n \n+const getInitialWishlist = () => {\n+  if (typeof window !== 'undefined') {\n+    return JSON.parse(localStorage.getItem('wishlist')) || [];\n+  }\n+  return [];\n+};\n+\n const initialState = {\n-  items: [],        // For authenticated users\n-  guestItems: [],   // For guest users\n-  status: 'idle',   // 'idle' | 'loading' | 'succeeded' | 'failed'\n+  items: getInitialWishlist(),\n+  status: 'idle',\n   error: null\n };\n \n const wishlistSlice = createSlice({\n   name: 'wishlist',\n   initialState,\n   reducers: {\n-    wishlistLoading: (state) => {\n-      state.status = 'loading';\n-    },\n-    wishlistLoaded: (state, action) => {\n-      state.status = 'succeeded';\n-      state.items = action.payload;\n-    },\n-    guestWishlistLoaded: (state, action) => {\n-      state.guestItems = action.payload;\n-    },\n-    itemAdded: (state, action) => {\n+    addItem: (state, action) => {\n       const productId = action.payload;\n-      if (state.items.includes(productId)) return;\n-      state.items.push(productId);\n+      if (!state.items.includes(productId)) {\n+        state.items.push(productId);\n+        localStorage.setItem('wishlist', JSON.stringify(state.items));\n+      }\n     },\n-    itemRemoved: (state, action) => {\n+    removeItem: (state, action) => {\n       const productId = action.payload;\n       state.items = state.items.filter(id => id !== productId);\n+      localStorage.setItem('wishlist', JSON.stringify(state.items));\n     },\n-    guestItemAdded: (state, action) => {\n-      const productId = action.payload;\n-      if (state.guestItems.includes(productId)) return;\n-      state.guestItems.push(productId);\n+    setWishlist: (state, action) => {\n+      state.items = action.payload;\n+      localStorage.setItem('wishlist', JSON.stringify(state.items));\n     },\n-    guestItemRemoved: (state, action) => {\n-      const productId = action.payload;\n-      state.guestItems = state.guestItems.filter(id => id !== productId);\n-    },\n-    wishlistSyncComplete: (state, action) => {\n-      state.items = action.payload;\n-      state.guestItems = [];\n+    resetWishlist: (state) => {\n+      state.items = [];\n+      localStorage.removeItem('wishlist');\n     }\n   }\n });\n \n-export const {\n-  wishlistLoading,\n-  wishlistLoaded,\n-  guestWishlistLoaded,\n-  itemAdded,\n-  itemRemoved,\n-  guestItemAdded,\n-  guestItemRemoved,\n-  wishlistSyncComplete\n-} = wishlistSlice.actions;\n+export const { addItem, removeItem, setWishlist, resetWishlist } = wishlistSlice.actions;\n \n-// Selectors\n export const selectWishlistItems = (state) => state.wishlist.items;\n-export const selectGuestWishlistItems = (state) => state.wishlist.guestItems;\n-export const selectWishlistStatus = (state) => state.wishlist.status;\n-export const selectWishlistError = (state) => state.wishlist.error;\n+export const selectIsInWishlist = (productId) => (state) => \n+  state.wishlist.items.includes(productId);\n \n export default wishlistSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743679438340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,67 @@\n+// features/wishlistSlice.js\n import { createSlice } from '@reduxjs/toolkit';\n \n-const getInitialWishlist = () => {\n-  if (typeof window !== 'undefined') {\n-    return JSON.parse(localStorage.getItem('wishlist')) || [];\n-  }\n-  return [];\n-};\n-\n const initialState = {\n-  items: getInitialWishlist(),\n-  status: 'idle',\n+  items: [],        // For authenticated users\n+  guestItems: [],   // For guest users\n+  status: 'idle',   // 'idle' | 'loading' | 'succeeded' | 'failed'\n   error: null\n };\n \n const wishlistSlice = createSlice({\n   name: 'wishlist',\n   initialState,\n   reducers: {\n-    addItem: (state, action) => {\n+    wishlistLoading: (state) => {\n+      state.status = 'loading';\n+    },\n+    wishlistLoaded: (state, action) => {\n+      state.status = 'succeeded';\n+      state.items = action.payload;\n+    },\n+    guestWishlistLoaded: (state, action) => {\n+      state.guestItems = action.payload;\n+    },\n+    itemAdded: (state, action) => {\n       const productId = action.payload;\n-      if (!state.items.includes(productId)) {\n-        state.items.push(productId);\n-        localStorage.setItem('wishlist', JSON.stringify(state.items));\n-      }\n+      if (state.items.includes(productId)) return;\n+      state.items.push(productId);\n     },\n-    removeItem: (state, action) => {\n+    itemRemoved: (state, action) => {\n       const productId = action.payload;\n       state.items = state.items.filter(id => id !== productId);\n-      localStorage.setItem('wishlist', JSON.stringify(state.items));\n     },\n-    setWishlist: (state, action) => {\n+    guestItemAdded: (state, action) => {\n+      const productId = action.payload;\n+      if (state.guestItems.includes(productId)) return;\n+      state.guestItems.push(productId);\n+    },\n+    guestItemRemoved: (state, action) => {\n+      const productId = action.payload;\n+      state.guestItems = state.guestItems.filter(id => id !== productId);\n+    },\n+    wishlistSyncComplete: (state, action) => {\n       state.items = action.payload;\n-      localStorage.setItem('wishlist', JSON.stringify(state.items));\n-    },\n-    resetWishlist: (state) => {\n-      state.items = [];\n-      localStorage.removeItem('wishlist');\n+      state.guestItems = [];\n     }\n   }\n });\n \n-export const { addItem, removeItem, setWishlist, resetWishlist } = wishlistSlice.actions;\n+export const {\n+  wishlistLoading,\n+  wishlistLoaded,\n+  guestWishlistLoaded,\n+  itemAdded,\n+  itemRemoved,\n+  guestItemAdded,\n+  guestItemRemoved,\n+  wishlistSyncComplete\n+} = wishlistSlice.actions;\n \n+// Selectors\n export const selectWishlistItems = (state) => state.wishlist.items;\n-export const selectIsInWishlist = (productId) => (state) => \n-  state.wishlist.items.includes(productId);\n+export const selectGuestWishlistItems = (state) => state.wishlist.guestItems;\n+export const selectWishlistStatus = (state) => state.wishlist.status;\n+export const selectWishlistError = (state) => state.wishlist.error;\n \n export default wishlistSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743684922809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,48 @@\n+import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n+\n+// Fetch Wishlist from API\n+export const fetchWishlist = createAsyncThunk(\"wishlist/fetch\", async (userId) => {\n+    const response = await fetch(http://localhost:5000/wishlist/${userId});\n+    return response.json();\n+});\n+\n+// Add to Wishlist\n+export const addToWishlist = createAsyncThunk(\"wishlist/add\", async ({ productId, userId }) => {\n+    await fetch(\"http://localhost:5000/wishlist/add\", {\n+        method: \"POST\",\n+        headers: { \"Content-Type\": \"application/json\" },\n+        body: JSON.stringify({ productId, userId }),\n+    });\n+    return productId;\n+});\n+\n+// Remove from Wishlist\n+export const removeFromWishlist = createAsyncThunk(\"wishlist/remove\", async ({ productId, userId }) => {\n+    await fetch(\"http://localhost:5000/wishlist/remove\", {\n+        method: \"POST\",\n+        headers: { \"Content-Type\": \"application/json\" },\n+        body: JSON.stringify({ productId, userId }),\n+    });\n+    return productId;\n+});\n+\n+const wishlistSlice = createSlice({\n+    name: \"wishlist\",\n+    initialState: { items: [], status: \"idle\" },\n+    reducers: {},\n+\n+    extraReducers: (builder) => {\n+        builder\n+            .addCase(fetchWishlist.fulfilled, (state, action) => {\n+                state.items = action.payload;\n+            })\n+            .addCase(addToWishlist.fulfilled, (state, action) => {\n+                state.items.push(action.payload);\n+            })\n+            .addCase(removeFromWishlist.fulfilled, (state, action) => {\n+                state.items = state.items.filter((id) => id !== action.payload);\n+            });\n+    },\n+});\n+\n+export default wishlistSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743684933911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n \n // Fetch Wishlist from API\n export const fetchWishlist = createAsyncThunk(\"wishlist/fetch\", async (userId) => {\n-    const response = await fetch(http://localhost:5000/wishlist/${userId});\n+    const response = await fetch(`http://localhost:5000/wishlist/${userId});\n     return response.json();\n });\n \n // Add to Wishlist\n@@ -44,72 +44,5 @@\n             });\n     },\n });\n \n-export default wishlistSlice.reducer;\n-// features/wishlistSlice.js\n-import { createSlice } from '@reduxjs/toolkit';\n-\n-const initialState = {\n-  items: [],        // For authenticated users\n-  guestItems: [],   // For guest users\n-  status: 'idle',   // 'idle' | 'loading' | 'succeeded' | 'failed'\n-  error: null\n-};\n-\n-const wishlistSlice = createSlice({\n-  name: 'wishlist',\n-  initialState,\n-  reducers: {\n-    wishlistLoading: (state) => {\n-      state.status = 'loading';\n-    },\n-    wishlistLoaded: (state, action) => {\n-      state.status = 'succeeded';\n-      state.items = action.payload;\n-    },\n-    guestWishlistLoaded: (state, action) => {\n-      state.guestItems = action.payload;\n-    },\n-    itemAdded: (state, action) => {\n-      const productId = action.payload;\n-      if (state.items.includes(productId)) return;\n-      state.items.push(productId);\n-    },\n-    itemRemoved: (state, action) => {\n-      const productId = action.payload;\n-      state.items = state.items.filter(id => id !== productId);\n-    },\n-    guestItemAdded: (state, action) => {\n-      const productId = action.payload;\n-      if (state.guestItems.includes(productId)) return;\n-      state.guestItems.push(productId);\n-    },\n-    guestItemRemoved: (state, action) => {\n-      const productId = action.payload;\n-      state.guestItems = state.guestItems.filter(id => id !== productId);\n-    },\n-    wishlistSyncComplete: (state, action) => {\n-      state.items = action.payload;\n-      state.guestItems = [];\n-    }\n-  }\n-});\n-\n-export const {\n-  wishlistLoading,\n-  wishlistLoaded,\n-  guestWishlistLoaded,\n-  itemAdded,\n-  itemRemoved,\n-  guestItemAdded,\n-  guestItemRemoved,\n-  wishlistSyncComplete\n-} = wishlistSlice.actions;\n-\n-// Selectors\n-export const selectWishlistItems = (state) => state.wishlist.items;\n-export const selectGuestWishlistItems = (state) => state.wishlist.guestItems;\n-export const selectWishlistStatus = (state) => state.wishlist.status;\n-export const selectWishlistError = (state) => state.wishlist.error;\n-\n export default wishlistSlice.reducer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743684939414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n \n // Fetch Wishlist from API\n export const fetchWishlist = createAsyncThunk(\"wishlist/fetch\", async (userId) => {\n-    const response = await fetch(`http://localhost:5000/wishlist/${userId});\n+    const response = await fetch(`http://localhost:5000/wishlist/${userId}`);\n     return response.json();\n });\n \n // Add to Wishlist\n"
                },
                {
                    "date": 1743696628777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n });\n \n // Add to Wishlist\n export const addToWishlist = createAsyncThunk(\"wishlist/add\", async ({ productId, userId }) => {\n-    await fetch(\"http://localhost:5000/wishlist/add\", {\n+    await fetch(\"http://localhost:5000/add\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ productId, userId }),\n     });\n"
                },
                {
                    "date": 1743696637031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n });\n \n // Add to Wishlist\n export const addToWishlist = createAsyncThunk(\"wishlist/add\", async ({ productId, userId }) => {\n-    await fetch(\"http://localhost:5000/add\", {\n+    await fetch(\"http://localhost:5000/\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ productId, userId }),\n     });\n"
                },
                {
                    "date": 1743696652335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n     return response.json();\n });\n \n // Add to Wishlist\n-export const addToWishlist = createAsyncThunk(\"wishlist/add\", async ({ productId, userId }) => {\n-    await fetch(\"http://localhost:5000/\", {\n+export const addToWishlist = createAsyncThunk(\"\", async ({ productId, userId }) => {\n+    await fetch(\"http://localhost:5000/addToWishlist\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ productId, userId }),\n     });\n"
                },
                {
                    "date": 1743696709704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     return response.json();\n });\n \n // Add to Wishlist\n-export const addToWishlist = createAsyncThunk(\"\", async ({ productId, userId }) => {\n+export const addToWishlist = createAsyncThunk(\"addToWishlist\", async ({ productId, userId }) => {\n     await fetch(\"http://localhost:5000/addToWishlist\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ productId, userId }),\n@@ -17,9 +17,9 @@\n });\n \n // Remove from Wishlist\n export const removeFromWishlist = createAsyncThunk(\"wishlist/remove\", async ({ productId, userId }) => {\n-    await fetch(\"http://localhost:5000/wishlist/remove\", {\n+    await fetch(\"http://localhost:5000/\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ productId, userId }),\n     });\n"
                },
                {
                    "date": 1743696722035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,10 @@\n     return productId;\n });\n \n // Remove from Wishlist\n-export const removeFromWishlist = createAsyncThunk(\"wishlist/remove\", async ({ productId, userId }) => {\n-    await fetch(\"http://localhost:5000/\", {\n+export const removeFromWishlist = createAsyncThunk(\"\", async ({ productId, userId }) => {\n+    await fetch(\"http://localhost:5000/removeFromWishlist\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ productId, userId }),\n     });\n"
                },
                {
                    "date": 1743696761866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \n // Fetch Wishlist from API\n export const fetchWishlist = createAsyncThunk(\"wishlist/fetch\", async (userId) => {\n     const response = await fetch(`http://localhost:5000/wishlist/${userId}`);\n-    return response.json();\n+    return response.json();wishlist/:userId\n });\n \n // Add to Wishlist\n export const addToWishlist = createAsyncThunk(\"addToWishlist\", async ({ productId, userId }) => {\n@@ -16,9 +16,9 @@\n     return productId;\n });\n \n // Remove from Wishlist\n-export const removeFromWishlist = createAsyncThunk(\"\", async ({ productId, userId }) => {\n+export const removeFromWishlist = createAsyncThunk(\"removeFromWishlist\", async ({ productId, userId }) => {\n     await fetch(\"http://localhost:5000/removeFromWishlist\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ productId, userId }),\n"
                },
                {
                    "date": 1743696775448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \n // Fetch Wishlist from API\n export const fetchWishlist = createAsyncThunk(\"wishlist/fetch\", async (userId) => {\n     const response = await fetch(`http://localhost:5000/wishlist/${userId}`);\n-    return response.json();wishlist/:userId\n+    return response.json();\n });\n \n // Add to Wishlist\n export const addToWishlist = createAsyncThunk(\"addToWishlist\", async ({ productId, userId }) => {\n"
                },
                {
                    "date": 1743712509134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \n // Fetch Wishlist from API\n export const fetchWishlist = createAsyncThunk(\"wishlist/fetch\", async (userId) => {\n     const response = await fetch(`http://localhost:5000/wishlist/${userId}`);\n-    return response.json();\n+    return ;\n });\n \n // Add to Wishlist\n export const addToWishlist = createAsyncThunk(\"addToWishlist\", async ({ productId, userId }) => {\n"
                },
                {
                    "date": 1743712522705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \n // Fetch Wishlist from API\n export const fetchWishlist = createAsyncThunk(\"wishlist/fetch\", async (userId) => {\n     const response = await fetch(`http://localhost:5000/wishlist/${userId}`);\n-    return  JSON.stringify(r);\n+    return  JSON.stringify(re);\n });\n \n // Add to Wishlist\n export const addToWishlist = createAsyncThunk(\"addToWishlist\", async ({ productId, userId }) => {\n"
                }
            ],
            "date": 1740916344890,
            "name": "Commit-0",
            "content": "import { createSlice } from \"@reduxjs/toolkit\";\n\nconst loadCartFromStorage =()=>{\n    const storedCart = loadCartFromStorage.getItem(\"cart\");\n    return storedCart ? JSON.parse(storedCart) : []\n}\nconst cartSlice = createSlice({\n    name: \"cart\",\n    initialState: {\n        items: [],\n    },\n    reducers: {\n        setCart: (state, action) => {\n            state.items = action.payload;\n            localStorage.setItem(\"cart\", JSON.stringify(state.items)); // Save to localStorage\n        },\n        addToCart: (state, action) => {\n            state.items.push(action.payload);\n            localStorage.setItem(\"cart\", JSON.stringify(state.items)); // Save to localStorage\n        },\n        removeFromCart: (state, action) => {\n            state.items = state.items.filter(item => item.id !== action.payload);\n            localStorage.setItem(\"cart\", JSON.stringify(state.items));\n        },\n        clearCart: (state) => {\n            state.items = [];\n            // localStorage.removeItem(\"cart\");\n        }\n    }\n});\n\nexport const { setCart, addToCart, removeFromCart, clearCart } = cartSlice.actions;\nexport default cartSlice.reducer;"
        }
    ]
}