{
    "sourceFile": "src/wishListActions.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1743620841281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743620847638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +0,0 @@\n-import { configureStore } from \"@reduxjs/toolkit\";\n-import wishlistReducer from \"./wishListReducer\"; // Import the reducer\n-\n-const whishliststore = configureStore({\n-  reducer: {\n-    wishlist: wishlistReducer, // Add wishlist to Redux state\n-  },\n-});\n-\n-export default whishliststore;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743620866706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+// Helper function to get device ID\n+const getDeviceId = () => {\n+  let deviceId = localStorage.getItem('deviceId');\n+  if (!deviceId) {\n+    deviceId = 'device_' + Math.random().toString(36).substr(2, 9);\n+    localStorage.setItem('deviceId', deviceId);\n+  }\n+  return deviceId;\n+};\n+\n+// Toggle wishlist item\n+export const toggleWishlistItem = (productId) => async (dispatch, getState) => {\n+  const token = localStorage.getItem('token');\n+  const deviceId = getDeviceId();\n+  \n+  if (token) {\n+    // Logged-in user - update account.json\n+    const user = getState().auth.user;\n+    const isInWishlist = user.wishlist.includes(productId);\n+    \n+    const method = isInWishlist ? 'DELETE' : 'POST';\n+    await fetch(`/api/wishlist/${productId}, {\n+      method,\n+      headers: { 'Authorization': Bearer ${token} }\n+    });\n+    \n+    dispatch({\n+      type: 'TOGGLE_WISHLIST',\n+      payload: { productId, isAdding: !isInWishlist }\n+    });\n+  } else {\n+    // Guest user - update local storage and guestWishlists\n+    const guestWishlist = JSON.parse(localStorage.getItem('guestWishlist')) || [];\n+    const isInWishlist = guestWishlist.includes(productId);\n+    \n+    const updatedWishlist = isInWishlist\n+      ? guestWishlist.filter(id => id !== productId)\n+      : [...guestWishlist, productId];\n+    \n+    localStorage.setItem('guestWishlist', JSON.stringify(updatedWishlist));\n+    \n+    // Update guestWishlists in account.json (mock API call)\n+    await fetch('/api/guest-wishlist', {\n+      method: 'POST',\n+      headers: { 'Content-Type': 'application/json' },\n+      body: JSON.stringify({ deviceId, productId, action: isInWishlist ? 'remove' : 'add' })\n+    });\n+    \n+    dispatch({\n+      type: 'UPDATE_GUEST_WISHLIST',\n+      payload: updatedWishlist\n+    });\n+  }\n+};\n+\n+// Sync wishlist after login\n+export const syncWishlist = () => async (dispatch, getState) => {\n+  const token = localStorage.getItem('token');\n+  if (!token) return;\n+\n+  const deviceId = getDeviceId();\n+  const guestWishlist = JSON.parse(localStorage.getItem('guestWishlist')) || [];\n+  \n+  if (guestWishlist.length > 0) {\n+    // Merge guest wishlist with user account\n+    await fetch('/api/wishlist/sync', {\n+      method: 'POST',\n+      headers: { \n+        'Content-Type': 'application/json',\n+        'Authorization': Bearer ${token}\n+      },\n+      body: JSON.stringify({ productIds: guestWishlist })\n+    });\n+    \n+    // Clear guest wishlist\n+    localStorage.removeItem('guestWishlist');\n+    await fetch('/api/guest-wishlist/clear', {\n+      method: 'POST',\n+      headers: { 'Content-Type': 'application/json' },\n+      body: JSON.stringify({ deviceId })\n+    });\n+  }\n+  \n+  // Load user's updated wishlist\n+  const res = await fetch('/api/wishlist', {\n+    headers: { 'Authorization': Bearer ${token} }\n+  });\n+  const { wishlist } = await res.json();\n+  \n+  dispatch({\n+    type: 'SYNC_WISHLIST',\n+    payload: wishlist\n+  });\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743620873390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     const user = getState().auth.user;\n     const isInWishlist = user.wishlist.includes(productId);\n     \n     const method = isInWishlist ? 'DELETE' : 'POST';\n-    await fetch(`/api/wishlist/${productId}, {\n+    await fetch(`/api/wishlist/${productId}`, {\n       method,\n       headers: { 'Authorization': Bearer ${token} }\n     });\n     \n"
                },
                {
                    "date": 1743620880355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     \n     const method = isInWishlist ? 'DELETE' : 'POST';\n     await fetch(`/api/wishlist/${productId}`, {\n       method,\n-      headers: { 'Authorization': Bearer ${token} }\n+      headers: { 'Authorization': `Bearer ${token}` }\n     });\n     \n     dispatch({\n       type: 'TOGGLE_WISHLIST',\n"
                },
                {
                    "date": 1743620892120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n     await fetch('/api/wishlist/sync', {\n       method: 'POST',\n       headers: { \n         'Content-Type': 'application/json',\n-        'Authorization': Bearer ${token}\n+        'Authorization': `Bearer ${token}\n       },\n       body: JSON.stringify({ productIds: guestWishlist })\n     });\n     \n"
                },
                {
                    "date": 1743620901767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n     await fetch('/api/wishlist/sync', {\n       method: 'POST',\n       headers: { \n         'Content-Type': 'application/json',\n-        'Authorization': `Bearer ${token}\n+        'Authorization': `Bearer ${token}`\n       },\n       body: JSON.stringify({ productIds: guestWishlist })\n     });\n     \n@@ -82,9 +82,9 @@\n   }\n   \n   // Load user's updated wishlist\n   const res = await fetch('/api/wishlist', {\n-    headers: { 'Authorization': Bearer ${token} }\n+    headers: { 'Authorization': `Bearer ${token} }\n   });\n   const { wishlist } = await res.json();\n   \n   dispatch({\n"
                },
                {
                    "date": 1743621057349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n   }\n   \n   // Load user's updated wishlist\n   const res = await fetch('/api/wishlist', {\n-    headers: { 'Authorization': `Bearer ${token} }\n+    headers: { 'Authorization': `Bearer ${token}` }\n   });\n   const { wishlist } = await res.json();\n   \n   dispatch({\n"
                },
                {
                    "date": 1743621077571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,94 +1,66 @@\n-// Helper function to get device ID\n+import { get, post, del } from '../utils/api';\n+\n+// Generate or retrieve device ID\n const getDeviceId = () => {\n   let deviceId = localStorage.getItem('deviceId');\n   if (!deviceId) {\n-    deviceId = 'device_' + Math.random().toString(36).substr(2, 9);\n+    deviceId = 1device_${Math.random().toString(36).substr(2, 9)};\n     localStorage.setItem('deviceId', deviceId);\n   }\n   return deviceId;\n };\n \n-// Toggle wishlist item\n-export const toggleWishlistItem = (productId) => async (dispatch, getState) => {\n-  const token = localStorage.getItem('token');\n+// Add to wishlist\n+export const addToWishlist = (productId) => async (dispatch, getState) => {\n+  const state = getState();\n+  const token = state.auth.token;\n   const deviceId = getDeviceId();\n-  \n+\n   if (token) {\n-    // Logged-in user - update account.json\n-    const user = getState().auth.user;\n-    const isInWishlist = user.wishlist.includes(productId);\n-    \n-    const method = isInWishlist ? 'DELETE' : 'POST';\n-    await fetch(`/api/wishlist/${productId}`, {\n-      method,\n-      headers: { 'Authorization': `Bearer ${token}` }\n-    });\n-    \n-    dispatch({\n-      type: 'TOGGLE_WISHLIST',\n-      payload: { productId, isAdding: !isInWishlist }\n-    });\n+    // Authenticated user\n+    await post('/account/wishlist', { productId }, token);\n+    dispatch({ type: 'ADD_TO_WISHLIST', payload: productId });\n   } else {\n-    // Guest user - update local storage and guestWishlists\n-    const guestWishlist = JSON.parse(localStorage.getItem('guestWishlist')) || [];\n-    const isInWishlist = guestWishlist.includes(productId);\n-    \n-    const updatedWishlist = isInWishlist\n-      ? guestWishlist.filter(id => id !== productId)\n-      : [...guestWishlist, productId];\n-    \n-    localStorage.setItem('guestWishlist', JSON.stringify(updatedWishlist));\n-    \n-    // Update guestWishlists in account.json (mock API call)\n-    await fetch('/api/guest-wishlist', {\n-      method: 'POST',\n-      headers: { 'Content-Type': 'application/json' },\n-      body: JSON.stringify({ deviceId, productId, action: isInWishlist ? 'remove' : 'add' })\n-    });\n-    \n-    dispatch({\n-      type: 'UPDATE_GUEST_WISHLIST',\n-      payload: updatedWishlist\n-    });\n+    // Guest user\n+    const guestWishlist = [...(state.wishlist.guestItems || []), productId];\n+    localStorage.setItem('guestWishlist', JSON.stringify(guestWishlist));\n+    await post('/guest/wishlist', { deviceId, productId });\n+    dispatch({ type: 'UPDATE_GUEST_WISHLIST', payload: guestWishlist });\n   }\n };\n \n+// Remove from wishlist\n+export const removeFromWishlist = (productId) => async (dispatch, getState) => {\n+  const state = getState();\n+  const token = state.auth.token;\n+  const deviceId = getDeviceId();\n+\n+  if (token) {\n+    // Authenticated user\n+    await del(/account/wishlist/${productId}, {}, token);\n+    dispatch({ type: 'REMOVE_FROM_WISHLIST', payload: productId });\n+  } else {\n+    // Guest user\n+    const guestWishlist = (state.wishlist.guestItems || []).filter(id => id !== productId);\n+    localStorage.setItem('guestWishlist', JSON.stringify(guestWishlist));\n+    await del(/guest/wishlist/${productId}, { deviceId });\n+    dispatch({ type: 'UPDATE_GUEST_WISHLIST', payload: guestWishlist });\n+  }\n+};\n+\n // Sync wishlist after login\n export const syncWishlist = () => async (dispatch, getState) => {\n-  const token = localStorage.getItem('token');\n-  if (!token) return;\n-\n   const deviceId = getDeviceId();\n   const guestWishlist = JSON.parse(localStorage.getItem('guestWishlist')) || [];\n-  \n-  if (guestWishlist.length > 0) {\n-    // Merge guest wishlist with user account\n-    await fetch('/api/wishlist/sync', {\n-      method: 'POST',\n-      headers: { \n-        'Content-Type': 'application/json',\n-        'Authorization': `Bearer ${token}`\n-      },\n-      body: JSON.stringify({ productIds: guestWishlist })\n-    });\n-    \n-    // Clear guest wishlist\n+  const token = getState().auth.token;\n+\n+  if (guestWishlist.length > 0 && token) {\n+    await post('/account/wishlist/sync', { productIds: guestWishlist }, token);\n     localStorage.removeItem('guestWishlist');\n-    await fetch('/api/guest-wishlist/clear', {\n-      method: 'POST',\n-      headers: { 'Content-Type': 'application/json' },\n-      body: JSON.stringify({ deviceId })\n-    });\n+    await del(/guest/wishlist/clear, { deviceId });\n   }\n-  \n-  // Load user's updated wishlist\n-  const res = await fetch('/api/wishlist', {\n-    headers: { 'Authorization': `Bearer ${token}` }\n-  });\n-  const { wishlist } = await res.json();\n-  \n-  dispatch({\n-    type: 'SYNC_WISHLIST',\n-    payload: wishlist\n-  });\n+\n+  // Refresh wishlist from server\n+  const { wishlist } = await get('/account/wishlist', {}, token);\n+  dispatch({ type: 'SYNC_WISHLIST', payload: wishlist });\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743621084683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n // Generate or retrieve device ID\n const getDeviceId = () => {\n   let deviceId = localStorage.getItem('deviceId');\n   if (!deviceId) {\n-    deviceId = `device_${Math.random().toString(36).substr(2, 9)};\n+    deviceId = `device_${Math.random().toString(36).substr(2, 9)}`;\n     localStorage.setItem('deviceId', deviceId);\n   }\n   return deviceId;\n };\n"
                },
                {
                    "date": 1743621836810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,66 +0,0 @@\n-import { get, post, del } from '../utils/api';\n-\n-// Generate or retrieve device ID\n-const getDeviceId = () => {\n-  let deviceId = localStorage.getItem('deviceId');\n-  if (!deviceId) {\n-    deviceId = `device_${Math.random().toString(36).substr(2, 9)}`;\n-    localStorage.setItem('deviceId', deviceId);\n-  }\n-  return deviceId;\n-};\n-\n-// Add to wishlist\n-export const addToWishlist = (productId) => async (dispatch, getState) => {\n-  const state = getState();\n-  const token = state.auth.token;\n-  const deviceId = getDeviceId();\n-\n-  if (token) {\n-    // Authenticated user\n-    await post('/account/wishlist', { productId }, token);\n-    dispatch({ type: 'ADD_TO_WISHLIST', payload: productId });\n-  } else {\n-    // Guest user\n-    const guestWishlist = [...(state.wishlist.guestItems || []), productId];\n-    localStorage.setItem('guestWishlist', JSON.stringify(guestWishlist));\n-    await post('/guest/wishlist', { deviceId, productId });\n-    dispatch({ type: 'UPDATE_GUEST_WISHLIST', payload: guestWishlist });\n-  }\n-};\n-\n-// Remove from wishlist\n-export const removeFromWishlist = (productId) => async (dispatch, getState) => {\n-  const state = getState();\n-  const token = state.auth.token;\n-  const deviceId = getDeviceId();\n-\n-  if (token) {\n-    // Authenticated user\n-    await del(`/account/wishlist/${productId}`, {}, token);\n-    dispatch({ type: 'REMOVE_FROM_WISHLIST', payload: productId });\n-  } else {\n-    // Guest user\n-    const guestWishlist = (state.wishlist.guestItems || []).filter(id => id !== productId);\n-    localStorage.setItem('guestWishlist', JSON.stringify(guestWishlist));\n-    await del(`/guest/wishlist/${productId}`, { deviceId });\n-    dispatch({ type: 'UPDATE_GUEST_WISHLIST', payload: guestWishlist });\n-  }\n-};\n-\n-// Sync wishlist after login\n-export const syncWishlist = () => async (dispatch, getState) => {\n-  const deviceId = getDeviceId();\n-  const guestWishlist = JSON.parse(localStorage.getItem('guestWishlist')) || [];\n-  const token = getState().auth.token;\n-\n-  if (guestWishlist.length > 0 && token) {\n-    await post('/account/wishlist/sync', { productIds: guestWishlist }, token);\n-    localStorage.removeItem('guestWishlist');\n-    await del(/guest/wishlist/clear, { deviceId });\n-  }\n-\n-  // Refresh wishlist from server\n-  const { wishlist } = await get('/account/wishlist', {}, token);\n-  dispatch({ type: 'SYNC_WISHLIST', payload: wishlist });\n-};\n\\ No newline at end of file\n"
                }
            ],
            "date": 1743620841281,
            "name": "Commit-0",
            "content": "import { configureStore } from \"@reduxjs/toolkit\";\nimport wishlistReducer from \"./wishListReducer\"; // Import the reducer\n\nconst whishliststore = configureStore({\n  reducer: {\n    wishlist: wishlistReducer, // Add wishlist to Redux state\n  },\n});\n\nexport default whishliststore;"
        }
    ]
}