{
    "sourceFile": "src/signIN.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 111,
            "patches": [
                {
                    "date": 1738184033823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738184040906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useContext, useState } from \"react\";\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n-import {AuthContext } from \".\n+import {AuthContext } from \"./\"\n \n function SignIN({onSignIn}) {\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n"
                },
                {
                    "date": 1738253643863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useContext, useState } from \"react\";\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n-import {AuthContext } from \"./\"\n+import {AuthContext } from \"./AuthContext\"\n \n function SignIN({onSignIn}) {\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n@@ -16,9 +16,9 @@\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(\"http://localhost:5000/signin\", {\n+      const response = await fetch(\"/signin\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n"
                },
                {
                    "date": 1738253652328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(\"/signin\", {\n+      const response = await fetch(`${/signin\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n"
                },
                {
                    "date": 1738253663911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n import {AuthContext } from \"./AuthContext\"\n \n-function SignIN({onSignIn}) {\n+function SignIN({onSignIn,api}) {\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n@@ -16,9 +16,9 @@\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(`${/signin\", {\n+      const response = await fetch(`${api}/signin\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n"
                },
                {
                    "date": 1738253669325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n import {AuthContext } from \"./AuthContext\"\n \n-function SignIN({onSignIn,api}) {\n+function SignIN({api}) {\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n"
                },
                {
                    "date": 1738253680524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(`${api}/signin\", {\n+      const response = await fetch(`${api}/signin`, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n"
                },
                {
                    "date": 1738253830336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,11 @@\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.role);\n       onSignIn()\n       navigate('/newProduct')\n+\n+\n+      \n     } catch (err) {\n       setLoading(false);\n       setError(\"An error occurred. Please try again.\");\n     }\n"
                },
                {
                    "date": 1738253843792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,28 @@\n       onSignIn()\n       navigate('/newProduct')\n \n \n-      \n+      const response = await fetch(\"https://your-api.com/login\", {\n+        method: \"POST\",\n+        headers: { \"Content-Type\": \"application/json\" },\n+        body: JSON.stringify({ username: \"JohnDoe\" }),\n+    });\n+    const data = await response.json();\n+\n+    if (data.success) {\n+        const userData = {\n+            username: data.username,\n+            profileImage: data.profileImage, // API should return profile image URL\n+        };\n+\n+        localStorage.setItem(\"user\", JSON.stringify(userData));\n+        setUser(userData);\n+    } else {\n+        alert(\"Login failed\");\n+    }\n+} \n+}\n     } catch (err) {\n       setLoading(false);\n       setError(\"An error occurred. Please try again.\");\n     }\n"
                },
                {
                    "date": 1738253849541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,28 +39,29 @@\n       onSignIn()\n       navigate('/newProduct')\n \n \n-      const response = await fetch(\"https://your-api.com/login\", {\n-        method: \"POST\",\n-        headers: { \"Content-Type\": \"application/json\" },\n-        body: JSON.stringify({ username: \"JohnDoe\" }),\n-    });\n-    const data = await response.json();\n+        const response = await fetch(\"https://your-api.com/login\", {\n+            method: \"POST\",\n+            headers: { \"Content-Type\": \"application/json\" },\n+            body: JSON.stringify({ username: \"JohnDoe\" }),\n+        });\n+        const data = await response.json();\n \n-    if (data.success) {\n-        const userData = {\n-            username: data.username,\n-            profileImage: data.profileImage, // API should return profile image URL\n-        };\n+        if (data.success) {\n+            const userData = {\n+                username: data.username,\n+                profileImage: data.profileImage, // API should return profile image URL\n+            };\n \n-        localStorage.setItem(\"user\", JSON.stringify(userData));\n-        setUser(userData);\n-    } else {\n-        alert(\"Login failed\");\n+            localStorage.setItem(\"user\", JSON.stringify(userData));\n+            setUser(userData);\n+        } else {\n+            alert(\"Login failed\");\n+        }\n+    } catch (error) {\n+        console.error(\"Error logging in:\", error);\n     }\n-} \n-}\n     } catch (err) {\n       setLoading(false);\n       setError(\"An error occurred. Please try again.\");\n     }\n"
                },
                {
                    "date": 1738253909129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,33 +39,38 @@\n       onSignIn()\n       navigate('/newProduct')\n \n \n-        const response = await fetch(\"https://your-api.com/login\", {\n-            method: \"POST\",\n-            headers: { \"Content-Type\": \"application/json\" },\n-            body: JSON.stringify({ username: \"JohnDoe\" }),\n-        });\n-        const data = await response.json();\n-\n-        if (data.success) {\n-            const userData = {\n-                username: data.username,\n-                profileImage: data.profileImage, // API should return profile image URL\n-            };\n-\n-            localStorage.setItem(\"user\", JSON.stringify(userData));\n-            setUser(userData);\n-        } else {\n-            alert(\"Login failed\");\n-        }\n-    } catch (error) {\n-        console.error(\"Error logging in:\", error);\n-    }\n+      \n     } catch (err) {\n       setLoading(false);\n       setError(\"An error occurred. Please try again.\");\n     }\n+\n+\n+    try {\n+      const response = await fetch(\"https://your-api.com/login\", {\n+          method: \"POST\",\n+          headers: { \"Content-Type\": \"application/json\" },\n+          body: JSON.stringify({ username: \"JohnDoe\" }),\n+      });\n+      const data = await response.json();\n+\n+      if (data.success) {\n+          const userData = {\n+              username: data.username,\n+              profileImage: data.profileImage, // API should return profile image URL\n+          };\n+\n+          localStorage.setItem(\"user\", JSON.stringify(userData));\n+          setUser(userData);\n+      } else {\n+          alert(\"Login failed\");\n+      }\n+  } catch (error) {\n+      console.error(\"Error logging in:\", error);\n+  }\n+}\n   };\n \n   return (\n     <div>\n"
                },
                {
                    "date": 1738253948395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n       }\n   } catch (error) {\n       console.error(\"Error logging in:\", error);\n   }\n-}\n+\n   };\n \n   return (\n     <div>\n"
                },
                {
                    "date": 1738254011383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     }\n \n \n     try {\n-      const response = await fetch(\"https://your-api.com/login\", {\n+      const response = await fetch(\", {\n           method: \"POST\",\n           headers: { \"Content-Type\": \"application/json\" },\n           body: JSON.stringify({ username: \"JohnDoe\" }),\n       });\n"
                },
                {
                    "date": 1738254035569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,12 +47,12 @@\n     }\n \n \n     try {\n-      const response = await fetch(\", {\n+      const response = await fetch(`${api}/signin`, {\n           method: \"POST\",\n           headers: { \"Content-Type\": \"application/json\" },\n-          body: JSON.stringify({ username: \"JohnDoe\" }),\n+          body: JSON.stringify({ username:  }),\n       });\n       const data = await response.json();\n \n       if (data.success) {\n"
                },
                {
                    "date": 1738254065432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     try {\n       const response = await fetch(`${api}/signin`, {\n           method: \"POST\",\n           headers: { \"Content-Type\": \"application/json\" },\n-          body: JSON.stringify({ username:  }),\n+          body: JSON.stringify({  }),\n       });\n       const data = await response.json();\n \n       if (data.success) {\n"
                },
                {
                    "date": 1738254135876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,15 +50,15 @@\n     try {\n       const response = await fetch(`${api}/signin`, {\n           method: \"POST\",\n           headers: { \"Content-Type\": \"application/json\" },\n-          body: JSON.stringify({  }),\n+          body: JSON.stringify({ identifier }),\n       });\n       const data = await response.json();\n \n       if (data.success) {\n           const userData = {\n-              username: data.username,\n+              : data.,\n               profileImage: data.profileImage, // API should return profile image URL\n           };\n \n           localStorage.setItem(\"user\", JSON.stringify(userData));\n"
                },
                {
                    "date": 1738254373463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n       login(data.token, data.role)\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.role);\n-      onSignIn()\n+      \n       navigate('/newProduct')\n \n \n       \n@@ -56,9 +56,9 @@\n       const data = await response.json();\n \n       if (data.success) {\n           const userData = {\n-              : data.,\n+              identifier: data.identifier,\n               profileImage: data.profileImage, // API should return profile image URL\n           };\n \n           localStorage.setItem(\"user\", JSON.stringify(userData));\n"
                },
                {
                    "date": 1738254553461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n       login(data.token, data.role)\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.role);\n-      \n+      onSignIn()\n       navigate('/newProduct')\n \n \n       \n"
                },
                {
                    "date": 1738254575951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n       login(data.token, data.role)\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.role);\n-      onSignIn()\n+      \n       navigate('/newProduct')\n \n \n       \n@@ -56,9 +56,9 @@\n       const data = await response.json();\n \n       if (data.success) {\n           const userData = {\n-              identifier: data.identifier,\n+              user: data.user,\n               profileImage: data.profileImage, // API should return profile image URL\n           };\n \n           localStorage.setItem(\"user\", JSON.stringify(userData));\n"
                },
                {
                    "date": 1738254581739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n       login(data.token, data.role)\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.role);\n-      \n+      onSignIn()\n       navigate('/newProduct')\n \n \n       \n@@ -56,9 +56,9 @@\n       const data = await response.json();\n \n       if (data.success) {\n           const userData = {\n-              user: data.user,\n+              ide: data.ide,\n               profileImage: data.profileImage, // API should return profile image URL\n           };\n \n           localStorage.setItem(\"user\", JSON.stringify(userData));\n"
                },
                {
                    "date": 1738254680023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,18 +47,18 @@\n     }\n \n \n     try {\n-      const response = await fetch(`${api}/signin`, {\n+      const response = await fetch(`${api}/`, {\n           method: \"POST\",\n           headers: { \"Content-Type\": \"application/json\" },\n           body: JSON.stringify({ identifier }),\n       });\n       const data = await response.json();\n \n       if (data.success) {\n           const userData = {\n-              ide: data.ide,\n+              username: data.username,\n               profileImage: data.profileImage, // API should return profile image URL\n           };\n \n           localStorage.setItem(\"user\", JSON.stringify(userData));\n"
                },
                {
                    "date": 1738254686935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     }\n \n \n     try {\n-      const response = await fetch(`${api}/`, {\n+      const response = await fetch(`${api}/account`, {\n           method: \"POST\",\n           headers: { \"Content-Type\": \"application/json\" },\n           body: JSON.stringify({ identifier }),\n       });\n"
                },
                {
                    "date": 1738254701556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     }\n \n \n     try {\n-      const response = await fetch(`${api}/account`, {\n+      const response = await fetch(`${api}/a`, {\n           method: \"POST\",\n           headers: { \"Content-Type\": \"application/json\" },\n           body: JSON.stringify({ identifier }),\n       });\n"
                },
                {
                    "date": 1738254706857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     }\n \n \n     try {\n-      const response = await fetch(`${api}/a`, {\n+      const response = await fetch(`${api}/s`, {\n           method: \"POST\",\n           headers: { \"Content-Type\": \"application/json\" },\n           body: JSON.stringify({ identifier }),\n       });\n"
                },
                {
                    "date": 1738254714909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     }\n \n \n     try {\n-      const response = await fetch(`${api}/s`, {\n+      const response = await fetch(`${api}/signin`, {\n           method: \"POST\",\n           headers: { \"Content-Type\": \"application/json\" },\n           body: JSON.stringify({ identifier }),\n       });\n"
                },
                {
                    "date": 1738255000739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     try {\n       const response = await fetch(`${api}/signin`, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n-        body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n+        body: JSON.stringify({ identifier, password}), // Send identifier (email or username)\n       });\n \n       const data = await response.json();\n       setLoading(false);\n"
                },
                {
                    "date": 1738255006267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     try {\n       const response = await fetch(`${api}/signin`, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n-        body: JSON.stringify({ identifier, password}), // Send identifier (email or username)\n+        body: JSON.stringify({ identifier, password username}), // Send identifier (email or username)\n       });\n \n       const data = await response.json();\n       setLoading(false);\n"
                },
                {
                    "date": 1738255011874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     try {\n       const response = await fetch(`${api}/signin`, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n-        body: JSON.stringify({ identifier, password username}), // Send identifier (email or username)\n+        body: JSON.stringify({ identifier, passwordusername}), // Send identifier (email or username)\n       });\n \n       const data = await response.json();\n       setLoading(false);\n"
                },
                {
                    "date": 1738255016912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     try {\n       const response = await fetch(`${api}/signin`, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n-        body: JSON.stringify({ identifier, passwordusername}), // Send identifier (email or username)\n+        body: JSON.stringify({ identifier, password,username }), // Send identifier (email or username)\n       });\n \n       const data = await response.json();\n       setLoading(false);\n"
                },
                {
                    "date": 1738255026850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     try {\n       const response = await fetch(`${api}/signin`, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n-        body: JSON.stringify({ identifier, password,username }), // Send identifier (email or username)\n+        body: JSON.stringify({ identifier, password,username profile}), // Send identifier (email or username)\n       });\n \n       const data = await response.json();\n       setLoading(false);\n"
                },
                {
                    "date": 1738255035071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     try {\n       const response = await fetch(`${api}/signin`, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n-        body: JSON.stringify({ identifier, password,username profile}), // Send identifier (email or username)\n+        body: JSON.stringify({ identifier, password,username, profileImage}), // Send identifier (email or username)\n       });\n \n       const data = await response.json();\n       setLoading(false);\n"
                },
                {
                    "date": 1738255093694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,33 +46,10 @@\n       setError(\"An error occurred. Please try again.\");\n     }\n \n \n-    try {\n-      const response = await fetch(`${api}/signin`, {\n-          method: \"POST\",\n-          headers: { \"Content-Type\": \"application/json\" },\n-          body: JSON.stringify({ identifier }),\n-      });\n-      const data = await response.json();\n+   \n \n-      if (data.success) {\n-          const userData = {\n-              username: data.username,\n-              profileImage: data.profileImage, // API should return profile image URL\n-          };\n-\n-          localStorage.setItem(\"user\", JSON.stringify(userData));\n-          setUser(userData);\n-      } else {\n-          alert(\"Login failed\");\n-      }\n-  } catch (error) {\n-      console.error(\"Error logging in:\", error);\n-  }\n-\n-  };\n-\n   return (\n     <div>\n       <h2>Login</h2>\n       <form onSubmit={handleLogin}>\n"
                },
                {
                    "date": 1738255102901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n       setError(\"An error occurred. Please try again.\");\n     }\n \n \n-   \n+  }\n \n   return (\n     <div>\n       <h2>Login</h2>\n"
                },
                {
                    "date": 1738255109244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     try {\n       const response = await fetch(`${api}/signin`, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n-        body: JSON.stringify({ identifier, password,username, profileImage}), // Send identifier (email or username)\n+        body: JSON.stringify({ identifier, password, username, profileImage}), // Send identifier (email or username)\n       });\n \n       const data = await response.json();\n       setLoading(false);\n"
                },
                {
                    "date": 1738255160976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n \n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n-      sessionStorage.setItem('username',identifier);\n+      sessionStorage.setItem('username',);\n       sessionStorage.setItem('userrole',response.role);\n       onSignIn()\n       navigate('/newProduct')\n \n"
                },
                {
                    "date": 1738255166368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n \n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n-      sessionStorage.setItem('username',);\n+      sessionStorage.setItem('username',useName);\n       sessionStorage.setItem('userrole',response.role);\n       onSignIn()\n       navigate('/newProduct')\n \n"
                },
                {
                    "date": 1738255191302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n \n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n-      sessionStorage.setItem('username',useName);\n+      sessionStorage.setItem('username',responseusername);\n       sessionStorage.setItem('userrole',response.role);\n       onSignIn()\n       navigate('/newProduct')\n \n"
                },
                {
                    "date": 1738255220540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,10 @@\n \n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n-      sessionStorage.setItem('username',responseusername);\n+      sessionStorage.setItem('username',response.username);\n+      \n       sessionStorage.setItem('userrole',response.role);\n       onSignIn()\n       navigate('/newProduct')\n \n"
                },
                {
                    "date": 1738255231910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,10 @@\n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n       sessionStorage.setItem('username',response.username);\n-      \n       sessionStorage.setItem('userrole',response.role);\n+      sessionStorage.setItem('userrole',response.role);\n       onSignIn()\n       navigate('/newProduct')\n \n \n"
                },
                {
                    "date": 1738255237984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,10 @@\n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n       sessionStorage.setItem('username',response.username);\n+      sessionStorage.setItem('userrole',response.P);\n       sessionStorage.setItem('userrole',response.role);\n-      sessionStorage.setItem('userrole',response.role);\n       onSignIn()\n       navigate('/newProduct')\n \n \n"
                },
                {
                    "date": 1738255243645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n       sessionStorage.setItem('username',response.username);\n-      sessionStorage.setItem('userrole',response.P);\n+      sessionStorage.setItem('userrole',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n       onSignIn()\n       navigate('/newProduct')\n \n"
                },
                {
                    "date": 1738255264997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n       toast.success('Success');\n       sessionStorage.setItem('username',response.username);\n       sessionStorage.setItem('userrole',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n-      onSignIn()\n+      \n       navigate('/newProduct')\n \n \n       \n"
                },
                {
                    "date": 1738255304713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n+  \n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255329589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  \n+  const \n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255334801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const \n+  const [userma]\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255340088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [userma]\n+  const [username,]\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255356600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,]\n+  const [username,se]\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255363230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,se]\n+  const [username,setUser]\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255369429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,setUser]\n+  const [username,setUserName]\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255375548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,setUserName]\n+  const [username,setUserName] =user\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255384166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,setUserName] =user\n+  const [username,setUserName] =useState \n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255397225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,setUserName] =useState \n+  const [username,setUserName] =useState (null)\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255411477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n   const [username,setUserName] =useState (null)\n+  pro\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255418279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n   const [username,setUserName] =useState (null)\n-  pro\n+  const []\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255424933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n   const [username,setUserName] =useState (null)\n-  const []\n+  const [profileImage]\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255431555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n   const [username,setUserName] =useState (null)\n-  const [profileImage]\n+  const [profileImage, setProfile]\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255438660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n   const [username,setUserName] =useState (null)\n-  const [profileImage, setProfile]\n+  const [profileImage, setProfileImage] = \n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738255446011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n   const [username,setUserName] =useState (null)\n-  const [profileImage, setProfileImage] = \n+  const [profileImage, setProfileImage] = useState()\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738256051881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n   const [username,setUserName] =useState (null)\n-  const [profileImage, setProfileImage] = useState()\n+  const [profileImage, setProfileImage] = useState(null)\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n@@ -35,9 +35,9 @@\n \n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n-      sessionStorage.setItem('username',response.username);\n+      sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n       \n       navigate('/newProduct')\n"
                },
                {
                    "date": 1738256113378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n   const [username,setUserName] =useState (null)\n-  const [profileImage, setProfileImage] = useState(null)\n+  const [profileImage, setProfileImage] = useState(\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738256119037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,setUserName] =useState (null)\n-  const [profileImage, setProfileImage] = useState(\n+  const [username,setUserName] =useState ()\n+  const [profileImage, setProfileImage] = useState()\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n"
                },
                {
                    "date": 1738256125438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,setUserName] =useState ()\n+  const [username,setUserName] =useState (\"\")\n   const [profileImage, setProfileImage] = useState()\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n"
                },
                {
                    "date": 1738256131464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,setUserName] =useState (\"\")\n+  const [username,setUserName] =useState ()\n   const [profileImage, setProfileImage] = useState()\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n"
                },
                {
                    "date": 1738256149732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,setUserName] =useState ()\n+  const [username,setUserName] =useState (username)\n   const [profileImage, setProfileImage] = useState()\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n@@ -35,9 +35,9 @@\n \n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n-      sessionStorage.setItem('username',identifier);\n+      sessionStorage.setItem('username'identifier);\n       sessionStorage.setItem('userrole',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n       \n       navigate('/newProduct')\n"
                },
                {
                    "date": 1738256162390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n \n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n-      sessionStorage.setItem('username'identifier);\n+      sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n       \n       navigate('/newProduct')\n"
                },
                {
                    "date": 1738256174676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,8 +38,9 @@\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n+      sessionStorage.setItem('userrole',response.role);\n       \n       navigate('/newProduct')\n \n \n"
                },
                {
                    "date": 1738256183148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n-      sessionStorage.setItem('userrole',response.role);\n+      sessionStorage.setItem('userrole',response.profileImage);\n       \n       navigate('/newProduct')\n \n \n"
                },
                {
                    "date": 1738256297308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,setUserName] =useState (username)\n+  const [username,setUserName] =useState ()\n   const [profileImage, setProfileImage] = useState()\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n"
                },
                {
                    "date": 1738256338765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n-      sessionStorage.setItem('userrole',response.profileImage);\n+      sessionStorage.setItem('us',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n       sessionStorage.setItem('userrole',response.profileImage);\n       \n       navigate('/newProduct')\n"
                },
                {
                    "date": 1738256344979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n-      sessionStorage.setItem('us',response.profileImage);\n+      sessionStorage.setItem('Pro',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n       sessionStorage.setItem('userrole',response.profileImage);\n       \n       navigate('/newProduct')\n"
                },
                {
                    "date": 1738256352447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n-      sessionStorage.setItem('Pro',response.profileImage);\n+      sessionStorage.setItem('ProfileImage',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n       sessionStorage.setItem('userrole',response.profileImage);\n       \n       navigate('/newProduct')\n"
                },
                {
                    "date": 1738256360937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('ProfileImage',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n-      sessionStorage.setItem('userrole',response.profileImage);\n+      sessionStorage.setItem('us',response.profileImage);\n       \n       navigate('/newProduct')\n \n \n"
                },
                {
                    "date": 1738256372256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('ProfileImage',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n-      sessionStorage.setItem('us',response.profileImage);\n+      sessionStorage.setItem('userName',response.pr);\n       \n       navigate('/newProduct')\n \n \n"
                },
                {
                    "date": 1738256386941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('ProfileImage',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n-      sessionStorage.setItem('userName',response.pr);\n+      sessionStorage.setItem('userName',response.username);\n       \n       navigate('/newProduct')\n \n \n"
                },
                {
                    "date": 1738256398555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('ProfileImage',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n-      sessionStorage.setItem('userName',response.username);\n+      sessionStorage.setItem('userName',response.email);\n       \n       navigate('/newProduct')\n \n \n"
                },
                {
                    "date": 1738256480272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,setUserName] =useState ()\n+  const [username,setUserName] =useState (username)\n   const [profileImage, setProfileImage] = useState()\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n@@ -36,12 +36,12 @@\n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n-      sessionStorage.setItem('ProfileImage',response.profileImage);\n+      sessionStorage.setItem('userrole',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n-      sessionStorage.setItem('userName',response.email);\n       \n+      \n       navigate('/newProduct')\n \n \n       \n"
                },
                {
                    "date": 1738256488341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,setUserName] =useState (username)\n+  const [username,setUserName] =useState (user)\n   const [profileImage, setProfileImage] = useState()\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n@@ -39,9 +39,8 @@\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n       \n-      \n       navigate('/newProduct')\n \n \n       \n"
                },
                {
                    "date": 1738256508050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,8 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n-  const [username,setUserName] =useState (user)\n-  const [profileImage, setProfileImage] = useState()\n  const {login} = useContext(AuthContext)\n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n@@ -35,9 +33,9 @@\n \n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n-      sessionStorage.setItem('username',identifier);\n+      sessionStorage.setItem('username',response.username);\n       sessionStorage.setItem('userrole',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n       \n       navigate('/newProduct')\n"
                },
                {
                    "date": 1738256518985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n       toast.success('Success');\n       sessionStorage.setItem('username',response.username);\n       sessionStorage.setItem('userrole',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n-      \n+      onSignIn()\n       navigate('/newProduct')\n \n \n       \n"
                },
                {
                    "date": 1738256524761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,8 @@\n       toast.success('Success');\n       sessionStorage.setItem('username',response.username);\n       sessionStorage.setItem('userrole',response.profileImage);\n       sessionStorage.setItem('userrole',response.role);\n-      onSignIn()\n       navigate('/newProduct')\n \n \n       \n"
                },
                {
                    "date": 1738256538305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     try {\n       const response = await fetch(`${api}/signin`, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n-        body: JSON.stringify({ identifier, password, username, profileImage}), // Send identifier (email or username)\n+        body: JSON.stringify({ identifier, password,username, profileImage}), // Send identifier (email or username)\n       });\n \n       const data = await response.json();\n       setLoading(false);\n@@ -33,11 +33,11 @@\n \n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n-      sessionStorage.setItem('username',response.username);\n-      sessionStorage.setItem('userrole',response.profileImage);\n+      sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.role);\n+      onSignIn()\n       navigate('/newProduct')\n \n \n       \n"
                },
                {
                    "date": 1738256546466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n       setError(\"An error occurred. Please try again.\");\n     }\n \n \n-  }\n+   \n \n   return (\n     <div>\n       <h2>Login</h2>\n"
                },
                {
                    "date": 1738256562345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n       setError(\"An error occurred. Please try again.\");\n     }\n \n \n-   \n+    \n \n   return (\n     <div>\n       <h2>Login</h2>\n"
                },
                {
                    "date": 1738256591370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     try {\n       const response = await fetch(`${api}/signin`, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n-        body: JSON.stringify({ identifier, password,username, profileImage}), // Send identifier (email or username)\n+        body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n \n       const data = await response.json();\n       setLoading(false);\n@@ -46,10 +46,33 @@\n       setError(\"An error occurred. Please try again.\");\n     }\n \n \n-    \n+    try {\n+      const response = await fetch(`${api}/s`, {\n+          method: \"POST\",\n+          headers: { \"Content-Type\": \"application/json\" },\n+          body: JSON.stringify({ identifier }),\n+      });\n+      const data = await response.json();\n \n+      if (data.success) {\n+          const userData = {\n+              username: data.username,\n+              profileImage: data.profileImage, // API should return profile image URL\n+          };\n+\n+          localStorage.setItem(\"user\", JSON.stringify(userData));\n+          setUser(userData);\n+      } else {\n+          alert(\"Login failed\");\n+      }\n+  } catch (error) {\n+      console.error(\"Error logging in:\", error);\n+  }\n+\n+  };\n+\n   return (\n     <div>\n       <h2>Login</h2>\n       <form onSubmit={handleLogin}>\n"
                },
                {
                    "date": 1738256597932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     }\n \n \n     try {\n-      const response = await fetch(`${api}/s`, {\n+      const response = await fetch(`${api}/signin`, {\n           method: \"POST\",\n           headers: { \"Content-Type\": \"application/json\" },\n           body: JSON.stringify({ identifier }),\n       });\n"
                },
                {
                    "date": 1738256612255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     try {\n       const response = await fetch(`${api}/signin`, {\n           method: \"POST\",\n           headers: { \"Content-Type\": \"application/json\" },\n-          body: JSON.stringify({ identifier }),\n+          body: JSON.stringify({  }),\n       });\n       const data = await response.json();\n \n       if (data.success) {\n"
                },
                {
                    "date": 1738256620094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,31 +46,9 @@\n       setError(\"An error occurred. Please try again.\");\n     }\n \n \n-    try {\n-      const response = await fetch(`${api}/signin`, {\n-          method: \"POST\",\n-          headers: { \"Content-Type\": \"application/json\" },\n-          body: JSON.stringify({  }),\n-      });\n-      const data = await response.json();\n-\n-      if (data.success) {\n-          const userData = {\n-              username: data.username,\n-              profileImage: data.profileImage, // API should return profile image URL\n-          };\n-\n-          localStorage.setItem(\"user\", JSON.stringify(userData));\n-          setUser(userData);\n-      } else {\n-          alert(\"Login failed\");\n-      }\n-  } catch (error) {\n-      console.error(\"Error logging in:\", error);\n-  }\n-\n+    \n   };\n \n   return (\n     <div>\n"
                },
                {
                    "date": 1738256633212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,18 +37,12 @@\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.role);\n       onSignIn()\n       navigate('/newProduct')\n-\n-\n-      \n     } catch (err) {\n       setLoading(false);\n       setError(\"An error occurred. Please try again.\");\n     }\n-\n-\n-    \n   };\n \n   return (\n     <div>\n"
                },
                {
                    "date": 1738256645171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n import {AuthContext } from \"./AuthContext\"\n \n-function SignIN({api}) {\n+function SignIN({onSignIn}) {\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n@@ -16,9 +16,9 @@\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(`${api}/signin`, {\n+      const response = await fetch(`${api}/signin\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n"
                },
                {
                    "date": 1738256651364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(`${api}/signin\", {\n+      const response = await fetch(/signin\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n"
                },
                {
                    "date": 1738256657205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(/signin\", {\n+      const response = await fetch(`${api}/signin\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n"
                },
                {
                    "date": 1738256663378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n import {AuthContext } from \"./AuthContext\"\n \n-function SignIN({onSignIn}) {\n+function SignIN({api}) {\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n"
                },
                {
                    "date": 1738256674968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(`${api}/signin\", {\n+      const response = await fetch(`${api}/signin`, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n@@ -35,9 +35,9 @@\n       login(data.token, data.role)\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.role);\n-      onSignIn()\n+      \n       navigate('/newProduct')\n     } catch (err) {\n       setLoading(false);\n       setError(\"An error occurred. Please try again.\");\n"
                },
                {
                    "date": 1738848950494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(`${api}/signin`, {\n+      const response = await fetch(`${api}/signin`{\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n"
                },
                {
                    "date": 1738850249883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,19 @@\n-import React, { useContext, useState } from \"react\";\n-import { Link, useNavigate } from \"react-router-dom\";\n-import { toast } from \"react-toastify\";\n-import {AuthContext } from \"./AuthContext\"\n+import React, { useState } from \"react\";\n \n-function SignIN({api}) {\n+function Login() {\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n- const {login} = useContext(AuthContext)\n-  const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n     e.preventDefault();\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(`${api}/signin`{\n+      const response = await fetch(\"http://localhost:3000/signin\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n@@ -31,14 +26,9 @@\n         return;\n       }\n \n       localStorage.setItem(\"token\", data.token); // Store JWT token\n-      login(data.token, data.role)\n-      toast.success('Success');\n-      sessionStorage.setItem('username',identifier);\n-      sessionStorage.setItem('userrole',response.role);\n-      \n-      navigate('/newProduct')\n+      alert(\"Login successful!\");\n     } catch (err) {\n       setLoading(false);\n       setError(\"An error occurred. Please try again.\");\n     }\n@@ -70,5 +60,111 @@\n     </div>\n   );\n }\n \n-export default SignIN;\n\\ No newline at end of file\n+export default Login;\n+import { createContext, useState, useEffect } from \"react\";\n+\n+export const AuthContext = createContext();\n+\n+export const AuthProvider = ({ children }) => {\n+  const [user, setUser] = useState(null);\n+\n+  useEffect(() => {\n+    const token = localStorage.getItem(\"token\");\n+    const role = localStorage.getItem(\"role\");\n+    if (token && role) {\n+      setUser({ token, role });\n+    }\n+  }, []);\n+\n+  const login = (token, role) => {\n+    localStorage.setItem(\"token\", token);\n+    localStorage.setItem(\"role\", role);\n+    setUser({ token, role });\n+  };\n+\n+  const logout = () => {\n+    localStorage.removeItem(\"token\");\n+    localStorage.removeItem(\"role\");\n+    setUser(null);\n+  };\n+\n+  return (\n+    <AuthContext.Provider value={{ user, login, logout }}>\n+      {children}\n+    </AuthContext.Provider>\n+  );\n+};\n+import { useContext } from \"react\";\n+import { Navigate } from \"react-router-dom\";\n+import { AuthContext } from \"./AuthContext\";\n+\n+const ProtectedRoute = ({ children, allowedRoles }) => {\n+  const { user } = useContext(AuthContext);\n+\n+  if (!user) return <Navigate to=\"/login\" />;\n+  if (!allowedRoles.includes(user.role)) return <Navigate to=\"/unauthorized\" />;\n+\n+  return children;\n+};\n+\n+export default ProtectedRoute;\n+import React from \"react\";\n+import Sidebar from \"./Sidebar\";\n+import DashboardWidgets from \"./DashboardWidgets\";\n+\n+function Dashboard() {\n+  return (\n+    <div style={{ display: \"flex\" }}>\n+      <Sidebar />\n+      <div style={{ flexGrow: 1, padding: \"20px\" }}>\n+        <h2>Dashboard</h2>\n+        <DashboardWidgets />\n+      </div>\n+    </div>\n+  );\n+}\n+\n+export default Dashboard;\n+npm install react-router-dom chart.js react-chartjs-2\n+import React from \"react\";\n+import { Link } from \"react-router-dom\";\n+import { useContext } from \"react\";\n+import { AuthContext } from \"./AuthContext\";\n+\n+function Sidebar() {\n+  const { user, logout } = useContext(AuthContext);\n+\n+  return (\n+    <div style={{ width: \"200px\", background: \"#333\", color: \"#fff\", height: \"100vh\", padding: \"20px\" }}>\n+      <h3>Dashboard</h3>\n+      <ul style={{ listStyle: \"none\", padding: 0 }}>\n+        <li><Link to=\"/dashboard\" style={{ color: \"#fff\", textDecoration: \"none\" }}>Home</Link></li>\n+        {user?.role === \"admin\" && (\n+          <li><Link to=\"/admin\" style={{ color: \"#fff\", textDecoration: \"none\" }}>Admin Panel</Link></li>\n+        )}\n+        <li><button onClick={logout} style={{ color: \"#fff\", background: \"none\", border: \"none…\n+import React from \"react\";\n+import { Bar } from \"react-chartjs-2\";\n+\n+function DashboardWidgets() {\n+  const data = {\n+    labels: [\"Users\", \"Orders\", \"Revenue\"],\n+    datasets: [\n+      {\n+        label: \"Stats\",\n+        data: [100, 200, 300],\n+        backgroundColor: [\"blue\", \"green\", \"orange\"],\n+      },\n+    ],\n+  };\n+\n+  return (\n+    <div>\n+      <h3>Statistics</h3>\n+      <Bar data={data} />\n+    </div>\n+  );\n+}\n+\n+export default DashboardWidgets;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738850267339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,17 @@\n \n function Dashboard() {\n   return (\n     <div style={{ display: \"flex\" }}>\n-      <Sidebar />\n+   (\n+    <div>\n+      <h3>Statistics</h3>\n+      <Bar data={data} />\n+    </div>\n+  );\n+}\n+\n+export default DashboardWidgets;    <Sidebar />\n       <div style={{ flexGrow: 1, padding: \"20px\" }}>\n         <h2>Dashboard</h2>\n         <DashboardWidgets />\n       </div>\n@@ -158,13 +166,5 @@\n       },\n     ],\n   };\n \n-  return (\n-    <div>\n-      <h3>Statistics</h3>\n-      <Bar data={data} />\n-    </div>\n-  );\n-}\n-\n-export default DashboardWidgets;\n\\ No newline at end of file\n+  return\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738850297913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,110 +61,4 @@\n   );\n }\n \n export default Login;\n-import { createContext, useState, useEffect } from \"react\";\n-\n-export const AuthContext = createContext();\n-\n-export const AuthProvider = ({ children }) => {\n-  const [user, setUser] = useState(null);\n-\n-  useEffect(() => {\n-    const token = localStorage.getItem(\"token\");\n-    const role = localStorage.getItem(\"role\");\n-    if (token && role) {\n-      setUser({ token, role });\n-    }\n-  }, []);\n-\n-  const login = (token, role) => {\n-    localStorage.setItem(\"token\", token);\n-    localStorage.setItem(\"role\", role);\n-    setUser({ token, role });\n-  };\n-\n-  const logout = () => {\n-    localStorage.removeItem(\"token\");\n-    localStorage.removeItem(\"role\");\n-    setUser(null);\n-  };\n-\n-  return (\n-    <AuthContext.Provider value={{ user, login, logout }}>\n-      {children}\n-    </AuthContext.Provider>\n-  );\n-};\n-import { useContext } from \"react\";\n-import { Navigate } from \"react-router-dom\";\n-import { AuthContext } from \"./AuthContext\";\n-\n-const ProtectedRoute = ({ children, allowedRoles }) => {\n-  const { user } = useContext(AuthContext);\n-\n-  if (!user) return <Navigate to=\"/login\" />;\n-  if (!allowedRoles.includes(user.role)) return <Navigate to=\"/unauthorized\" />;\n-\n-  return children;\n-};\n-\n-export default ProtectedRoute;\n-import React from \"react\";\n-import Sidebar from \"./Sidebar\";\n-import DashboardWidgets from \"./DashboardWidgets\";\n-\n-function Dashboard() {\n-  return (\n-    <div style={{ display: \"flex\" }}>\n-   (\n-    <div>\n-      <h3>Statistics</h3>\n-      <Bar data={data} />\n-    </div>\n-  );\n-}\n-\n-export default DashboardWidgets;    <Sidebar />\n-      <div style={{ flexGrow: 1, padding: \"20px\" }}>\n-        <h2>Dashboard</h2>\n-        <DashboardWidgets />\n-      </div>\n-    </div>\n-  );\n-}\n-\n-export default Dashboard;\n-npm install react-router-dom chart.js react-chartjs-2\n-import React from \"react\";\n-import { Link } from \"react-router-dom\";\n-import { useContext } from \"react\";\n-import { AuthContext } from \"./AuthContext\";\n-\n-function Sidebar() {\n-  const { user, logout } = useContext(AuthContext);\n-\n-  return (\n-    <div style={{ width: \"200px\", background: \"#333\", color: \"#fff\", height: \"100vh\", padding: \"20px\" }}>\n-      <h3>Dashboard</h3>\n-      <ul style={{ listStyle: \"none\", padding: 0 }}>\n-        <li><Link to=\"/dashboard\" style={{ color: \"#fff\", textDecoration: \"none\" }}>Home</Link></li>\n-        {user?.role === \"admin\" && (\n-          <li><Link to=\"/admin\" style={{ color: \"#fff\", textDecoration: \"none\" }}>Admin Panel</Link></li>\n-        )}\n-        <li><button onClick={logout} style={{ color: \"#fff\", background: \"none\", border: \"none…\n-import React from \"react\";\n-import { Bar } from \"react-chartjs-2\";\n-\n-function DashboardWidgets() {\n-  const data = {\n-    labels: [\"Users\", \"Orders\", \"Revenue\"],\n-    datasets: [\n-      {\n-        label: \"Stats\",\n-        data: [100, 200, 300],\n-        backgroundColor: [\"blue\", \"green\", \"orange\"],\n-      },\n-    ],\n-  };\n-\n-  return\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738850309531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(\"http://localhost:3000/signin\", {\n+      const response = await fetch(/signin\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n"
                },
                {
                    "date": 1738850317283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(/signin\", {\n+      const response = await fetch(`$/signin, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n"
                },
                {
                    "date": 1738850323280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(`$/signin, {\n+      const response = await fetch(`${api}/signin, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n"
                },
                {
                    "date": 1738850335381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState } from \"react\";\n \n-function Login() {\n+function Login({}) {\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n@@ -11,9 +11,9 @@\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(`${api}/signin, {\n+      const response = await fetch(`${api}/signin`, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n"
                },
                {
                    "date": 1738850959976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,24 @@\n-import React, { useState } from \"react\";\n+import React, { useContext, useState } from \"react\";\n+import { Link, useNavigate } from \"react-router-dom\";\n+import { toast } from \"react-toastify\";\n+import {AuthContext } from \"./AuthContext\"\n \n-function Login({}) {\n+function SignIN({api}) {\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n+ const {login} = useContext(AuthContext)\n+  const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n     e.preventDefault();\n     setError(\"\");\n     setLoading(true);\n \n     try {\n-      const response = await fetch(`${api}/signin`, {\n+      const response = await fetch(`${api}/signin`,{\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n       });\n@@ -26,9 +31,14 @@\n         return;\n       }\n \n       localStorage.setItem(\"token\", data.token); // Store JWT token\n-      alert(\"Login successful!\");\n+      login(data.token, data.role)\n+      toast.success('Success');\n+      sessionStorage.setItem('username',identifier);\n+      sessionStorage.setItem('userrole',response.role);\n+      \n+      navigate('/newProduct')\n     } catch (err) {\n       setLoading(false);\n       setError(\"An error occurred. Please try again.\");\n     }\n@@ -60,5 +70,5 @@\n     </div>\n   );\n }\n \n-export default Login;\n+export default SignIN;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738852544357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n       sessionStorage.setItem('userrole',response.role);\n       \n-      navigate('/newProduct')\n+      navigate('/')\n     } catch (err) {\n       setLoading(false);\n       setError(\"An error occurred. Please try again.\");\n     }\n"
                },
                {
                    "date": 1738854574251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n import {AuthContext } from \"./AuthContext\"\n \n+\n function SignIN({api}) {\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n"
                },
                {
                    "date": 1738854580047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import React, { useContext, useState } from \"react\";\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n import {AuthContext } from \"./AuthContext\"\n+import {l} from \"./AuthContext\"\n \n \n function SignIN({api}) {\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n"
                },
                {
                    "date": 1738854625466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n import React, { useContext, useState } from \"react\";\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n import {AuthContext } from \"./AuthContext\"\n-import {l} from \"./AuthContext\"\n \n \n+\n function SignIN({api}) {\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n"
                },
                {
                    "date": 1738863191356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+import React, { useContext, useState } from \"react\";\n+import { Link, useNavigate } from \"react-router-dom\";\n+import { toast } from \"react-toastify\";\n+import {AuthContext } from \"./AuthContext\"\n+import { useContext } from \"react\";\n+\n+\n+\n+function SignIN({api}) {\n+  const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n+  const [password, setPassword] = useState(\"\");\n+  const [error, setError] = useState(\"\");\n+  const [loading, setLoading] = useState(false);\n+ const {login} = useContext(AuthContext)\n+  const navigate=useNavigate();\n+\n+  const handleLogin = async (e) => {\n+    e.preventDefault();\n+    setError(\"\");\n+    setLoading(true);\n+\n+    try {\n+      const response = await fetch(`${api}/signin`,{\n+        method: \"POST\",\n+        headers: { \"Content-Type\": \"application/json\" },\n+        body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n+      });\n+\n+      const data = await response.json();\n+      setLoading(false);\n+\n+      if (!response.ok) {\n+        setError(data.message || \"Login failed\");\n+        return;\n+      }\n+\n+      localStorage.setItem(\"token\", data.token); // Store JWT token\n+      login(data.token, data.role)\n+      toast.success('Success');\n+      sessionStorage.setItem('username',identifier);\n+      sessionStorage.setItem('userrole',response.role);\n+      \n+      navigate('/')\n+    } catch (err) {\n+      setLoading(false);\n+      setError(\"An error occurred. Please try again.\");\n+    }\n+  };\n+\n+  return (\n+    <div>\n+      <h2>Login</h2>\n+      <form onSubmit={handleLogin}>\n+        <input\n+          type=\"text\"\n+          placeholder=\"Enter Email or Username\"\n+          value={identifier}\n+          onChange={(e) => setIdentifier(e.target.value)}\n+          required\n+        />\n+        <input\n+          type=\"password\"\n+          placeholder=\"Enter Password\"\n+          value={password}\n+          onChange={(e) => setPassword(e.target.value)}\n+          required\n+        />\n+        <button type=\"submit\" disabled={loading}>\n+          {loading ? \"Logging in...\" : \"Login\"}\n+        </button>\n+        {error && <p style={{ color: \"red\" }}>{error}</p>}\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default SignIN;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738863218334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,14 @@\n import React, { useContext, useState } from \"react\";\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n-import {AuthContext } from \"./AuthContext\"\n+import {AuthContext } from \"./AuthContext\";\n import { useContext } from \"react\";\n \n \n \n function SignIN({api}) {\n+  const { user, logout } = useContext(AuthContext);\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n@@ -73,81 +74,5 @@\n     </div>\n   );\n }\n \n-export default SignIN;\n-import React, { useContext, useState } from \"react\";\n-import { Link, useNavigate } from \"react-router-dom\";\n-import { toast } from \"react-toastify\";\n-import {AuthContext } from \"./AuthContext\"\n-\n-\n-\n-function SignIN({api}) {\n-  const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n-  const [password, setPassword] = useState(\"\");\n-  const [error, setError] = useState(\"\");\n-  const [loading, setLoading] = useState(false);\n- const {login} = useContext(AuthContext)\n-  const navigate=useNavigate();\n-\n-  const handleLogin = async (e) => {\n-    e.preventDefault();\n-    setError(\"\");\n-    setLoading(true);\n-\n-    try {\n-      const response = await fetch(`${api}/signin`,{\n-        method: \"POST\",\n-        headers: { \"Content-Type\": \"application/json\" },\n-        body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n-      });\n-\n-      const data = await response.json();\n-      setLoading(false);\n-\n-      if (!response.ok) {\n-        setError(data.message || \"Login failed\");\n-        return;\n-      }\n-\n-      localStorage.setItem(\"token\", data.token); // Store JWT token\n-      login(data.token, data.role)\n-      toast.success('Success');\n-      sessionStorage.setItem('username',identifier);\n-      sessionStorage.setItem('userrole',response.role);\n-      \n-      navigate('/')\n-    } catch (err) {\n-      setLoading(false);\n-      setError(\"An error occurred. Please try again.\");\n-    }\n-  };\n-\n-  return (\n-    <div>\n-      <h2>Login</h2>\n-      <form onSubmit={handleLogin}>\n-        <input\n-          type=\"text\"\n-          placeholder=\"Enter Email or Username\"\n-          value={identifier}\n-          onChange={(e) => setIdentifier(e.target.value)}\n-          required\n-        />\n-        <input\n-          type=\"password\"\n-          placeholder=\"Enter Password\"\n-          value={password}\n-          onChange={(e) => setPassword(e.target.value)}\n-          required\n-        />\n-        <button type=\"submit\" disabled={loading}>\n-          {loading ? \"Logging in...\" : \"Login\"}\n-        </button>\n-        {error && <p style={{ color: \"red\" }}>{error}</p>}\n-      </form>\n-    </div>\n-  );\n-}\n-\n export default SignIN;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738863228635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \n \n \n function SignIN({api}) {\n-  const { user, logout } = useContext(AuthContext);\n+  const { user, log } = useContext(AuthContext);\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n"
                },
                {
                    "date": 1738863245035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,14 @@\n \n \n \n function SignIN({api}) {\n-  const { user, log } = useContext(AuthContext);\n+  const { user, login } = useContext(AuthContext);\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n- const {login} = useContext(AuthContext)\n+ \n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n     e.preventDefault();\n"
                },
                {
                    "date": 1738863502052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useContext, useState } from \"react\";\n+import React, {  useState } from \"react\";\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n import {AuthContext } from \"./AuthContext\";\n import { useContext } from \"react\";\n@@ -11,9 +11,8 @@\n   const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n   const [password, setPassword] = useState(\"\");\n   const [error, setError] = useState(\"\");\n   const [loading, setLoading] = useState(false);\n- \n   const navigate=useNavigate();\n \n   const handleLogin = async (e) => {\n     e.preventDefault();\n"
                },
                {
                    "date": 1738865774734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n       localStorage.setItem(\"token\", data.token); // Store JWT token\n       login(data.token, data.role)\n       toast.success('Success');\n       sessionStorage.setItem('username',identifier);\n-      sessionStora.setItem('userrole',response.role);\n+      sessionStor.setItem('userrole',response.role);\n       \n       navigate('/')\n     } catch (err) {\n       setLoading(false);\n"
                }
            ],
            "date": 1738184033823,
            "name": "Commit-0",
            "content": "import React, { useContext, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {AuthContext } from \".\n\nfunction SignIN({onSignIn}) {\n  const [identifier, setIdentifier] = useState(\"\"); // Can be email or username\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n const {login} = useContext(AuthContext)\n  const navigate=useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setLoading(true);\n\n    try {\n      const response = await fetch(\"http://localhost:5000/signin\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ identifier, password }), // Send identifier (email or username)\n      });\n\n      const data = await response.json();\n      setLoading(false);\n\n      if (!response.ok) {\n        setError(data.message || \"Login failed\");\n        return;\n      }\n\n      localStorage.setItem(\"token\", data.token); // Store JWT token\n      login(data.token, data.role)\n      toast.success('Success');\n      sessionStorage.setItem('username',identifier);\n      sessionStorage.setItem('userrole',response.role);\n      onSignIn()\n      navigate('/newProduct')\n    } catch (err) {\n      setLoading(false);\n      setError(\"An error occurred. Please try again.\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Email or Username\"\n          value={identifier}\n          onChange={(e) => setIdentifier(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Enter Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? \"Logging in...\" : \"Login\"}\n        </button>\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\n      </form>\n    </div>\n  );\n}\n\nexport default SignIN;"
        }
    ]
}