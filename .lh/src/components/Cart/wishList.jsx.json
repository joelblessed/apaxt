{
    "sourceFile": "src/components/Cart/wishList.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 68,
            "patches": [
                {
                    "date": 1740922007422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740922017717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n import { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../cartAction\";\n \n-const Cart = () => {\n+const Wis = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n@@ -56,5 +56,5 @@\n         </div>\n     );\n };\n \n-export default Cart;\n\\ No newline at end of file\n+export default Wis;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740922037245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,16 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n import { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../cartAction\";\n \n-const Wis = () => {\n+const WishList = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n-        const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n+        const storedCart = JSON.parse(localStorage.getItem(\"WishL\")) || [];\n         if (!token && storedCart.length > 0) {\n             dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n@@ -56,5 +56,5 @@\n         </div>\n     );\n };\n \n-export default Wis;\n\\ No newline at end of file\n+export default WishList;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740922131909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,19 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../cartAction\";\n+import { setWishList,\n+    addToWishList,\n+    removeFromWishList,\n+    clearWishList, } from \"../../cartAction\";\n \n const WishList = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n-        const storedCart = JSON.parse(localStorage.getItem(\"WishL\")) || [];\n+        const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n         if (!token && storedCart.length > 0) {\n             dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n"
                },
                {
                    "date": 1740922140309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,63 +1,67 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { setWishList,\n-    addToWishList,\n-    removeFromWishList,\n-    clearWishList, } from \"../../cartAction\";\n+import {\n+  setWishList,\n+  addToWishList,\n+  removeFromWishList,\n+  clearWishList,\n+} from \"../../Action\";\n \n const WishList = () => {\n-    const dispatch = useDispatch();\n-    const cart = useSelector((state) => state.cart.items);\n-    const token = localStorage.getItem(\"token\"); // Check if user is signed in\n+  const dispatch = useDispatch();\n+  const cart = useSelector((state) => state.cart.items);\n+  const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n-    // 1. Load cart from localStorage before login\n-    useEffect(() => {\n-        const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n-        if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n-        }\n-    }, [dispatch, token]);\n+  // 1. Load cart from localStorage before login\n+  useEffect(() => {\n+    const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n+    if (!token && storedCart.length > 0) {\n+      dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+    }\n+  }, [dispatch, token]);\n \n-    // 2. Load cart from server after login\n-    useEffect(() => {\n-        if (token) {\n-            dispatch(loadCartAfterLogin()); // Merge local and server cart\n-        }\n-    }, [dispatch, token]);\n+  // 2. Load cart from server after login\n+  useEffect(() => {\n+    if (token) {\n+      dispatch(loadCartAfterLogin()); // Merge local and server cart\n+    }\n+  }, [dispatch, token]);\n \n-    // Add to Cart (Before Login)\n-    const handleAddToCart = (product) => {\n-        dispatch(addToCartBeforeLogin(product));\n-    };\n+  // Add to Cart (Before Login)\n+  const handleAddToCart = (product) => {\n+    dispatch(addToCartBeforeLogin(product));\n+  };\n \n-    // Remove Item from Cart\n-    const handleRemoveFromCart = (productId) => {\n-        dispatch(removeFromCartAPI(productId));\n-    };\n+  // Remove Item from Cart\n\\ No newline at end of file\n+  const handleRemoveFromCart = (productId) => {\n+    dispatch(removeFromCartAPI(productId));\n+  };\n \n-    // Clear Cart on Logout\n-    const handleClearCart = () => {\n-        dispatch(clearCartOnLogout());\n-    };\n+  // Clear Cart on Logout\n+  const handleClearCart = () => {\n+    dispatch(clearCartOnLogout());\n+  };\n \n-    return (\n-        <div>\n-            <h2>Shopping Cart</h2>\n-            {cart.length === 0 ? (\n-                <p>Your cart is empty</p>\n-            ) : (\n-                <ul>\n-                    {cart.map((item) => (\n-                        <li key={item.id}>\n-                            {item.name} - ${item.price}\n-                            <button onClick={() => handleRemoveFromCart(item.id)}>Remove</button>\n-                        </li>\n-                    ))}\n-                </ul>\n-            )}\n-            <button onClick={handleClearCart}>Clear Cart</button>\n-        </div>\n-    );\n+  return (\n+    <div>\n+      <h2>Shopping Cart</h2>\n+      {cart.length === 0 ? (\n+        <p>Your cart is empty</p>\n+      ) : (\n+        <ul>\n+          {cart.map((item) => (\n+            <li key={item.id}>\n+              {item.name} - ${item.price}\n+              <button onClick={() => handleRemoveFromCart(item.id)}>\n+                Remove\n+              </button>\n+            </li>\n+          ))}\n+        </ul>\n+      )}\n+      <button onClick={handleClearCart}>Clear Cart</button>\n+    </div>\n+  );\n };\n \n-export default WishList;\n+export default WishList;\n"
                },
                {
                    "date": 1740922147534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n   setWishList,\n   addToWishList,\n   removeFromWishList,\n   clearWishList,\n-} from \"../../Action\";\n+} from \"../../wishlistActionAction\";\n \n const WishList = () => {\n   const dispatch = useDispatch();\n   const cart = useSelector((state) => state.cart.items);\n@@ -63,5 +63,5 @@\n     </div>\n   );\n };\n \n-export default WishList;\n\\ No newline at end of file\n+export default WishList;\n"
                },
                {
                    "date": 1740922153595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n   setWishList,\n   addToWishList,\n   removeFromWishList,\n   clearWishList,\n-} from \"../../wishlistActionAction\";\n+} from \"../../wishlistAction\";\n \n const WishList = () => {\n   const dispatch = useDispatch();\n   const cart = useSelector((state) => state.cart.items);\n"
                },
                {
                    "date": 1740922179031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   // 1. Load cart from localStorage before login\n   useEffect(() => {\n     const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n     if (!token && storedCart.length > 0) {\n-      dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+      dispatch({ type: \"c/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n     }\n   }, [dispatch, token]);\n \n   // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740922184328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   // 1. Load cart from localStorage before login\n   useEffect(() => {\n     const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n     if (!token && storedCart.length > 0) {\n-      dispatch({ type: \"c/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+      dispatch({ type: \"wishlist/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n     }\n   }, [dispatch, token]);\n \n   // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740922196880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n   setWishList,\n   addToWishList,\n   removeFromWishList,\n   clearWishList,\n-} from \"../../wishlistAction\";\n+} from \"../../wishlistActionAction\";\n \n const WishList = () => {\n   const dispatch = useDispatch();\n   const cart = useSelector((state) => state.cart.items);\n@@ -15,9 +15,9 @@\n   // 1. Load cart from localStorage before login\n   useEffect(() => {\n     const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n     if (!token && storedCart.length > 0) {\n-      dispatch({ type: \"wishlist/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+      dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n     }\n   }, [dispatch, token]);\n \n   // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740922272735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n   }, [dispatch, token]);\n \n   // Add to Cart (Before Login)\n   const handleAddToCart = (product) => {\n-    dispatch(addToCartBeforeLogin(product));\n+    dispatch(addToBeforeLogin(product));\n   };\n \n   // Remove Item from Cart\n   const handleRemoveFromCart = (productId) => {\n"
                },
                {
                    "date": 1740922278005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n   }, [dispatch, token]);\n \n   // Add to Cart (Before Login)\n   const handleAddToCart = (product) => {\n-    dispatch(addToBeforeLogin(product));\n+    dispatch(addToWishListBeforeLogin(product));\n   };\n \n   // Remove Item from Cart\n   const handleRemoveFromCart = (productId) => {\n"
                },
                {
                    "date": 1740922285950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     dispatch(addToWishListBeforeLogin(product));\n   };\n \n   // Remove Item from Cart\n-  const handleRemoveFromCart = (productId) => {\n+  const handleRemoveFromC = (productId) => {\n     dispatch(removeFromCartAPI(productId));\n   };\n \n   // Clear Cart on Logout\n"
                },
                {
                    "date": 1740922291373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     dispatch(addToWishListBeforeLogin(product));\n   };\n \n   // Remove Item from Cart\n-  const handleRemoveFromC = (productId) => {\n+  const handleRemoveFromWish = (productId) => {\n     dispatch(removeFromCartAPI(productId));\n   };\n \n   // Clear Cart on Logout\n"
                },
                {
                    "date": 1740922301238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,10 +32,10 @@\n     dispatch(addToWishListBeforeLogin(product));\n   };\n \n   // Remove Item from Cart\n-  const handleRemoveFromWish = (productId) => {\n-    dispatch(removeFromCartAPI(productId));\n+  const handleRemoveFromWishList = (productId) => {\n+    dispatch(removeFromAPI(productId));\n   };\n \n   // Clear Cart on Logout\n   const handleClearCart = () => {\n"
                },
                {
                    "date": 1740922313302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,14 @@\n   };\n \n   // Remove Item from Cart\n   const handleRemoveFromWishList = (productId) => {\n-    dispatch(removeFromAPI(productId));\n+    dispatch(removeFromWishListAPI(productId));\n   };\n \n   // Clear Cart on Logout\n   const handleClearCart = () => {\n-    dispatch(clearCartOnLogout());\n+    dispatch(clearWOnLogout());\n   };\n \n   return (\n     <div>\n"
                },
                {
                    "date": 1740922345936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n   setWishList,\n   addToWishList,\n   removeFromWishList,\n   clearWishList,\n-} from \"../../wishlistActionAction\";\n+} from \"../../wishlistActionAction;\n \n const WishList = () => {\n   const dispatch = useDispatch();\n   const cart = useSelector((state) => state.cart.items);\n@@ -38,9 +38,9 @@\n   };\n \n   // Clear Cart on Logout\n   const handleClearCart = () => {\n-    dispatch(clearWOnLogout());\n+    dispatch(clearWishListOnLogout());\n   };\n \n   return (\n     <div>\n"
                },
                {
                    "date": 1740922416571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,67 +0,0 @@\n-import React, { useEffect } from \"react\";\n-import { useSelector, useDispatch } from \"react-redux\";\n-import {\n-  setWishList,\n-  addToWishList,\n-  removeFromWishList,\n-  clearWishList,\n-} from \"../../wishlistActionAction;\n-\n-const WishList = () => {\n-  const dispatch = useDispatch();\n-  const cart = useSelector((state) => state.cart.items);\n-  const token = localStorage.getItem(\"token\"); // Check if user is signed in\n-\n-  // 1. Load cart from localStorage before login\n-  useEffect(() => {\n-    const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n-    if (!token && storedCart.length > 0) {\n-      dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n-    }\n-  }, [dispatch, token]);\n-\n-  // 2. Load cart from server after login\n-  useEffect(() => {\n-    if (token) {\n-      dispatch(loadCartAfterLogin()); // Merge local and server cart\n-    }\n-  }, [dispatch, token]);\n-\n-  // Add to Cart (Before Login)\n-  const handleAddToCart = (product) => {\n-    dispatch(addToWishListBeforeLogin(product));\n-  };\n-\n-  // Remove Item from Cart\n-  const handleRemoveFromWishList = (productId) => {\n-    dispatch(removeFromWishListAPI(productId));\n-  };\n-\n-  // Clear Cart on Logout\n-  const handleClearCart = () => {\n-    dispatch(clearWishListOnLogout());\n-  };\n-\n-  return (\n-    <div>\n-      <h2>Shopping Cart</h2>\n-      {cart.length === 0 ? (\n-        <p>Your cart is empty</p>\n-      ) : (\n-        <ul>\n-          {cart.map((item) => (\n-            <li key={item.id}>\n-              {item.name} - ${item.price}\n-              <button onClick={() => handleRemoveFromCart(item.id)}>\n-                Remove\n-              </button>\n-            </li>\n-          ))}\n-        </ul>\n-      )}\n-      <button onClick={handleClearCart}>Clear Cart</button>\n-    </div>\n-  );\n-};\n-\n-export default WishList;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740922422807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,4 @@\n-\n+setWishList,\n+addToWishList,\n+removeFromWishList,\n+clearWishList,\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740922470510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,60 @@\n-setWishList,\n-addToWishList,\n-removeFromWishList,\n-clearWishList,\n\\ No newline at end of file\n+import React, { useEffect } from \"react\";\n+import { useSelector, useDispatch } from \"react-redux\";\n+import { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../cartAction\";\n+\n+const Cart = () => {\n+    const dispatch = useDispatch();\n+    const cart = useSelector((state) => state.cart.items);\n+    const token = localStorage.getItem(\"token\"); // Check if user is signed in\n+\n+    // 1. Load cart from localStorage before login\n+    useEffect(() => {\n+        const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n+        if (!token && storedCart.length > 0) {\n+            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+        }\n+    }, [dispatch, token]);\n+\n+    // 2. Load cart from server after login\n+    useEffect(() => {\n+        if (token) {\n+            dispatch(loadCartAfterLogin()); // Merge local and server cart\n+        }\n+    }, [dispatch, token]);\n+\n+    // Add to Cart (Before Login)\n+    const handleAddToCart = (product) => {\n+        dispatch(addToCartBeforeLogin(product));\n+    };\n+\n+    // Remove Item from Cart\n+    const handleRemoveFromCart = (productId) => {\n+        dispatch(removeFromCartAPI(productId));\n+    };\n+\n+    // Clear Cart on Logout\n+    const handleClearCart = () => {\n+        dispatch(clearCartOnLogout());\n+    };\n+\n+    return (\n+        <div>\n+            <h2>Shopping Cart</h2>\n+            {cart.length === 0 ? (\n+                <p>Your cart is empty</p>\n+            ) : (\n+                <ul>\n+                    {cart.map((item) => (\n+                        <li key={item.id}>\n+                            {item.name} - ${item.price}\n+                            <button onClick={() => handleRemoveFromCart(item.id)}>Remove</button>\n+                        </li>\n+                    ))}\n+                </ul>\n+            )}\n+            <button onClick={handleClearCart}>Clear Cart</button>\n+        </div>\n+    );\n+};\n+\n+export default Cart;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740922479355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../cartAction\";\n+import { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../Action\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n"
                },
                {
                    "date": 1740922485357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../Action\";\n+import { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistActionAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n"
                },
                {
                    "date": 1740922500125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistActionAction\";\n+import { addTowishBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistActionAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n@@ -23,9 +23,9 @@\n     }, [dispatch, token]);\n \n     // Add to Cart (Before Login)\n     const handleAddToCart = (product) => {\n-        dispatch(addToCartBeforeLogin(product));\n+        dispatch(addTowishBeforeLogin(product));\n     };\n \n     // Remove Item from Cart\n     const handleRemoveFromCart = (productId) => {\n"
                },
                {
                    "date": 1740922509328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addTowishBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistActionAction\";\n+import { addToWishListBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistActionAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n@@ -23,9 +23,9 @@\n     }, [dispatch, token]);\n \n     // Add to Cart (Before Login)\n     const handleAddToCart = (product) => {\n-        dispatch(addTowishBeforeLogin(product));\n+        dispatch(addToWishListBeforeLogin(product));\n     };\n \n     // Remove Item from Cart\n     const handleRemoveFromCart = (productId) => {\n"
                },
                {
                    "date": 1740922523130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToWishListBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistActionAction\";\n+import { addToWishListBeforeLogin, loadAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistActionAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n@@ -17,9 +17,9 @@\n \n     // 2. Load cart from server after login\n     useEffect(() => {\n         if (token) {\n-            dispatch(loadCartAfterLogin()); // Merge local and server cart\n+            dispatch(loadAfterLogin()); // Merge local and server cart\n         }\n     }, [dispatch, token]);\n \n     // Add to Cart (Before Login)\n"
                },
                {
                    "date": 1740922529264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToWishListBeforeLogin, loadAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistActionAction\";\n+import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistActionAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n@@ -17,9 +17,9 @@\n \n     // 2. Load cart from server after login\n     useEffect(() => {\n         if (token) {\n-            dispatch(loadAfterLogin()); // Merge local and server cart\n+            dispatch(loadWishListAfterLogin()); // Merge local and server cart\n         }\n     }, [dispatch, token]);\n \n     // Add to Cart (Before Login)\n"
                },
                {
                    "date": 1740922544245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistActionAction\";\n+import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromAPI, clearCartOnLogout } from \"../../wishlistActionAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n@@ -28,9 +28,9 @@\n     };\n \n     // Remove Item from Cart\n     const handleRemoveFromCart = (productId) => {\n-        dispatch(removeFromCartAPI(productId));\n+        dispatch(removeFromAPI(productId));\n     };\n \n     // Clear Cart on Logout\n     const handleClearCart = () => {\n"
                },
                {
                    "date": 1740922560147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromAPI, clearCartOnLogout } from \"../../wishlistActionAction\";\n+import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearOnLogout } from \"../../wishlistActionAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n@@ -28,14 +28,14 @@\n     };\n \n     // Remove Item from Cart\n     const handleRemoveFromCart = (productId) => {\n-        dispatch(removeFromAPI(productId));\n+        dispatch(removeFromWishListAPI(productId));\n     };\n \n     // Clear Cart on Logout\n     const handleClearCart = () => {\n-        dispatch(clearCartOnLogout());\n+        dispatch(clearOnLogout());\n     };\n \n     return (\n         <div>\n"
                },
                {
                    "date": 1740923175356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearOnLogout } from \"../../wishlistActionAction\";\n+import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistActionAction\";\n \n-const Cart = () => {\n+const wis = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n@@ -21,26 +21,26 @@\n             dispatch(loadWishListAfterLogin()); // Merge local and server cart\n         }\n     }, [dispatch, token]);\n \n-    // Add to Cart (Before Login)\n+    // Add to wis (Before Login)\n     const handleAddToCart = (product) => {\n         dispatch(addToWishListBeforeLogin(product));\n     };\n \n-    // Remove Item from Cart\n+    // Remove Item from wis\n     const handleRemoveFromCart = (productId) => {\n         dispatch(removeFromWishListAPI(productId));\n     };\n \n-    // Clear Cart on Logout\n+    // Clear wis on Logout\n     const handleClearCart = () => {\n-        dispatch(clearOnLogout());\n+        dispatch(clearWishListOnLogout());\n     };\n \n     return (\n         <div>\n-            <h2>Shopping Cart</h2>\n+            <h2>Shopping wis</h2>\n             {cart.length === 0 ? (\n                 <p>Your cart is empty</p>\n             ) : (\n                 <ul>\n@@ -51,10 +51,10 @@\n                         </li>\n                     ))}\n                 </ul>\n             )}\n-            <button onClick={handleClearCart}>Clear Cart</button>\n+            <button onClick={handleClearCart}>Clear wis</button>\n         </div>\n     );\n };\n \n\\ No newline at end of file\n-export default Cart;\n+export default wis;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740923181912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistActionAction\";\n \n-const wis = () => {\n+const WishList = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n@@ -21,26 +21,26 @@\n             dispatch(loadWishListAfterLogin()); // Merge local and server cart\n         }\n     }, [dispatch, token]);\n \n-    // Add to wis (Before Login)\n+    // Add to WishList (Before Login)\n     const handleAddToCart = (product) => {\n         dispatch(addToWishListBeforeLogin(product));\n     };\n \n-    // Remove Item from wis\n+    // Remove Item from WishList\n     const handleRemoveFromCart = (productId) => {\n         dispatch(removeFromWishListAPI(productId));\n     };\n \n-    // Clear wis on Logout\n+    // Clear WishList on Logout\n     const handleClearCart = () => {\n         dispatch(clearWishListOnLogout());\n     };\n \n     return (\n         <div>\n-            <h2>Shopping wis</h2>\n+            <h2>Shopping WishList</h2>\n             {cart.length === 0 ? (\n                 <p>Your cart is empty</p>\n             ) : (\n                 <ul>\n@@ -51,10 +51,10 @@\n                         </li>\n                     ))}\n                 </ul>\n             )}\n-            <button onClick={handleClearCart}>Clear wis</button>\n+            <button onClick={handleClearCart}>Clear WishList</button>\n         </div>\n     );\n };\n \n\\ No newline at end of file\n-export default wis;\n+export default WishList;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740923203033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistActionAction\";\n+import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistAction\";\n \n const WishList = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n"
                },
                {
                    "date": 1740923377277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+            dispatch({ type: \"/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740923384061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740923389930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+            dispatch({ type: \"wishlist/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740923408432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"wishlist/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+            dispatch({ type: \"Wh/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740923438369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"Wh/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740923449529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n-        const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n+        const storedCart = JSON.parse(localStorage.getItem(\"\")) || [];\n         if (!token && storedCart.length > 0) {\n             dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n"
                },
                {
                    "date": 1740923457502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n-        const storedCart = JSON.parse(localStorage.getItem(\"\")) || [];\n+        const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n         if (!token && storedCart.length > 0) {\n             dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n"
                },
                {
                    "date": 1740923487977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,23 +3,23 @@\n import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistAction\";\n \n const WishList = () => {\n     const dispatch = useDispatch();\n-    const cart = useSelector((state) => state.cart.items);\n+    const wishlist = useSelector((state) => state.wishlist.items);\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n-    // 1. Load cart from localStorage before login\n+    // 1. Load wishlist from localStorage before login\n     useEffect(() => {\n-        const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n+        const storedCart = JSON.parse(localStorage.getItem(\"wishlist\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+            dispatch({ type: \"wishlist/setCart\", payload: storedCart }); // Manually dispatch to set wishlist state\n         }\n     }, [dispatch, token]);\n \n-    // 2. Load cart from server after login\n+    // 2. Load wishlist from server after login\n     useEffect(() => {\n         if (token) {\n-            dispatch(loadWishListAfterLogin()); // Merge local and server cart\n+            dispatch(loadWishListAfterLogin()); // Merge local and server wishlist\n         }\n     }, [dispatch, token]);\n \n     // Add to WishList (Before Login)\n@@ -39,13 +39,13 @@\n \n     return (\n         <div>\n             <h2>Shopping WishList</h2>\n-            {cart.length === 0 ? (\n-                <p>Your cart is empty</p>\n+            {wishlist.length === 0 ? (\n+                <p>Your wishlist is empty</p>\n             ) : (\n                 <ul>\n-                    {cart.map((item) => (\n+                    {wishlist.map((item) => (\n                         <li key={item.id}>\n                             {item.name} - ${item.price}\n                             <button onClick={() => handleRemoveFromCart(item.id)}>Remove</button>\n                         </li>\n"
                },
                {
                    "date": 1740923509405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,23 +3,23 @@\n import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistAction\";\n \n const WishList = () => {\n     const dispatch = useDispatch();\n-    const wishlist = useSelector((state) => state.wishlist.items);\n+    const cart = useSelector((state) => state.cart.items);\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n-    // 1. Load wishlist from localStorage before login\n+    // 1. Load cart from localStorage before login\n     useEffect(() => {\n-        const storedCart = JSON.parse(localStorage.getItem(\"wishlist\")) || [];\n+        const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"wishlist/setCart\", payload: storedCart }); // Manually dispatch to set wishlist state\n+            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n-    // 2. Load wishlist from server after login\n+    // 2. Load cart from server after login\n     useEffect(() => {\n         if (token) {\n-            dispatch(loadWishListAfterLogin()); // Merge local and server wishlist\n+            dispatch(loadWishListAfterLogin()); // Merge local and server cart\n         }\n     }, [dispatch, token]);\n \n     // Add to WishList (Before Login)\n@@ -39,13 +39,13 @@\n \n     return (\n         <div>\n             <h2>Shopping WishList</h2>\n-            {wishlist.length === 0 ? (\n-                <p>Your wishlist is empty</p>\n+            {cart.length === 0 ? (\n+                <p>Your cart is empty</p>\n             ) : (\n                 <ul>\n-                    {wishlist.map((item) => (\n+                    {cart.map((item) => (\n                         <li key={item.id}>\n                             {item.name} - ${item.price}\n                             <button onClick={() => handleRemoveFromCart(item.id)}>Remove</button>\n                         </li>\n"
                },
                {
                    "date": 1740923526493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n-        const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n+        const storedCart = JSON.parse(localStorage.getItem(\"\")) || [];\n         if (!token && storedCart.length > 0) {\n             dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n"
                },
                {
                    "date": 1740923549912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,11 @@\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n-        const storedCart = JSON.parse(localStorage.getItem(\"\")) || [];\n+        const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+            dispatch({ type: \"wish/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740924826483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"wish/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+            dispatch({ type: \"wi/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740924832034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"wi/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+            dispatch({ type: \"Wi/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740924884884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"Wi/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740924921422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+            dispatch({ type: \"cart/setCart\", payload: storedC }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740924931965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"cart/setCart\", payload: storedC }); // Manually dispatch to set cart state\n+            dispatch({ type: \"cart/setCart\", payload: storedW }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740924953367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"cart/setCart\", payload: storedW }); // Manually dispatch to set cart state\n+            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740924974659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,11 @@\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n-        const storedCart = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n+        const  = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+            dispatch({ type: \"cart/setCart\", payload:  }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740924980076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,11 @@\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n-        const  = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n+        const storedW = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n         if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"cart/setCart\", payload:  }); // Manually dispatch to set cart state\n+            dispatch({ type: \"cart/setCart\", payload: storedW }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740924994407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,11 @@\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n-        const storedW = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n-        if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"cart/setCart\", payload: storedW }); // Manually dispatch to set cart state\n+        const storedWishList = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n+        if (!token && stored.length > 0) {\n+            dispatch({ type: \"cart/setCart\", payload: storedWishList }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740925693654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,10 @@\n \n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedWishList = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n-        if (!token && stored.length > 0) {\n-            dispatch({ type: \"cart/setCart\", payload: storedWishList }); // Manually dispatch to set cart state\n+        if (!token && storedWishList.length > 0) {\n+            dispatch({ type: \"wishlist/setCart\", payload: storedWishList }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740925722923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistAction\";\n \n const WishList = () => {\n     const dispatch = useDispatch();\n-    const cart = useSelector((state) => state.cart.items);\n+    const cart = useSelector((state) => state.wish.items);\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n"
                },
                {
                    "date": 1740925800229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,16 @@\n import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistAction\";\n \n const WishList = () => {\n     const dispatch = useDispatch();\n-    const cart = useSelector((state) => state.wish.items);\n+    const cart = useSelector((state) => state.wishlist.items);\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedWishList = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n         if (!token && storedWishList.length > 0) {\n-            dispatch({ type: \"wishlist/setCart\", payload: storedWishList }); // Manually dispatch to set cart state\n+            dispatch({ type: \"wishlist/set\", payload: storedWishList }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740925805766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n         const storedWishList = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n         if (!token && storedWishList.length > 0) {\n-            dispatch({ type: \"wishlist/set\", payload: storedWishList }); // Manually dispatch to set cart state\n+            dispatch({ type: \"wishlist/setWishList\", payload: storedWishList }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740925842948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,16 @@\n import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistAction\";\n \n const WishList = () => {\n     const dispatch = useDispatch();\n-    const cart = useSelector((state) => state.wishlist.items);\n+    const cart = useSelector((state) => state.cart.items);\n     const token = localStorage.getItem(\"token\"); // Check if user is signed in\n \n     // 1. Load cart from localStorage before login\n     useEffect(() => {\n-        const storedWishList = JSON.parse(localStorage.getItem(\"WishList\")) || [];\n-        if (!token && storedWishList.length > 0) {\n-            dispatch({ type: \"wishlist/setWishList\", payload: storedWishList }); // Manually dispatch to set cart state\n+        const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n+        if (!token && storedCart.length > 0) {\n+            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n         }\n     }, [dispatch, token]);\n \n     // 2. Load cart from server after login\n"
                },
                {
                    "date": 1740925942132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistAction\";\n+import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistActionAction\";\n \n const WishList = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n"
                },
                {
                    "date": 1740926141615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistActionAction\";\n+import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistAction\";\n \n const WishList = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n"
                },
                {
                    "date": 1740926164750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,60 +0,0 @@\n-import React, { useEffect } from \"react\";\n-import { useSelector, useDispatch } from \"react-redux\";\n-import { addToWishListBeforeLogin, loadWishListAfterLogin, removeFromWishListAPI, clearWishListOnLogout } from \"../../wishlistAction\";\n-\n-const WishList = () => {\n-    const dispatch = useDispatch();\n-    const cart = useSelector((state) => state.cart.items);\n-    const token = localStorage.getItem(\"token\"); // Check if user is signed in\n-\n-    // 1. Load cart from localStorage before login\n-    useEffect(() => {\n-        const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n-        if (!token && storedCart.length > 0) {\n-            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n-        }\n-    }, [dispatch, token]);\n-\n-    // 2. Load cart from server after login\n-    useEffect(() => {\n-        if (token) {\n-            dispatch(loadWishListAfterLogin()); // Merge local and server cart\n-        }\n-    }, [dispatch, token]);\n-\n-    // Add to WishList (Before Login)\n-    const handleAddToCart = (product) => {\n-        dispatch(addToWishListBeforeLogin(product));\n-    };\n-\n-    // Remove Item from WishList\n-    const handleRemoveFromCart = (productId) => {\n-        dispatch(removeFromWishListAPI(productId));\n-    };\n-\n-    // Clear WishList on Logout\n-    const handleClearCart = () => {\n-        dispatch(clearWishListOnLogout());\n-    };\n-\n-    return (\n-        <div>\n-            <h2>Shopping WishList</h2>\n-            {cart.length === 0 ? (\n-                <p>Your cart is empty</p>\n-            ) : (\n-                <ul>\n-                    {cart.map((item) => (\n-                        <li key={item.id}>\n-                            {item.name} - ${item.price}\n-                            <button onClick={() => handleRemoveFromCart(item.id)}>Remove</button>\n-                        </li>\n-                    ))}\n-                </ul>\n-            )}\n-            <button onClick={handleClearCart}>Clear WishList</button>\n-        </div>\n-    );\n-};\n-\n-export default WishList;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740926176364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import React, { useEffect } from \"react\";\n+import { useSelector, useDispatch } from \"react-redux\";\n+import { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../cartAction\";\n+\n+const Cart = () => {\n+    const dispatch = useDispatch();\n+    const cart = useSelector((state) => state.cart.items);\n+    const token = localStorage.getItem(\"token\"); // Check if user is signed in\n+\n+    // 1. Load cart from localStorage before login\n+    useEffect(() => {\n+        const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n+        if (!token && storedCart.length > 0) {\n+            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n+        }\n+    }, [dispatch, token]);\n+\n+    // 2. Load cart from server after login\n+    useEffect(() => {\n+        if (token) {\n+            dispatch(loadCartAfterLogin()); // Merge local and server cart\n+        }\n+    }, [dispatch, token]);\n+\n+    // Add to Cart (Before Login)\n+    const handleAddToCart = (product) => {\n+        dispatch(addToCartBeforeLogin(product));\n+    };\n+\n+    // Remove Item from Cart\n+    const handleRemoveFromCart = (productId) => {\n+        dispatch(removeFromCartAPI(productId));\n+    };\n+\n+    // Clear Cart on Logout\n+    const handleClearCart = () => {\n+        dispatch(clearCartOnLogout());\n+    };\n+\n+    return (\n+        <div>\n+            <h2>Shopping Cart</h2>\n+            {cart.length === 0 ? (\n+                <p>Your cart is empty</p>\n+            ) : (\n+                <ul>\n+                    {cart.map((item) => (\n+                        <li key={item.id}>\n+                            {item.name} - ${item.price}\n+                            <button onClick={() => handleRemoveFromCart(item.id)}>Remove</button>\n+                        </li>\n+                    ))}\n+                </ul>\n+            )}\n+            <button onClick={handleClearCart}>Clear Cart</button>\n+        </div>\n+    );\n+};\n+\n+export default Cart;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740926529049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../cartAction\";\n+import { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../Action\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n"
                },
                {
                    "date": 1740926547310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../Action\";\n+import { addToBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n"
                },
                {
                    "date": 1740926554938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n+import { addTowishlistBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n"
                },
                {
                    "date": 1740926561101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addTowishlistBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n+import { addTowishBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n"
                },
                {
                    "date": 1740926572684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addTowishBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n+import { addToBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n@@ -23,9 +23,9 @@\n     }, [dispatch, token]);\n \n     // Add to Cart (Before Login)\n     const handleAddToCart = (product) => {\n-        dispatch(addToCartBeforeLogin(product));\n+        dispatch(addToBeforeLogin(product));\n     };\n \n     // Remove Item from Cart\n     const handleRemoveFromCart = (productId) => {\n"
                },
                {
                    "date": 1740926578168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addToBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n+import { addTowishlistBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n@@ -23,9 +23,9 @@\n     }, [dispatch, token]);\n \n     // Add to Cart (Before Login)\n     const handleAddToCart = (product) => {\n-        dispatch(addToBeforeLogin(product));\n+        dispatch(addTowishlistBeforeLogin(product));\n     };\n \n     // Remove Item from Cart\n     const handleRemoveFromCart = (productId) => {\n"
                },
                {
                    "date": 1740926592747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addTowishlistBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n+import { addTowishlistBeforeLogin, loadCAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n@@ -17,9 +17,9 @@\n \n     // 2. Load cart from server after login\n     useEffect(() => {\n         if (token) {\n-            dispatch(loadCartAfterLogin()); // Merge local and server cart\n+            dispatch(loadCAfterLogin()); // Merge local and server cart\n         }\n     }, [dispatch, token]);\n \n     // Add to Cart (Before Login)\n"
                },
                {
                    "date": 1740926612894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addTowishlistBeforeLogin, loadCAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n+import { addTowishlistBeforeLogin, loadhAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n@@ -17,9 +17,9 @@\n \n     // 2. Load cart from server after login\n     useEffect(() => {\n         if (token) {\n-            dispatch(loadCAfterLogin()); // Merge local and server cart\n+            dispatch(loadhAfterLogin()); // Merge local and server cart\n         }\n     }, [dispatch, token]);\n \n     // Add to Cart (Before Login)\n"
                },
                {
                    "date": 1740926620545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect } from \"react\";\n import { useSelector, useDispatch } from \"react-redux\";\n-import { addTowishlistBeforeLogin, loadWAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n+import { addTowishlistBeforeLogin, loadWiAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../wishlistAction\";\n \n const Cart = () => {\n     const dispatch = useDispatch();\n     const cart = useSelector((state) => state.cart.items);\n@@ -17,9 +17,9 @@\n \n     // 2. Load cart from server after login\n     useEffect(() => {\n         if (token) {\n-            dispatch(loadWAfterLogin()); // Merge local and server cart\n+            dispatch(loadWiAfterLogin()); // Merge local and server cart\n         }\n     }, [dispatch, token]);\n \n     // Add to Cart (Before Login)\n"
                }
            ],
            "date": 1740922007422,
            "name": "Commit-0",
            "content": "import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToCartBeforeLogin, loadCartAfterLogin, removeFromCartAPI, clearCartOnLogout } from \"../../cartAction\";\n\nconst Cart = () => {\n    const dispatch = useDispatch();\n    const cart = useSelector((state) => state.cart.items);\n    const token = localStorage.getItem(\"token\"); // Check if user is signed in\n\n    // 1. Load cart from localStorage before login\n    useEffect(() => {\n        const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n        if (!token && storedCart.length > 0) {\n            dispatch({ type: \"cart/setCart\", payload: storedCart }); // Manually dispatch to set cart state\n        }\n    }, [dispatch, token]);\n\n    // 2. Load cart from server after login\n    useEffect(() => {\n        if (token) {\n            dispatch(loadCartAfterLogin()); // Merge local and server cart\n        }\n    }, [dispatch, token]);\n\n    // Add to Cart (Before Login)\n    const handleAddToCart = (product) => {\n        dispatch(addToCartBeforeLogin(product));\n    };\n\n    // Remove Item from Cart\n    const handleRemoveFromCart = (productId) => {\n        dispatch(removeFromCartAPI(productId));\n    };\n\n    // Clear Cart on Logout\n    const handleClearCart = () => {\n        dispatch(clearCartOnLogout());\n    };\n\n    return (\n        <div>\n            <h2>Shopping Cart</h2>\n            {cart.length === 0 ? (\n                <p>Your cart is empty</p>\n            ) : (\n                <ul>\n                    {cart.map((item) => (\n                        <li key={item.id}>\n                            {item.name} - ${item.price}\n                            <button onClick={() => handleRemoveFromCart(item.id)}>Remove</button>\n                        </li>\n                    ))}\n                </ul>\n            )}\n            <button onClick={handleClearCart}>Clear Cart</button>\n        </div>\n    );\n};\n\nexport default Cart;"
        }
    ]
}