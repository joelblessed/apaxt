{
    "sourceFile": "src/components/pages/categoryBox.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1743064538785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743064556906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n } from \"./styledComponents\";\n import { addToCart, removeFromCart } from \"../../cartSlice\";\n import e from \"cors\";\n \n-const Box = ({\n+const CategoryBox = ({\n   api,\n   loading,\n   add,\n   images,\n@@ -570,5 +570,5 @@\n     before: \"+\",\n   },\n };\n \n-export default Box;\n+export default CategoryBox;\n"
                },
                {
                    "date": 1743064587077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,436 +117,9 @@\n     },\n   };\n \n   return (\n-    <>\n-      {isMobile ? (\n-        <React.Fragment>\n-          {\n-            <div className=\"animated-box\" style={mstyles.Mcontainer}>\n-              {Mobject.length > 0 ? (\n-                Mobject.map((product, index) => (\n-                  <div>\n-                    <BoxContainer\n-                      key={index}\n-                      categoryOption={categoryShadow[product.category]}\n-                    >\n-                      <div\n-                        key={index}\n-                        style={{\n-                          ...mstyles.mbox,\n-\n-                          // justifyContent:\n-                          // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n-                        }}\n-                      >\n-                        {product.images.length > 0 ? (\n-                          <img\n-                            src={product.images[0]} // Display first image only\n-                            alt={product.name}\n-                            style={{\n-                              width: \"135px\",\n-                              height: \"150px\",\n-                              objectFit: \"cover\",\n-                              borderRadius: \"10px\",\n-                              cursor: \"pointer\",\n-                            }}\n-                            onClick={() => {\n-                              setSelectedProduct(product);\n-                              handleProductClick(product);\n-                              show();\n-                            }}\n-                          />\n-                        ) : (\n-                          <p>{t(\"No Image Available\")}</p>\n-                        )}\n-                        <MAddToWishList position={position}>+</MAddToWishList>\n-                      </div>\n-\n-                      {/* text */}\n-                      <div style={{ display: \"flex\" }}>\n-                        <div\n-                          className=\"text\"\n-                          style={{\n-                            borderRadius: \"10PX\",\n-                            width: \"100%\",\n-                            height: \"100px\",\n-                            // background:\"red\",\n-                            padding: \"10px\",\n-                          }}\n-                        >\n-                          <Name className=\"name\" fontSize=\"17px\">\n-                            <span\n-                              style={{ color: \"black\" }}\n-                              dangerouslySetInnerHTML={{\n-                                __html: highlightText(product.name, searchTerm),\n-                              }}\n-                            ></span>{\" \"}\n-                          </Name>\n-\n-                          {/* <DescriptionContainer>\n-                         <DescriptionTitle>\n-                           {t(\"Description\")}:\n-                           <DescriptionContent>\n-                             {product.description}\n-                           </DescriptionContent>\n-                         </DescriptionTitle>\n-                       </DescriptionContainer> */}\n-                          <StatusContainer>\n-                            <StatusTitle>\n-                              {t(\"Status\")}:\n-                              <StatusContent>{product.status}</StatusContent>\n-                            </StatusTitle>\n-                          </StatusContainer>\n-                          <Price key={index}>\n-                            {t(\"CFA\")}: {product.price - product.discount}\n-                          </Price>\n-                          {product.discount > 0 && (\n-                            <Discount key={index}>\n-                              {t(\"CFA\")}:<s>{product.price}</s>\n-                              <label\n-                                style={{\n-                                  width: \"40px\",\n-                                  height: \"20px\",\n-                                  background: \"#90EE90\",\n-                                  textAlign: \"center\",\n-                                  borderRadius: \"5px\",\n-                                  marginLeft: \"15px\",\n-                                }}\n-                              >\n-                                -\n-                                {(\n-                                  (product.discount / product.price) *\n-                                  100\n-                                ).toFixed(0)}\n-                                %\n-                              </label>\n-                            </Discount>\n-                          )}\n-                        </div>\n-                      </div>\n-\n-                      <div\n-                        style={{\n-                          background: \"\",\n-                          textAlign: \"center\",\n-                          padding: \"5px\",\n-                        }}\n-                      >\n-                        <MAddtocartButton\n-                          fontSize={fontSize}\n-                          main={product.discount > 0}\n-                          width=\"auto\"\n-                          onClick={() => dispatch(addToCartAPI(product))}\n-                        >\n-                          {t(\"Add To Cart\")}\n-                        </MAddtocartButton>\n-                      </div>\n-                    </BoxContainer>\n-                  </div>\n-                ))\n-              ) : (\n-                <p>{t(\"Loading...\")}</p>\n-              )}\n-\n-              {selectedProduct && showDetails && selectedProduct && <></>}\n-            </div>\n-          }\n-\n-          {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n-        </React.Fragment>\n-      ) : (\n-        <React.Fragment>\n-          {\n-            <div className=\"animated-box\" style={styles.container}>\n-              {Dobject.length > 0 ? (\n-                Dobject.map((product, index) => (\n-                  <div>\n-                    {selectedProduct === product && (\n-                      <div\n-                        style={{\n-                          padding: \"20px\",\n-                          margin: \"0 auto\",\n-                          marginTop: \"0px\",\n-                          Width: \"40%\",\n-                          maxHeight: \"100vh\",\n-                          border: \"1px solid green\",\n-                          borderRadius: \"20px\",\n-                          // background:'red',\n-                          boxShadow: \"10px 0px 50px 0px pink\",\n-                        }}\n-                      >\n-                        <div style={{ display: \"flex\" }}>\n-                          <div style={{ background: \"\", width: \"400px\" }}>\n-                            {selectedProduct.images &&\n-                            selectedProduct.images.length > 0 ? (\n-                              <Slider {...style.sliderSettings}>\n-                                {selectedProduct.images.map((imgUrl, index) => (\n-                                  <div key={index}>\n-                                    <img\n-                                      src={imgUrl}\n-                                      alt={`${selectedProduct.title} - Image ${\n-                                        index + 1\n-                                      }`}\n-                                      style={{\n-                                        width: \"400px\",\n-                                        height: \"450px\",\n-                                        borderRadius: \"8px\",\n-                                      }}\n-                                    />\n-                                  </div>\n-                                ))}\n-                              </Slider>\n-                            ) : (\n-                              <p>No images available</p>\n-                            )}\n-                          </div>\n-                          <div>{SelectedProduct}</div>\n-                          <div\n-                            style={{\n-                              background: \"#4ECDC4\",\n-                              width: \"500px\",\n-                              marginLeft: \"30px\",\n-                            }}\n-                          >\n-                            <div style={{ padding: \"20px\", margin: \"0 auto\" }}>\n-                              <CloseButton\n-                                style={{\n-                                  position: \"relative\",\n-                                  left: \"420px\",\n-                                  top: \"-40px\",\n-                                  background: \"none\",\n-                                  borderRadius: \"0px 14px 10px 10px\",\n-                                  width: \"80px\",\n-                                  border: \"1px solid red\",\n-                                  cursor: \"pointer\",\n-                                  fontWeight: \"bold\",\n-                                  fontSize: \"30px\",\n-                                  color: \"red\",\n-                                }}\n-                                onClick={() => hanldleProductHid()}\n-                              >\n-                                {t(\"close\")}\n-                              </CloseButton>\n-                              <h4>\n-                                {\" \"}\n-                                <Link\n-                                  to={`/productsByOwner/${selectedProduct.owner}`}\n-                                >\n-                                  <h4> {selectedProduct.owner}</h4>\n-                                </Link>\n-                              </h4>\n-                              <h1>{selectedProduct.name}</h1>n\n-                              <p>{selectedProduct.description}</p>\n-                              <p>\n-                                <strong>Price:</strong> {selectedProduct.price}\n-                              </p>\n-                            </div>\n-                            <div style={style.buttonsContainer}>\n-                              <div>\n-                                <button\n-                                  style={style.buttons}\n-                                  onClick={() =>\n-                                    dispatch(\n-                                      addToCartBeforeLogin(selectedProduct)\n-                                    )\n-                                  }\n-                                >\n-                                  Add To Cart\n-                                </button>\n-                              </div>\n-                              <div>\n-                                <button\n-                                  style={{ ...style.buttons }}\n-                                  onClick={() => dispatch(selectedProduct)}\n-                                >\n-                                  [add To WishList]\n-                                </button>\n-                              </div>\n-                            </div>\n-                          </div>\n-                        </div>\n-                      </div>\n-                    )}\n-                    {product !== selectedProduct && (\n-                      <BoxContainer\n-                        key={index}\n-                        categoryOption={categoryShadow[product.category]}\n-                      >\n-                        <div\n-                          key={index}\n-                          style={{\n-                            ...styles.box,\n-\n-                            // justifyContent:\n-                            // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n-                          }}\n-                        >\n-                          {product.images.length > 0 ? (\n-                            <img\n-                              src={product.images[0]} // Display first image only\n-                              alt={product.name}\n-                              style={{\n-                                width: \"250px\",\n-                                height: \"250px\",\n-                                objectFit: \"cover\",\n-                                borderRadius: \"10px\",\n-                                cursor: \"pointer\",\n-                              }}\n-                              onClick={() => {\n-                                setSelectedProduct(product);\n-\n-                                show();\n-                              }}\n-                            />\n-                          ) : (\n-                            <p>{t(\"No Image Available\")}</p>\n-                          )}\n-                        </div>\n-\n-                        {/* text */}\n-                        <div style={{ display: \"flex\" }}>\n-                          <div\n-                            className=\"text\"\n-                            style={{\n-                              borderRadius: \"10PX\",\n-                              width: \"100%\",\n-                              height: \"100px\",\n-                              //  background:\"red\",\n-                              padding: \"10px\",\n-                            }}\n-                          >\n-                            <Name className=\"name\">\n-                              <span\n-                                style={{ color: \"black\" }}\n-                                dangerouslySetInnerHTML={{\n-                                  __html: highlightText(\n-                                    product.name,\n-                                    searchTerm\n-                                  ),\n-                                }}\n-                              ></span>{\" \"}\n-                            </Name>\n-                            <DescriptionContainer>\n-                              <DescriptionTitle>\n-                                {t(\"Description\")}:\n-                                <DescriptionContent>\n-                                  {product.description}\n-                                </DescriptionContent>\n-                              </DescriptionTitle>\n-                            </DescriptionContainer>\n-                            <StatusContainer>\n-                              <StatusTitle>\n-                                {t(\"Status\")}:\n-                                <StatusContent>{product.status}</StatusContent>\n-                              </StatusTitle>\n-                            </StatusContainer>\n-                            <Price key={index}>\n-                              {t(\"CFA\")}: {product.price - product.discount}\n-                            </Price>\n-                            {product.discount > 0 && (\n-                              <Discount key={index}>\n-                                {t(\"CFA\")}:<s>{product.price}</s>\n-                                <label\n-                                  style={{\n-                                    width: \"40px\",\n-                                    height: \"20px\",\n-                                    background: \"#90EE90\",\n-                                    textAlign: \"center\",\n-                                    borderRadius: \"5px\",\n-                                    marginLeft: \"15px\",\n-                                  }}\n-                                >\n-                                  -\n-                                  {(\n-                                    (product.discount / product.price) *\n-                                    100\n-                                  ).toFixed(0)}\n-                                  %\n-                                </label>\n-                              </Discount>\n-                            )}\n-                          </div>\n-\n-                          {/* like and wishlist */}\n-                          <div style={{ background: \"\" }}>\n-                            <div>\n-                              {/* Product Display */}\n-\n-                              {selectedProduct === product && (\n-                                <div>\n-                                  <button\n-                                    onClick={() => toggleLike(selectedProduct)}\n-                                    styles={{\n-                                      border: \"0px\",\n-                                      background: \"red\",\n-                                    }}\n-                                  >\n-                                    {selectedProduct.likedBy.some(\n-                                      (user) => user.userId === userId\n-                                    )\n-                                      ? \"❤️\"\n-                                      : \"🤍\"}\n-                                    {product.likes}\n-                                  </button>\n-                                </div>\n-                              )}\n-                            </div>\n-                            <div>\n-                              <button\n-                                style={{\n-                                  background: \"transparent\",\n-                                  border: \"0px solid orange\",\n-                                  color: \"orange\",\n-                                  padding: \"0px 0px\",\n-                                  background: \"none\",\n-                                  borderRadius: \"10px 10px 10px 10px \",\n-                                  cursor: \"pointer\",\n-                                  fontSize: \"40px\",\n-                                  transition: \"all 0.3s ease\",\n-                                  marginRight: \"auto\",\n-                                  width: \"35px\",\n-                                }}\n-                                onClick={() =>\n-                                  dispatch(addToCartBeforeLogin(product))\n-                                }\n-                              >\n-                                +\n-                              </button>\n-                            </div>\n-                          </div>\n-                        </div>\n-\n-                        <div\n-                          style={{\n-                            background: \"\",\n-                            textAlign: \"center\",\n-                            padding: \"5px\",\n-                          }}\n-                        >\n-                          <AddtocartButton\n-                            main={product.discount > 0}\n-                            onClick={() => dispatch(addToCartAPI(product))}\n-                          >\n-                            {t(\"Add To Cart\")}\n-                          </AddtocartButton>\n-                        </div>\n-                      </BoxContainer>\n-                    )}\n-                  </div>\n-                ))\n-              ) : (\n-                <p>{t(\"Loading...\")}</p>\n-              )}\n-\n-              {selectedProduct && showDetails && selectedProduct && <></>}\n-            </div>\n-          }\n-\n-          {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n-        </React.Fragment>\n-      )}\n-    </>\n+   \n   );\n };\n const style = {\n   sliderSettings: {\n"
                },
                {
                    "date": 1743064634668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,489 @@\n     },\n   };\n \n   return (\n-   \n+    <>\n+      {isMobile ? (\n+        <React.Fragment>\n+          {\n+            <div className=\"animated-box\" style={mstyles.Mcontainer}>\n+              {mobilefilteredProducts.length > 0 ? (\n+                mobilefilteredProducts.map((product, index) => (\n+                  <div>\n+                    <BoxContainer\n+                      key={index}\n+                      categoryOption={categoryShadow[product.category]}\n+                    >\n+                      <div\n+                        key={index}\n+                        style={{\n+                          ...mstyles.mbox,\n+\n+                          // justifyContent:\n+                          // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n+                        }}\n+                      >\n+                        {product.images.length > 0 ? (\n+                          <img\n+                            src={product.images[0]} // Display first image only\n+                            alt={product.name}\n+                            style={{\n+                              width: \"135px\",\n+                              height: \"150px\",\n+                              objectFit: \"cover\",\n+                              borderRadius: \"10px\",\n+                              cursor: \"pointer\",\n+                            }}\n+                            onClick={() => {\n+                              handleProductClick(product);\n+                            }}\n+                          />\n+                        ) : (\n+                          <p>{t(\"No Image Available\")}</p>\n+                        )}\n+                        <button\n+                          style={{\n+                            position: \"relative\",\n+                            left: \"105px\",\n+                            top: \"-15px\",\n+                            background: \"none\",\n+                            border: \"none\",\n+                            fontSize: \"35px\",\n+                            color: \"orange\",\n+                          }}\n+                        >\n+                          +\n+                        </button>\n+                      </div>\n+\n+                      {/* text */}\n+                      <div style={{ display: \"flex\" }}>\n+                        <div\n+                          className=\"text\"\n+                          style={{\n+                            borderRadius: \"10PX\",\n+                            width: \"100%\",\n+                            height: \"100px\",\n+                            // background:\"red\",\n+                            padding: \"10px\",\n+                          }}\n+                        >\n+                          <Name className=\"name\" fontSize=\"17px\">\n+                            <span\n+                              style={{ color: \"black\" }}\n+                              dangerouslySetInnerHTML={{\n+                                __html: highlightText(product.name, searchTerm),\n+                              }}\n+                            ></span>{\" \"}\n+                          </Name>\n+\n+                          {/* <DescriptionContainer>\n+                                   <DescriptionTitle>\n+                                     {t(\"Description\")}:\n+                                     <DescriptionContent>\n+                                       {product.description}\n+                                     </DescriptionContent>\n+                                   </DescriptionTitle>\n+                                 </DescriptionContainer> */}\n+                          <StatusContainer>\n+                            <StatusTitle>\n+                              {t(\"Status\")}:\n+                              <StatusContent>{product.status}</StatusContent>\n+                            </StatusTitle>\n+                          </StatusContainer>\n+                          <Price key={index}>\n+                            {t(\"CFA\")}: {product.price - product.discount}\n+                          </Price>\n+                          {product.discount > 0 && (\n+                            <Discount key={index}>\n+                              {t(\"CFA\")}:<s>{product.price}</s>\n+                              <label\n+                                style={{\n+                                  width: \"40px\",\n+                                  height: \"20px\",\n+                                  background: \"#90EE90\",\n+                                  textAlign: \"center\",\n+                                  borderRadius: \"5px\",\n+                                  marginLeft: \"15px\",\n+                                }}\n+                              >\n+                                -\n+                                {(\n+                                  (product.discount / product.price) *\n+                                  100\n+                                ).toFixed(0)}\n+                                %\n+                              </label>\n+                            </Discount>\n+                          )}\n+                        </div>\n+                      </div>\n+\n+                      <div\n+                        style={{\n+                          background: \"\",\n+                          textAlign: \"center\",\n+                          padding: \"5px\",\n+                        }}\n+                      >\n+                        <MAddtocartButton\n+                          main={product.discount > 0}\n+                          width=\"auto\"\n+                          onClick={() => dispatch(addToCartAPI(product))}\n+                        >\n+                          {t(\"Add To Cart\")}\n+                        </MAddtocartButton>\n+                      </div>\n+                    </BoxContainer>\n+                  </div>\n+                ))\n+              ) : (\n+                <p>{t(\"Loading...\")}</p>\n+              )}\n+\n+              {selectedProduct && showDetails && selectedProduct && <></>}\n+            </div>\n+          }\n+\n+          {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n+        </React.Fragment>\n+      ) : (\n+        <div style={styles.container}>\n+          {Object.keys(groupedProducts).map((category, index) => (\n+            <div key={index} style={styles.categoryContainer}>\n+              <h2 style={styles.categoryTitle}>\n+                {\" \"}\n+                <span\n+                  style={{ color: \"black\" }}\n+                  dangerouslySetInnerHTML={{\n+                    __html: highlightText(category, searchTerm),\n+                  }}\n+                ></span>{\" \"}\n+              </h2>\n+              <div style={styles.productsGrid}>\n+                {groupedProducts[category].slice(0, 5).map((product) => (\n+                  <React.Fragment>\n+                    {\n+                      <div className=\"animated-box\" style={styles.container}>\n+                        <div>\n+                          {selectedProduct === product && (\n+                            <div\n+                              style={{\n+                                padding: \"20px\",\n+                                margin: \"0 auto\",\n+                                marginTop: \"0px\",\n+                                Width: \"40%\",\n+                                maxHeight: \"100vh\",\n+                                border: \"1px solid green\",\n+                                borderRadius: \"20px\",\n+                                // background:'red',\n+                                boxShadow: \"10px 0px 50px 0px pink\",\n+                              }}\n+                            >\n+                              <div style={{ display: \"flex\" }}>\n+                                <div style={{ background: \"\", width: \"400px\" }}>\n+                                  {selectedProduct.images &&\n+                                  selectedProduct.images.length > 0 ? (\n+                                    <Slider {...style.sliderSettings}>\n+                                      {selectedProduct.images.map(\n+                                        (imgUrl, index) => (\n+                                          <div key={index}>\n+                                            <img\n+                                              src={imgUrl}\n+                                              alt={`${\n+                                                selectedProduct.title\n+                                              } - Image ${index + 1}`}\n+                                              style={{\n+                                                width: \"400px\",\n+                                                height: \"450px\",\n+                                                borderRadius: \"8px\",\n+                                              }}\n+                                            />\n+                                          </div>\n+                                        )\n+                                      )}\n+                                    </Slider>\n+                                  ) : (\n+                                    <p>No images available</p>\n+                                  )}\n+                                </div>\n+                                <div>{SelectedProduct}</div>\n+                                <div\n+                                  style={{\n+                                    background: \"#4ECDC4\",\n+                                    width: \"500px\",\n+                                    marginLeft: \"30px\",\n+                                  }}\n+                                >\n+                                  <div\n+                                    style={{\n+                                      padding: \"20px\",\n+                                      margin: \"0 auto\",\n+                                    }}\n+                                  >\n+                                    <CloseButton\n+                                      style={{\n+                                        position: \"relative\",\n+                                        left: \"420px\",\n+                                        top: \"-40px\",\n+                                        background: \"none\",\n+                                        borderRadius: \"0px 14px 10px 10px\",\n+                                        width: \"80px\",\n+                                        border: \"1px solid red\",\n+                                        cursor: \"pointer\",\n+                                        fontWeight: \"bold\",\n+                                        fontSize: \"30px\",\n+                                        color: \"red\",\n+                                      }}\n+                                      onClick={() => hanldleProductHid()}\n+                                    >\n+                                      {t(\"close\")}\n+                                    </CloseButton>\n+\n+                                    <h4>\n+                                      {\" \"}\n+                                      <Link\n+                                        to={`/productsByOwner/${selectedProduct.owner}`}\n+                                      >\n+                                        <h4> {selectedProduct.owner}</h4>\n+                                      </Link>\n+                                    </h4>\n+\n+                                    <h1>{selectedProduct.name}</h1>\n+                                    <p>{selectedProduct.description}</p>\n+                                    <p>\n+                                      <strong>Price:</strong>{\" \"}\n+                                      {selectedProduct.price}\n+                                    </p>\n+                                  </div>\n+                                  <div style={style.buttonsContainer}>\n+                                    <div>\n+                                      <button\n+                                        style={style.buttons}\n+                                        onClick={() =>\n+                                          dispatch(\n+                                            addToCartBeforeLogin(\n+                                              selectedProduct\n+                                            )\n+                                          )\n+                                        }\n+                                      >\n+                                        Add To Cart\n+                                      </button>\n+                                    </div>\n+                                    <div>\n+                                      <button\n+                                        style={{ ...style.buttons }}\n+                                        onClick={() =>\n+                                          dispatch(selectedProduct)\n+                                        }\n+                                      >\n+                                        [add To WishList]\n+                                      </button>\n+                                    </div>\n+                                  </div>\n+                                </div>\n+                              </div>\n+                            </div>\n+                          )}\n+                          {product !== selectedProduct && (\n+                            <BoxContainer\n+                              key={index}\n+                              categoryOption={categoryShadow[product.category]}\n+                            >\n+                              <div\n+                                key={index}\n+                                style={{\n+                                  ...styles.box,\n+\n+                                  // justifyContent:\n+                                  // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n+                                }}\n+                              >\n+                                {product.images.length > 0 ? (\n+                                  <img\n+                                    src={product.images[0]} // Display first image only\n+                                    alt={product.name}\n+                                    style={{\n+                                      width: \"250px\",\n+                                      height: \"250px\",\n+                                      objectFit: \"cover\",\n+                                      borderRadius: \"10px\",\n+                                      cursor: \"pointer\",\n+                                    }}\n+                                    onClick={() => {\n+                                      setSelectedProduct(product);\n+\n+                                      show();\n+                                    }}\n+                                  />\n+                                ) : (\n+                                  <p>{t(\"No Image Available\")}</p>\n+                                )}\n+                              </div>\n+\n+                              {/* text */}\n+                              <div style={{ display: \"flex\" }}>\n+                                <div\n+                                  className=\"text\"\n+                                  style={{\n+                                    borderRadius: \"10PX\",\n+                                    width: \"100%\",\n+                                    height: \"100px\",\n+                                    //  background:\"red\",\n+                                    padding: \"10px\",\n+                                  }}\n+                                >\n+                                  <Name className=\"name\">\n+                                    <span\n+                                      style={{ color: \"black\" }}\n+                                      dangerouslySetInnerHTML={{\n+                                        __html: highlightText(\n+                                          product.name,\n+                                          searchTerm\n+                                        ),\n+                                      }}\n+                                    ></span>{\" \"}\n+                                  </Name>\n+                                  <DescriptionContainer>\n+                                    <DescriptionTitle>\n+                                      {t(\"Description\")}:\n+                                      <DescriptionContent>\n+                                        {product.description}\n+                                      </DescriptionContent>\n+                                    </DescriptionTitle>\n+                                  </DescriptionContainer>\n+                                  <StatusContainer>\n+                                    <StatusTitle>\n+                                      {t(\"Status\")}:\n+                                      <StatusContent>\n+                                        {product.status}\n+                                      </StatusContent>\n+                                    </StatusTitle>\n+                                  </StatusContainer>\n+                                  <Price key={index}>\n+                                    {t(\"CFA\")}:{\" \"}\n+                                    {product.price - product.discount}\n+                                  </Price>\n+                                  {product.discount > 0 && (\n+                                    <Discount key={index}>\n+                                      {t(\"CFA\")}:<s>{product.price}</s>\n+                                      <label\n+                                        style={{\n+                                          width: \"40px\",\n+                                          height: \"20px\",\n+                                          background: \"#90EE90\",\n+                                          textAlign: \"center\",\n+                                          borderRadius: \"5px\",\n+                                          marginLeft: \"15px\",\n+                                        }}\n+                                      >\n+                                        -\n+                                        {(\n+                                          (product.discount / product.price) *\n+                                          100\n+                                        ).toFixed(0)}\n+                                        %\n+                                      </label>\n+                                    </Discount>\n+                                  )}\n+                                </div>\n+\n+                                {/* like and wishlist */}\n+                                <div style={{ background: \"\" }}>\n+                                  <div>\n+                                    {/* Product Display */}\n+\n+                                    {selectedProduct === product && (\n+                                      <div>\n+                                        <button\n+                                          onClick={() =>\n+                                            toggleLike(selectedProduct)\n+                                          }\n+                                          styles={{\n+                                            border: \"0px\",\n+                                            background: \"red\",\n+                                          }}\n+                                        >\n+                                          {selectedProduct.likedBy.some(\n+                                            (user) => user.userId === userId\n+                                          )\n+                                            ? \"❤️\"\n+                                            : \"🤍\"}\n+                                          {product.likes}\n+                                        </button>\n+                                      </div>\n+                                    )}\n+                                  </div>\n+                                  <div>\n+                                    <button\n+                                      style={{\n+                                        background: \"transparent\",\n+                                        border: \"0px solid orange\",\n+                                        color: \"orange\",\n+                                        padding: \"0px 0px\",\n+                                        background: \"none\",\n+                                        borderRadius: \"10px 10px 10px 10px \",\n+                                        cursor: \"pointer\",\n+                                        fontSize: \"40px\",\n+                                        transition: \"all 0.3s ease\",\n+                                        marginRight: \"auto\",\n+                                        width: \"35px\",\n+                                      }}\n+                                      onClick={() =>\n+                                        dispatch(addToCartBeforeLogin(product))\n+                                      }\n+                                    >\n+                                      +\n+                                    </button>\n+                                  </div>\n+                                </div>\n+                              </div>\n+\n+                              <div\n+                                style={{\n+                                  background: \"\",\n+                                  textAlign: \"center\",\n+                                  padding: \"5px\",\n+                                }}\n+                              >\n+                                <AddtocartButton\n+                                  main={product.discount > 0}\n+                                  onClick={() =>\n+                                    dispatch(addToCartAPI(product))\n+                                  }\n+                                >\n+                                  {t(\"Add To Cart\")}\n+                                </AddtocartButton>\n+                              </div>\n+                            </BoxContainer>\n+                          )}\n+                        </div>\n+\n+                        {selectedProduct && showDetails && selectedProduct && (\n+                          <></>\n+                        )}\n+                      </div>\n+                    }\n+\n+                    {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n+                  </React.Fragment>\n+                ))}\n+                <div>\n+                  <Link\n+                    to={`/category/${category}`}\n+                    style={styles.viewMoreButton}\n+                  >\n+                    {t(\"View More\")}\n+                  </Link>\n+                </div>\n+              </div>\n+            </div>\n+          ))}\n+        </div>\n+      )}\n+    </>\n   );\n };\n const style = {\n   sliderSettings: {\n"
                },
                {
                    "date": 1743064697161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,9 +264,9 @@\n           {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n         </React.Fragment>\n       ) : (\n         <div style={styles.container}>\n-          {Object.keys(groupedProducts).map((category, index) => (\n+          {.map((category, index) => (\n             <div key={index} style={styles.categoryContainer}>\n               <h2 style={styles.categoryTitle}>\n                 {\" \"}\n                 <span\n"
                },
                {
                    "date": 1743064707760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,9 +264,9 @@\n           {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n         </React.Fragment>\n       ) : (\n         <div style={styles.container}>\n-          {.map((category, index) => (\n+          {Dobject.map((category, index) => (\n             <div key={index} style={styles.categoryContainer}>\n               <h2 style={styles.categoryTitle}>\n                 {\" \"}\n                 <span\n"
                },
                {
                    "date": 1743064721742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,9 +264,9 @@\n           {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n         </React.Fragment>\n       ) : (\n         <div style={styles.container}>\n-          {Dobject.map((category, index) => (\n+          {Dobject1.map((category, index) => (\n             <div key={index} style={styles.categoryContainer}>\n               <h2 style={styles.categoryTitle}>\n                 {\" \"}\n                 <span\n@@ -276,9 +276,9 @@\n                   }}\n                 ></span>{\" \"}\n               </h2>\n               <div style={styles.productsGrid}>\n-                {groupedProducts[category].slice(0, 5).map((product) => (\n+                {map((product) => (\n                   <React.Fragment>\n                     {\n                       <div className=\"animated-box\" style={styles.container}>\n                         <div>\n"
                },
                {
                    "date": 1743064732738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,9 +276,9 @@\n                   }}\n                 ></span>{\" \"}\n               </h2>\n               <div style={styles.productsGrid}>\n-                {map((product) => (\n+                {Dobjectmap((product) => (\n                   <React.Fragment>\n                     {\n                       <div className=\"animated-box\" style={styles.container}>\n                         <div>\n"
                },
                {
                    "date": 1743064739445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,9 +264,9 @@\n           {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n         </React.Fragment>\n       ) : (\n         <div style={styles.container}>\n-          {Dobject1.map((category, index) => (\n+          {Dobject.map((category, index) => (\n             <div key={index} style={styles.categoryContainer}>\n               <h2 style={styles.categoryTitle}>\n                 {\" \"}\n                 <span\n@@ -276,9 +276,9 @@\n                   }}\n                 ></span>{\" \"}\n               </h2>\n               <div style={styles.productsGrid}>\n-                {Dobjectmap((product) => (\n+                {Dobject1.map((product) => (\n                   <React.Fragment>\n                     {\n                       <div className=\"animated-box\" style={styles.container}>\n                         <div>\n"
                },
                {
                    "date": 1743064751854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n       {isMobile ? (\n         <React.Fragment>\n           {\n             <div className=\"animated-box\" style={mstyles.Mcontainer}>\n-              {mobilefilteredProducts.length > 0 ? (\n+              {M.length > 0 ? (\n                 mobilefilteredProducts.map((product, index) => (\n                   <div>\n                     <BoxContainer\n                       key={index}\n"
                },
                {
                    "date": 1743064757508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n       {isMobile ? (\n         <React.Fragment>\n           {\n             <div className=\"animated-box\" style={mstyles.Mcontainer}>\n-              {M.length > 0 ? (\n+              {Mobject.length > 0 ? (\n                 mobilefilteredProducts.map((product, index) => (\n                   <div>\n                     <BoxContainer\n                       key={index}\n"
                },
                {
                    "date": 1743064764069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,9 +123,9 @@\n         <React.Fragment>\n           {\n             <div className=\"animated-box\" style={mstyles.Mcontainer}>\n               {Mobject.length > 0 ? (\n-                mobilefilteredProducts.map((product, index) => (\n+                .map((product, index) => (\n                   <div>\n                     <BoxContainer\n                       key={index}\n                       categoryOption={categoryShadow[product.category]}\n"
                },
                {
                    "date": 1743064785000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,9 @@\n   handleProductClick,\n   hanldleProductHid,\n   Mobject,\n   Dobject,\n+  \n   isMobile,\n   setSelectedProduct,\n   selectedProduct,\n   showDetails,\n@@ -123,9 +124,9 @@\n         <React.Fragment>\n           {\n             <div className=\"animated-box\" style={mstyles.Mcontainer}>\n               {Mobject.length > 0 ? (\n-                .map((product, index) => (\n+                Mobject.map((product, index) => (\n                   <div>\n                     <BoxContainer\n                       key={index}\n                       categoryOption={categoryShadow[product.category]}\n"
                },
                {
                    "date": 1743064792586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,8 @@\n   handleProductClick,\n   hanldleProductHid,\n   Mobject,\n   Dobject,\n-  \n   isMobile,\n   setSelectedProduct,\n   selectedProduct,\n   showDetails,\n"
                },
                {
                    "date": 1743064798702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,9 @@\n   handleProductClick,\n   hanldleProductHid,\n   Mobject,\n   Dobject,\n+  Dobject1,\n   isMobile,\n   setSelectedProduct,\n   selectedProduct,\n   showDetails,\n"
                },
                {
                    "date": 1743066358400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -277,9 +277,9 @@\n                   }}\n                 ></span>{\" \"}\n               </h2>\n               <div style={styles.productsGrid}>\n-                {Dobject1.map((product) => (\n+                {Dobject1[].map((product) => (\n                   <React.Fragment>\n                     {\n                       <div className=\"animated-box\" style={styles.container}>\n                         <div>\n"
                },
                {
                    "date": 1743066368651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -277,9 +277,9 @@\n                   }}\n                 ></span>{\" \"}\n               </h2>\n               <div style={styles.productsGrid}>\n-                {Dobject1[].map((product) => (\n+                {Dobject1[category?].map((product) => (\n                   <React.Fragment>\n                     {\n                       <div className=\"animated-box\" style={styles.container}>\n                         <div>\n"
                },
                {
                    "date": 1743066500775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,60 +65,9 @@\n   const userId = localStorage.getItem(\"userId\");\n   const { t, i18n } = useTranslation();\n   const dispatch = useDispatch(); // Function to check screen size\n \n-  const styles = {\n-    container: {\n-      display: \"flex\",\n-      flexDirection: \"row\",\n-      flexWrap: \"wrap\",\n-      justifyContent: \"center\",\n-      alignItems: \"center\",\n-      gap: \"20px\",\n-      background: \"white\",\n-      maxWidth: \"96%\", // Prevents full width spread\n-      margin: \"auto\", // Centers the whole container\n-      padding: \"20px\",\n-      marginTop: \"50px\",\n-    },\n-    box: {\n-      width: \"250px\",\n-      height: \"250px\",\n-    },\n \n-    lastBox: {\n-      background: \"blue\",\n-\n-      // Pushes last box to the left\n-    },\n-  };\n-\n-  const mstyles = {\n-    Mcontainer: {\n-      display: \"flex\",\n-      flexDirection: \"row\",\n-      flexWrap: \"wrap\",\n-      justifyContent: \"center\",\n-      alignItems: \"center\",\n-      gap: \"10px\",\n-      background: \"white\",\n-      maxWidth: \"100%\", // Prevents full width spread\n-      margin: \"auto\", // Centers the whole container\n-      padding: \"0px\",\n-      marginTop: \"200px\",\n-    },\n-    mbox: {\n-      width: \"100px\",\n-      height: \"150px\",\n-    },\n-\n-    mlastBox: {\n-      background: \"blue\",\n-\n-      // Pushes last box to the left\n-    },\n-  };\n-\n   return (\n     <>\n       {isMobile ? (\n         <React.Fragment>\n@@ -277,9 +226,9 @@\n                   }}\n                 ></span>{\" \"}\n               </h2>\n               <div style={styles.productsGrid}>\n-                {Dobject1[category?].map((product) => (\n+                {Dobject1[category]?.map((product) => (\n                   <React.Fragment>\n                     {\n                       <div className=\"animated-box\" style={styles.container}>\n                         <div>\n"
                },
                {
                    "date": 1743066848408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,103 @@\n   const userId = localStorage.getItem(\"userId\");\n   const { t, i18n } = useTranslation();\n   const dispatch = useDispatch(); // Function to check screen size\n \n+  const styles = {\n+    container: {\n+      display: \"flex\",\n+      flexDirection: \"row\",\n+      flexWrap: \"wrap\",\n+      justifyContent: \"center\",\n+      alignItems: \"center\",\n+      gap: \"20px\",\n+      background: \"white\",\n+      maxWidth: \"96%\", // Prevents full width spread\n+      margin: \"auto\", // Centers the whole container\n+      padding: \"0px\",\n+      marginTop: \"50px\",\n+      margin: \"5px\",\n+    },\n+    Categorycontainer: {\n+      width: \"90%\",\n+      margin: \"auto\",\n+      marginTop: \"90px\",\n+      paddingRight: \"20px\",\n+    },\n+    categoryContainer: { marginBottom: \"20px\", background: \"\" },\n+    categoryTitle: { color: \"teal\" },\n+    productsGrid: {\n+      display: \"flex\",\n+      flexWrap: \"wrap\",\n+      gap: \"10px\",\n+      border: \"none\",\n+      padding: \"10px\",\n+    },\n+    productBox: {\n+      width: \"250px\",\n+      height: \"250px\",\n+      backgroundColor: \"\",\n+      display: \"flex\",\n+      flexDirection: \"column\",\n+      justifyContent: \"center\",\n+      alignItems: \"center\",\n+      borderRadius: \"8px\",\n+    },\n+    image: {\n+      width: \"250px\",\n+      height: \"250px\",\n+      objectFit: \"cover\",\n+      borderRadius: \"10px\",\n+    },\n \n+    viewMoreButton: {\n+      display: \"inline-block\",\n+      marginTop: \"10px\",\n+      padding: \"8px 15px\",\n+      backgroundColor: \"teal\",\n+      color: \"white\",\n+      textDecoration: \"none\",\n+      borderRadius: \"5px\",\n+    },\n+\n+    box: {\n+      width: \"250px\",\n+      height: \"250px\",\n+    },\n+\n+    lastBox: {\n+      background: \"blue\",\n+\n+      // Pushes last box to the left\n+    },\n+  };\n+\n+  const mstyles = {\n+    Mcontainer: {\n+      display: \"flex\",\n+      flexDirection: \"row\",\n+      flexWrap: \"wrap\",\n+      justifyContent: \"center\",\n+      alignItems: \"center\",\n+      gap: \"10px\",\n+      background: \"white\",\n+      maxWidth: \"100%\", // Prevents full width spread\n+      margin: \"auto\", // Centers the whole container\n+      padding: \"0px\",\n+      marginTop: \"200px\",\n+    },\n+    mbox: {\n+      width: \"100px\",\n+      height: \"150px\",\n+    },\n+\n+    mlastBox: {\n+      background: \"blue\",\n+\n+      // Pushes last box to the left\n+    },\n+  };\n+\n   return (\n     <>\n       {isMobile ? (\n         <React.Fragment>\n@@ -106,9 +200,9 @@\n                           />\n                         ) : (\n                           <p>{t(\"No Image Available\")}</p>\n                         )}\n-                        <button\n+                        <M\n                           style={{\n                             position: \"relative\",\n                             left: \"105px\",\n                             top: \"-15px\",\n@@ -118,9 +212,9 @@\n                             color: \"orange\",\n                           }}\n                         >\n                           +\n-                        </button>\n+                        </M>\n                       </div>\n \n                       {/* text */}\n                       <div style={{ display: \"flex\" }}>\n"
                },
                {
                    "date": 1743066855179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,10 @@\n                           />\n                         ) : (\n                           <p>{t(\"No Image Available\")}</p>\n                         )}\n-                        <M\n+                        <MAddToWishList\n+                        \n                           style={{\n                             position: \"relative\",\n                             left: \"105px\",\n                             top: \"-15px\",\n@@ -212,9 +213,10 @@\n                             color: \"orange\",\n                           }}\n                         >\n                           +\n-                        </M>\n+                        </MAddToWishList\n+                        >\n                       </div>\n \n                       {/* text */}\n                       <div style={{ display: \"flex\" }}>\n"
                },
                {
                    "date": 1743066863222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,9 +201,9 @@\n                         ) : (\n                           <p>{t(\"No Image Available\")}</p>\n                         )}\n                         <MAddToWishList\n-                        position={p}\n+                        position={po}\n                           style={{\n                             position: \"relative\",\n                             left: \"105px\",\n                             top: \"-15px\",\n@@ -214,9 +214,9 @@\n                           }}\n                         >\n                           +\n                         </MAddToWishList\n-                        position={p}>\n+                        position={po}>\n                       </div>\n \n                       {/* text */}\n                       <div style={{ display: \"flex\" }}>\n"
                },
                {
                    "date": 1743066878842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,9 +214,9 @@\n                           }}\n                         >\n                           +\n                         </MAddToWishList\n-                    >\n+                >\n                       </div>\n \n                       {/* text */}\n                       <div style={{ display: \"flex\" }}>\n"
                }
            ],
            "date": 1743064538785,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState, useRef } from \"react\";\nimport \"./products.css\";\nimport { AuthContext } from \"../../AuthContext\";\nimport { useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToCartBeforeLogin, addToCartAPI } from \"../../cartAction\";\nimport { addToWishListAPI } from \"../../wishlistAction\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport Slider from \"react-slick\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"../translations/i18n\";\nimport {\n  BoxContainer,\n  AddtocartButton,\n  MAddtocartButton,\n  MAddToWishList,\n  Price,\n  Discount,\n  DescriptionContainer,\n  DescriptionTitle,\n  DescriptionContent,\n  StatusContainer,\n  StatusContent,\n  StatusTitle,\n  CloseButton,\n  Name,\n  positions,\n  fontSizes,\n  categoryShadow,\n} from \"./styledComponents\";\nimport { addToCart, removeFromCart } from \"../../cartSlice\";\nimport e from \"cors\";\n\nconst Box = ({\n  api,\n  loading,\n  add,\n  images,\n  filteredProducts,\n  SelectedProduct,\n  addToCart,\n  addToWishList,\n  handleShowAlert,\n  showAlert,\n  searchTerm,\n  highlightText,\n  selectedCategory,\n  Fortop,\n\n  toggleLike,\n  show,\n  handleProductClick,\n  hanldleProductHid,\n  Mobject,\n  Dobject,\n  isMobile,\n  setSelectedProduct,\n  selectedProduct,\n  showDetails,\n  position,\n  fontSize,\n}) => {\n  const userId = localStorage.getItem(\"userId\");\n  const { t, i18n } = useTranslation();\n  const dispatch = useDispatch(); // Function to check screen size\n\n  const styles = {\n    container: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"20px\",\n      background: \"white\",\n      maxWidth: \"96%\", // Prevents full width spread\n      margin: \"auto\", // Centers the whole container\n      padding: \"20px\",\n      marginTop: \"50px\",\n    },\n    box: {\n      width: \"250px\",\n      height: \"250px\",\n    },\n\n    lastBox: {\n      background: \"blue\",\n\n      // Pushes last box to the left\n    },\n  };\n\n  const mstyles = {\n    Mcontainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"10px\",\n      background: \"white\",\n      maxWidth: \"100%\", // Prevents full width spread\n      margin: \"auto\", // Centers the whole container\n      padding: \"0px\",\n      marginTop: \"200px\",\n    },\n    mbox: {\n      width: \"100px\",\n      height: \"150px\",\n    },\n\n    mlastBox: {\n      background: \"blue\",\n\n      // Pushes last box to the left\n    },\n  };\n\n  return (\n    <>\n      {isMobile ? (\n        <React.Fragment>\n          {\n            <div className=\"animated-box\" style={mstyles.Mcontainer}>\n              {Mobject.length > 0 ? (\n                Mobject.map((product, index) => (\n                  <div>\n                    <BoxContainer\n                      key={index}\n                      categoryOption={categoryShadow[product.category]}\n                    >\n                      <div\n                        key={index}\n                        style={{\n                          ...mstyles.mbox,\n\n                          // justifyContent:\n                          // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n                        }}\n                      >\n                        {product.images.length > 0 ? (\n                          <img\n                            src={product.images[0]} // Display first image only\n                            alt={product.name}\n                            style={{\n                              width: \"135px\",\n                              height: \"150px\",\n                              objectFit: \"cover\",\n                              borderRadius: \"10px\",\n                              cursor: \"pointer\",\n                            }}\n                            onClick={() => {\n                              setSelectedProduct(product);\n                              handleProductClick(product);\n                              show();\n                            }}\n                          />\n                        ) : (\n                          <p>{t(\"No Image Available\")}</p>\n                        )}\n                        <MAddToWishList position={position}>+</MAddToWishList>\n                      </div>\n\n                      {/* text */}\n                      <div style={{ display: \"flex\" }}>\n                        <div\n                          className=\"text\"\n                          style={{\n                            borderRadius: \"10PX\",\n                            width: \"100%\",\n                            height: \"100px\",\n                            // background:\"red\",\n                            padding: \"10px\",\n                          }}\n                        >\n                          <Name className=\"name\" fontSize=\"17px\">\n                            <span\n                              style={{ color: \"black\" }}\n                              dangerouslySetInnerHTML={{\n                                __html: highlightText(product.name, searchTerm),\n                              }}\n                            ></span>{\" \"}\n                          </Name>\n\n                          {/* <DescriptionContainer>\n                         <DescriptionTitle>\n                           {t(\"Description\")}:\n                           <DescriptionContent>\n                             {product.description}\n                           </DescriptionContent>\n                         </DescriptionTitle>\n                       </DescriptionContainer> */}\n                          <StatusContainer>\n                            <StatusTitle>\n                              {t(\"Status\")}:\n                              <StatusContent>{product.status}</StatusContent>\n                            </StatusTitle>\n                          </StatusContainer>\n                          <Price key={index}>\n                            {t(\"CFA\")}: {product.price - product.discount}\n                          </Price>\n                          {product.discount > 0 && (\n                            <Discount key={index}>\n                              {t(\"CFA\")}:<s>{product.price}</s>\n                              <label\n                                style={{\n                                  width: \"40px\",\n                                  height: \"20px\",\n                                  background: \"#90EE90\",\n                                  textAlign: \"center\",\n                                  borderRadius: \"5px\",\n                                  marginLeft: \"15px\",\n                                }}\n                              >\n                                -\n                                {(\n                                  (product.discount / product.price) *\n                                  100\n                                ).toFixed(0)}\n                                %\n                              </label>\n                            </Discount>\n                          )}\n                        </div>\n                      </div>\n\n                      <div\n                        style={{\n                          background: \"\",\n                          textAlign: \"center\",\n                          padding: \"5px\",\n                        }}\n                      >\n                        <MAddtocartButton\n                          fontSize={fontSize}\n                          main={product.discount > 0}\n                          width=\"auto\"\n                          onClick={() => dispatch(addToCartAPI(product))}\n                        >\n                          {t(\"Add To Cart\")}\n                        </MAddtocartButton>\n                      </div>\n                    </BoxContainer>\n                  </div>\n                ))\n              ) : (\n                <p>{t(\"Loading...\")}</p>\n              )}\n\n              {selectedProduct && showDetails && selectedProduct && <></>}\n            </div>\n          }\n\n          {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          {\n            <div className=\"animated-box\" style={styles.container}>\n              {Dobject.length > 0 ? (\n                Dobject.map((product, index) => (\n                  <div>\n                    {selectedProduct === product && (\n                      <div\n                        style={{\n                          padding: \"20px\",\n                          margin: \"0 auto\",\n                          marginTop: \"0px\",\n                          Width: \"40%\",\n                          maxHeight: \"100vh\",\n                          border: \"1px solid green\",\n                          borderRadius: \"20px\",\n                          // background:'red',\n                          boxShadow: \"10px 0px 50px 0px pink\",\n                        }}\n                      >\n                        <div style={{ display: \"flex\" }}>\n                          <div style={{ background: \"\", width: \"400px\" }}>\n                            {selectedProduct.images &&\n                            selectedProduct.images.length > 0 ? (\n                              <Slider {...style.sliderSettings}>\n                                {selectedProduct.images.map((imgUrl, index) => (\n                                  <div key={index}>\n                                    <img\n                                      src={imgUrl}\n                                      alt={`${selectedProduct.title} - Image ${\n                                        index + 1\n                                      }`}\n                                      style={{\n                                        width: \"400px\",\n                                        height: \"450px\",\n                                        borderRadius: \"8px\",\n                                      }}\n                                    />\n                                  </div>\n                                ))}\n                              </Slider>\n                            ) : (\n                              <p>No images available</p>\n                            )}\n                          </div>\n                          <div>{SelectedProduct}</div>\n                          <div\n                            style={{\n                              background: \"#4ECDC4\",\n                              width: \"500px\",\n                              marginLeft: \"30px\",\n                            }}\n                          >\n                            <div style={{ padding: \"20px\", margin: \"0 auto\" }}>\n                              <CloseButton\n                                style={{\n                                  position: \"relative\",\n                                  left: \"420px\",\n                                  top: \"-40px\",\n                                  background: \"none\",\n                                  borderRadius: \"0px 14px 10px 10px\",\n                                  width: \"80px\",\n                                  border: \"1px solid red\",\n                                  cursor: \"pointer\",\n                                  fontWeight: \"bold\",\n                                  fontSize: \"30px\",\n                                  color: \"red\",\n                                }}\n                                onClick={() => hanldleProductHid()}\n                              >\n                                {t(\"close\")}\n                              </CloseButton>\n                              <h4>\n                                {\" \"}\n                                <Link\n                                  to={`/productsByOwner/${selectedProduct.owner}`}\n                                >\n                                  <h4> {selectedProduct.owner}</h4>\n                                </Link>\n                              </h4>\n                              <h1>{selectedProduct.name}</h1>n\n                              <p>{selectedProduct.description}</p>\n                              <p>\n                                <strong>Price:</strong> {selectedProduct.price}\n                              </p>\n                            </div>\n                            <div style={style.buttonsContainer}>\n                              <div>\n                                <button\n                                  style={style.buttons}\n                                  onClick={() =>\n                                    dispatch(\n                                      addToCartBeforeLogin(selectedProduct)\n                                    )\n                                  }\n                                >\n                                  Add To Cart\n                                </button>\n                              </div>\n                              <div>\n                                <button\n                                  style={{ ...style.buttons }}\n                                  onClick={() => dispatch(selectedProduct)}\n                                >\n                                  [add To WishList]\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                    {product !== selectedProduct && (\n                      <BoxContainer\n                        key={index}\n                        categoryOption={categoryShadow[product.category]}\n                      >\n                        <div\n                          key={index}\n                          style={{\n                            ...styles.box,\n\n                            // justifyContent:\n                            // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n                          }}\n                        >\n                          {product.images.length > 0 ? (\n                            <img\n                              src={product.images[0]} // Display first image only\n                              alt={product.name}\n                              style={{\n                                width: \"250px\",\n                                height: \"250px\",\n                                objectFit: \"cover\",\n                                borderRadius: \"10px\",\n                                cursor: \"pointer\",\n                              }}\n                              onClick={() => {\n                                setSelectedProduct(product);\n\n                                show();\n                              }}\n                            />\n                          ) : (\n                            <p>{t(\"No Image Available\")}</p>\n                          )}\n                        </div>\n\n                        {/* text */}\n                        <div style={{ display: \"flex\" }}>\n                          <div\n                            className=\"text\"\n                            style={{\n                              borderRadius: \"10PX\",\n                              width: \"100%\",\n                              height: \"100px\",\n                              //  background:\"red\",\n                              padding: \"10px\",\n                            }}\n                          >\n                            <Name className=\"name\">\n                              <span\n                                style={{ color: \"black\" }}\n                                dangerouslySetInnerHTML={{\n                                  __html: highlightText(\n                                    product.name,\n                                    searchTerm\n                                  ),\n                                }}\n                              ></span>{\" \"}\n                            </Name>\n                            <DescriptionContainer>\n                              <DescriptionTitle>\n                                {t(\"Description\")}:\n                                <DescriptionContent>\n                                  {product.description}\n                                </DescriptionContent>\n                              </DescriptionTitle>\n                            </DescriptionContainer>\n                            <StatusContainer>\n                              <StatusTitle>\n                                {t(\"Status\")}:\n                                <StatusContent>{product.status}</StatusContent>\n                              </StatusTitle>\n                            </StatusContainer>\n                            <Price key={index}>\n                              {t(\"CFA\")}: {product.price - product.discount}\n                            </Price>\n                            {product.discount > 0 && (\n                              <Discount key={index}>\n                                {t(\"CFA\")}:<s>{product.price}</s>\n                                <label\n                                  style={{\n                                    width: \"40px\",\n                                    height: \"20px\",\n                                    background: \"#90EE90\",\n                                    textAlign: \"center\",\n                                    borderRadius: \"5px\",\n                                    marginLeft: \"15px\",\n                                  }}\n                                >\n                                  -\n                                  {(\n                                    (product.discount / product.price) *\n                                    100\n                                  ).toFixed(0)}\n                                  %\n                                </label>\n                              </Discount>\n                            )}\n                          </div>\n\n                          {/* like and wishlist */}\n                          <div style={{ background: \"\" }}>\n                            <div>\n                              {/* Product Display */}\n\n                              {selectedProduct === product && (\n                                <div>\n                                  <button\n                                    onClick={() => toggleLike(selectedProduct)}\n                                    styles={{\n                                      border: \"0px\",\n                                      background: \"red\",\n                                    }}\n                                  >\n                                    {selectedProduct.likedBy.some(\n                                      (user) => user.userId === userId\n                                    )\n                                      ? \"❤️\"\n                                      : \"🤍\"}\n                                    {product.likes}\n                                  </button>\n                                </div>\n                              )}\n                            </div>\n                            <div>\n                              <button\n                                style={{\n                                  background: \"transparent\",\n                                  border: \"0px solid orange\",\n                                  color: \"orange\",\n                                  padding: \"0px 0px\",\n                                  background: \"none\",\n                                  borderRadius: \"10px 10px 10px 10px \",\n                                  cursor: \"pointer\",\n                                  fontSize: \"40px\",\n                                  transition: \"all 0.3s ease\",\n                                  marginRight: \"auto\",\n                                  width: \"35px\",\n                                }}\n                                onClick={() =>\n                                  dispatch(addToCartBeforeLogin(product))\n                                }\n                              >\n                                +\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div\n                          style={{\n                            background: \"\",\n                            textAlign: \"center\",\n                            padding: \"5px\",\n                          }}\n                        >\n                          <AddtocartButton\n                            main={product.discount > 0}\n                            onClick={() => dispatch(addToCartAPI(product))}\n                          >\n                            {t(\"Add To Cart\")}\n                          </AddtocartButton>\n                        </div>\n                      </BoxContainer>\n                    )}\n                  </div>\n                ))\n              ) : (\n                <p>{t(\"Loading...\")}</p>\n              )}\n\n              {selectedProduct && showDetails && selectedProduct && <></>}\n            </div>\n          }\n\n          {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n        </React.Fragment>\n      )}\n    </>\n  );\n};\nconst style = {\n  sliderSettings: {\n    dots: true, // Show navigation dots\n    infinite: true, // Enable infinite looping\n    speed: 100, // Transition speed (ms)\n    slidesToShow: 1, // Show one image at a time\n    slidesToScroll: 1, // Scroll one image per action\n    autoplay: true,\n    autoplaySpeed: 3000, // Autoplay speed (ms)\n  },\n  buttonsContainer: {\n    display: \"flex\",\n  },\n  buttons: {\n    color: \"orangered\",\n    background: \"none\",\n    border: \"2px solid orangered\",\n    margin: \"10px\",\n    borderRadius: \"10px\",\n    before: \"+\",\n  },\n};\n\nexport default Box;\n"
        }
    ]
}