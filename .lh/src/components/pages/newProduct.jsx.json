{
    "sourceFile": "src/components/pages/newProduct.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 45,
            "patches": [
                {
                    "date": 1738186888230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738186897350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,8 @@\n       method: \"POST\",\n       body: formData,\n     });\n \n-    const imageUrl = await response.json();\n \n \n   return (\n     <div>\n"
                },
                {
                    "date": 1738186923553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,11 @@\n       console.error(\"Error:\", error);\n       setResponseMessage(\"Failed to add data.\");\n     }\n   };\n+\n+\n+  \n   // uploads\n \n   const handleUpload = async (file) => {\n     const formData = new FormData();\n@@ -40,11 +43,35 @@\n     const response = await fetch(\"http://localhost:5000/images\", {\n       method: \"POST\",\n       body: formData,\n     });\n+    const [image, setImage] = useState(null);\n+    const [uploadedImages, setUploadedImages] = useState([]);\n+  \n+    useEffect(() => {\n+      fetch(\"http://localhost:3001/images\")\n+        .then((res) => res.json())\n+        .then((data) => setUploadedImages(data));\n+    }, []);\n+  \n+    const handleUpload = async (e) => {\n+      e.preventDefault();\n+      if (!image) return alert(\"Select an image first!\");\n+  \n+      const formData = new FormData();\n+      formData.append(\"image\", image);\n+  \n+      const response = await fetch(\"http://localhost:3001/upload\", {\n+        method: \"POST\",\n+        body: formData,\n+      });\n+  \n+      const data = await response.json();\n+      alert(data.message);\n+      setUploadedImages([...uploadedImages, { url: data.url }]);\n+    };\n \n \n-\n   return (\n     <div>\n       <h2 className=\"text-center mb-3\">Create New Product</h2>\n \n"
                },
                {
                    "date": 1738186944533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,16 +32,16 @@\n     }\n   };\n \n \n-  \n+\n   // uploads\n \n   const handleUpload = async (file) => {\n     const formData = new FormData();\n     formData.append(\"image\", file);\n \n-    const response = await fetch(\"http://localhost:5000/images\", {\n+    const response = await fetch(\"http://localhost:5000/\", {\n       method: \"POST\",\n       body: formData,\n     });\n     const [image, setImage] = useState(null);\n"
                },
                {
                    "date": 1738187057417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,48 +30,21 @@\n       console.error(\"Error:\", error);\n       setResponseMessage(\"Failed to add data.\");\n     }\n   };\n-\n-\n-\n   // uploads\n \n   const handleUpload = async (file) => {\n     const formData = new FormData();\n     formData.append(\"image\", file);\n \n-    const response = await fetch(\"http://localhost:5000/\", {\n+    const response = await fetch(\"http://localhost:5000/images\", {\n       method: \"POST\",\n       body: formData,\n     });\n-    const [image, setImage] = useState(null);\n-    const [uploadedImages, setUploadedImages] = useState([]);\n-  \n-    useEffect(() => {\n-      fetch(\"http://localhost:3001/images\")\n-        .then((res) => res.json())\n-        .then((data) => setUploadedImages(data));\n-    }, []);\n-  \n-    const handleUpload = async (e) => {\n-      e.preventDefault();\n-      if (!image) return alert(\"Select an image first!\");\n-  \n-      const formData = new FormData();\n-      formData.append(\"image\", image);\n-  \n-      const response = await fetch(\"http://localhost:3001/upload\", {\n-        method: \"POST\",\n-        body: formData,\n-      });\n-  \n-      const data = await response.json();\n-      alert(data.message);\n-      setUploadedImages([...uploadedImages, { url: data.url }]);\n-    };\n \n \n+\n   return (\n     <div>\n       <h2 className=\"text-center mb-3\">Create New Product</h2>\n \n"
                },
                {
                    "date": 1738187068429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,10 +41,25 @@\n       method: \"POST\",\n       body: formData,\n     });\n \n+    const imageUrl = await response.json();\n \n+    // Save the image URL to db.json\n+    await fetch(\"http://localhost:3000/images\", {\n+      method: \"POST\",\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+      },\n+      body: JSON.stringify({ id: Date.now(), url: imageUrl }),\n+    });\n+  };\n \n+\n+\n+\n+\n+  \n   return (\n     <div>\n       <h2 className=\"text-center mb-3\">Create New Product</h2>\n \n"
                },
                {
                    "date": 1738187127558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,34 +32,58 @@\n     }\n   };\n   // uploads\n \n-  const handleUpload = async (file) => {\n-    const formData = new FormData();\n-    formData.append(\"image\", file);\n+  // const handleUpload = async (file) => {\n+  //   const formData = new FormData();\n+  //   formData.append(\"image\", file);\n \n-    const response = await fetch(\"http://localhost:5000/images\", {\n-      method: \"POST\",\n-      body: formData,\n-    });\n+  //   const response = await fetch(\"http://localhost:5000/images\", {\n+  //     method: \"POST\",\n+  //     body: formData,\n+  //   });\n \n-    const imageUrl = await response.json();\n+  //   const imageUrl = await response.json();\n \n-    // Save the image URL to db.json\n-    await fetch(\"http://localhost:3000/images\", {\n-      method: \"POST\",\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-      },\n-      body: JSON.stringify({ id: Date.now(), url: imageUrl }),\n-    });\n-  };\n+  //   // Save the image URL to db.json\n+  //   await fetch(\"http://localhost:3000/images\", {\n+  //     method: \"POST\",\n+  //     headers: {\n+  //       \"Content-Type\": \"application/json\",\n+  //     },\n+  //     body: JSON.stringify({ id: Date.now(), url: imageUrl }),\n+  //   });\n+  // };\n \n \n \n \n \n-  \n+  const [image, setImage] = useState(null);\n+  const [uploadedImages, setUploadedImages] = useState([]);\n+\n+  useEffect(() => {\n+    fetch(\"http://localhost:3001/images\")\n+      .then((res) => res.json())\n+      .then((data) => setUploadedImages(data));\n+  }, []);\n+\n+  const handleUpload = async (e) => {\n+    e.preventDefault();\n+    if (!image) return alert(\"Select an image first!\");\n+\n+    const formData = new FormData();\n+    formData.append(\"image\", image);\n+\n+    const response = await fetch(\"http://localhost:3001/upload\", {\n+      method: \"POST\",\n+      body: formData,\n+    });\n+\n+    const data = await response.json();\n+    alert(data.message);\n+    setUploadedImages([...uploadedImages, { url: data.url }]);\n+  };\n   return (\n     <div>\n       <h2 className=\"text-center mb-3\">Create New Product</h2>\n \n"
                },
                {
                    "date": 1738187285933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,16 +188,16 @@\n \n           <div className=\"row mb-3\">\n             <label className=\"col-sm-4 col-form-label\">Image</label>\n             <div className=\"col-sm-8\">\n-              <input\n+              <\n                 className=\"form-control\"\n                 name=\"image\"\n                 type=\"file\"\n                 defaultValue=\"\"\n                 placeholder=\"Enter Amount\"\n                 onChange={handleChange}\n-              />\n+              />input\n             </div>\n           </div>\n \n           <div className=\"row mb-3\">\n"
                },
                {
                    "date": 1738187293033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,16 +188,9 @@\n \n           <div className=\"row mb-3\">\n             <label className=\"col-sm-4 col-form-label\">Image</label>\n             <div className=\"col-sm-8\">\n-              <\n-                className=\"form-control\"\n-                name=\"image\"\n-                type=\"file\"\n-                defaultValue=\"\"\n-                placeholder=\"Enter Amount\"\n-                onChange={handleChange}\n-              />input\n+             \n             </div>\n           </div>\n \n           <div className=\"row mb-3\">\n"
                },
                {
                    "date": 1738187351578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,9 +188,16 @@\n \n           <div className=\"row mb-3\">\n             <label className=\"col-sm-4 col-form-label\">Image</label>\n             <div className=\"col-sm-8\">\n-             \n+            <h2>Upload Image</h2>\n+      <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n+      <button onClick={handleUpload}>Upload</button>\n+\n+      <h3>Uploaded Images</h3>\n+      {uploadedImages.map((img, index) => (\n+        <img key={index} src={http://localhost:3001/${img.url}} alt=\"Uploaded\" width=\"200\" />\n+      ))}\n             </div>\n           </div>\n \n           <div className=\"row mb-3\">\n"
                },
                {
                    "date": 1738187373546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,9 @@\n       <button onClick={handleUpload}>Upload</button>\n \n       <h3>Uploaded Images</h3>\n       {uploadedImages.map((img, index) => (\n-        <img key={index} src={http://localhost:3001/${img.url}} alt=\"Uploaded\" width=\"200\" />\n+        <img key={index} src={`http://localhost:3001/${img.url}} alt=\"Uploaded\" width=\"200\" />\n       ))}\n             </div>\n           </div>\n \n"
                },
                {
                    "date": 1738187386058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,9 @@\n       <button onClick={handleUpload}>Upload</button>\n \n       <h3>Uploaded Images</h3>\n       {uploadedImages.map((img, index) => (\n-        <img key={index} src={`http://localhost:3001/${img.url}} alt=\"Uploaded\" width=\"200\" />\n+        <img key={index} src={`http://localhost:3001/${img.url}`} alt=\"Uploaded\" width=\"200\" />\n       ))}\n             </div>\n           </div>\n \n"
                },
                {
                    "date": 1738187446388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState } from \"react\";\n+import React, { useState, } from \"react\";\n \n const NewProduct = (e) => {\n   const [formData, setFormData] = useState({\n     name: \"\",\n"
                },
                {
                    "date": 1738187452086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState, } from \"react\";\n+import React, { useState,useEffect } from \"react\";\n \n const NewProduct = (e) => {\n   const [formData, setFormData] = useState({\n     name: \"\",\n"
                },
                {
                    "date": 1738187593779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,9 +192,9 @@\n             <h2>Upload Image</h2>\n       <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n       <button onClick={handleUpload}>Upload</button>\n \n-      <h3>Uploaded Images</h3>\n+      \n       {uploadedImages.map((img, index) => (\n         <img key={index} src={`http://localhost:3001/${img.url}`} alt=\"Uploaded\" width=\"200\" />\n       ))}\n             </div>\n"
                },
                {
                    "date": 1738187608947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,9 +188,9 @@\n \n           <div className=\"row mb-3\">\n             <label className=\"col-sm-4 col-form-label\">Image</label>\n             <div className=\"col-sm-8\">\n-            <h2>Upload Image</h2>\n+           \n       <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n       <button onClick={handleUpload}>Upload</button>\n \n       \n"
                },
                {
                    "date": 1738187626530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,12 +192,8 @@\n            \n       <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n       <button onClick={handleUpload}>Upload</button>\n \n-      \n-      {uploadedImages.map((img, index) => (\n-        <img key={index} src={`http://localhost:3001/${img.url}`} alt=\"Uploaded\" width=\"200\" />\n-      ))}\n             </div>\n           </div>\n \n           <div className=\"row mb-3\">\n"
                },
                {
                    "date": 1738187678795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,9 +190,9 @@\n             <label className=\"col-sm-4 col-form-label\">Image</label>\n             <div className=\"col-sm-8\">\n            \n       <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n-      <button onClick={handleUpload}>Upload</button>\n+     \n \n             </div>\n           </div>\n \n"
                },
                {
                    "date": 1738187958617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n         body: JSON.stringify(formData),\n       });\n       const data = await response.json();\n       setResponseMessage(data.message);\n+      \n     } catch (error) {\n       console.error(\"Error:\", error);\n       setResponseMessage(\"Failed to add data.\");\n     }\n"
                },
                {
                    "date": 1738188095308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         body: JSON.stringify(formData),\n       });\n       const data = await response.json();\n       setResponseMessage(data.message);\n-      \n+\n     } catch (error) {\n       console.error(\"Error:\", error);\n       setResponseMessage(\"Failed to add data.\");\n     }\n@@ -80,8 +80,9 @@\n       body: formData,\n     });\n \n     const data = await response.json();\n+    \n     alert(data.message);\n     setUploadedImages([...uploadedImages, { url: data.url }]);\n   };\n   return (\n"
                },
                {
                    "date": 1738188101026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n       body: formData,\n     });\n \n     const data = await response.json();\n-    \n+    handleChange()\n     alert(data.message);\n     setUploadedImages([...uploadedImages, { url: data.url }]);\n   };\n   return (\n"
                },
                {
                    "date": 1738188152532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,8 @@\n       body: formData,\n     });\n \n     const data = await response.json();\n-    handleChange()\n     alert(data.message);\n     setUploadedImages([...uploadedImages, { url: data.url }]);\n   };\n   return (\n"
                },
                {
                    "date": 1738188166209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                 Save\n               </button>\n             </div>\n             <div className=\"col-sm-4 d-grid\">\n-              <button type=\"submit\">Submit</button>\n+              <button type=\"submit\" >Submit</button>\n               {/* <button type='button' className='btn btn-secondary me-2'>Cancel</button> */}\n             </div>\n           </div>\n         </form>\n"
                },
                {
                    "date": 1738188173797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                 Save\n               </button>\n             </div>\n             <div className=\"col-sm-4 d-grid\">\n-              <button type=\"submit\" >Submit</button>\n+              <button type=\"submit\" onClick>Submit</button>\n               {/* <button type='button' className='btn btn-secondary me-2'>Cancel</button> */}\n             </div>\n           </div>\n         </form>\n"
                },
                {
                    "date": 1738188181477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                 Save\n               </button>\n             </div>\n             <div className=\"col-sm-4 d-grid\">\n-              <button type=\"submit\" onClick>Submit</button>\n+              <button type=\"submit\" onClick={handleUpload}>Submit</button>\n               {/* <button type='button' className='btn btn-secondary me-2'>Cancel</button> */}\n             </div>\n           </div>\n         </form>\n"
                },
                {
                    "date": 1738188389638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n \n     const formData = new FormData();\n     formData.append(\"image\", image);\n \n-    const response = await fetch(\"http://localhost:3001/upload\", {\n+    const response = await fetch(\"http://localhost:/upload\", {\n       method: \"POST\",\n       body: formData,\n     });\n \n"
                },
                {
                    "date": 1738188677472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,231 +0,0 @@\n-import React, { useState,useEffect } from \"react\";\n-\n-const NewProduct = (e) => {\n-  const [formData, setFormData] = useState({\n-    name: \"\",\n-    category: \"\",\n-    status: \"\",\n-    like: 0,\n-  });\n-  const [responseMessage, setResponseMessage] = useState(\"\");\n-\n-  const handleChange = (e) => {\n-    const { name, value } = e.target;\n-    setFormData({ ...formData, [name]: value });\n-  };\n-\n-  const handleSubmit = async (e) => {\n-    e.preventDefault();\n-    try {\n-      const response = await fetch(\"http://localhost:5000/products\", {\n-        method: \"POST\",\n-        headers: {\n-          \"Content-Type\": \"application/json\",\n-        },\n-        body: JSON.stringify(formData),\n-      });\n-      const data = await response.json();\n-      setResponseMessage(data.message);\n-\n-    } catch (error) {\n-      console.error(\"Error:\", error);\n-      setResponseMessage(\"Failed to add data.\");\n-    }\n-  };\n-  // uploads\n-\n-  // const handleUpload = async (file) => {\n-  //   const formData = new FormData();\n-  //   formData.append(\"image\", file);\n-\n-  //   const response = await fetch(\"http://localhost:5000/images\", {\n-  //     method: \"POST\",\n-  //     body: formData,\n-  //   });\n-\n-  //   const imageUrl = await response.json();\n-\n-  //   // Save the image URL to db.json\n-  //   await fetch(\"http://localhost:3000/images\", {\n-  //     method: \"POST\",\n-  //     headers: {\n-  //       \"Content-Type\": \"application/json\",\n-  //     },\n-  //     body: JSON.stringify({ id: Date.now(), url: imageUrl }),\n-  //   });\n-  // };\n-\n-\n-\n-\n-\n-  const [image, setImage] = useState(null);\n-  const [uploadedImages, setUploadedImages] = useState([]);\n-\n-  useEffect(() => {\n-    fetch(\"http://localhost:3001/images\")\n-      .then((res) => res.json())\n-      .then((data) => setUploadedImages(data));\n-  }, []);\n-\n-  const handleUpload = async (e) => {\n-    e.preventDefault();\n-    if (!image) return alert(\"Select an image first!\");\n-\n-    const formData = new FormData();\n-    formData.append(\"image\", image);\n-\n-    const response = await fetch(\"http://localhost:/upload\", {\n-      method: \"POST\",\n-      body: formData,\n-    });\n-\n-    const data = await response.json();\n-    alert(data.message);\n-    setUploadedImages([...uploadedImages, { url: data.url }]);\n-  };\n-  return (\n-    <div>\n-      <h2 className=\"text-center mb-3\">Create New Product</h2>\n-\n-      {/* {erroMessage} */}\n-\n-      <div className=\"row\">\n-        <div className=\"col-lg-6 mx-auto\"></div>\n-        <form\n-          onSubmit={(event) => handleSubmit(event)}\n-          method=\"POST\"\n-          action=\"/products/newproduct'\"\n-        >\n-          <div className=\"row mb-3\">\n-            <label className=\"col-sm-4 col-form-label\">Name</label>\n-            <div className=\"col-sm-8\">\n-              <input\n-                className=\"form-control\"\n-                name=\"name\"\n-                defaultValue=\"\"\n-                placeholder=\"Product Name\"\n-                onChange={handleChange}\n-              />\n-            </div>\n-          </div>\n-          <div className=\"row mb-3\">\n-            <label className=\"col-sm-4 col-form-label\">Brand</label>\n-            <div className=\"col-sm-8\">\n-              <input\n-                className=\"form-control\"\n-                name=\"brand\"\n-                Value=\"\"\n-                onChange={handleChange}\n-                placeholder=\"Brand Name\"\n-              />\n-            </div>\n-          </div>\n-\n-          <div className=\"row mb-3\">\n-            <label className=\"col-sm-4 col-form-label\">Category</label>\n-            <div className=\"col-sm-8\">\n-              <select\n-                className=\"form-select\"\n-                name=\"category\"\n-                value={formData.category}\n-                placeholder=\"Choose a Category\"\n-                onChange={handleChange}\n-              >\n-                <option value=\"\">Choose a Category</option>\n-                <option value=\"Phones\">Phones</option>\n-                <option value=\"Computers\">Computers</option>\n-                <option value=\"Acceessories\">Acceessories</option>\n-                <option value=\"Farm\">Farm</option>\n-                <option value=\"Gadgets\">Gadgets</option>\n-                <option value=\"Other\">Other</option>\n-              </select>\n-            </div>\n-          </div>\n-\n-          <div className=\"row mb-3\">\n-            <label className=\"col-sm-4 col-form-label\">Status</label>\n-            <div className=\"col-sm-8\">\n-              <select\n-                className=\"form-select\"\n-                name=\"status\"\n-                defaultValue=\"\"\n-                value={formData.status}\n-                onChange={handleChange}\n-              >\n-                <option value=\"New\">New</option>\n-                <option value=\"Used\">Used</option>\n-              </select>\n-            </div>\n-          </div>\n-\n-          <div className=\"row mb-3\">\n-            <label className=\"col-sm-4 col-form-label\">Number in stock</label>\n-            <div className=\"col-sm-8\">\n-              <input\n-                className=\"form-control\"\n-                name=\"numberInStock\"\n-                type=\"number\"\n-                defaultValue=\"\"\n-                placeholder=\"Enter Quantity \"\n-                onChange={handleChange}\n-              />\n-            </div>\n-          </div>\n-\n-          <div className=\"row mb-3\">\n-            <label className=\"col-sm-4 col-form-label\">Price</label>\n-            <div className=\"col-sm-8\">\n-              <input\n-                className=\"form-control\"\n-                name=\"price\"\n-                type=\"number\"\n-                defaultValue=\"\"\n-                placeholder=\"Enter Amount\"\n-                onChange={handleChange}\n-              />\n-            </div>\n-          </div>\n-\n-          <div className=\"row mb-3\">\n-            <label className=\"col-sm-4 col-form-label\">Image</label>\n-            <div className=\"col-sm-8\">\n-           \n-      <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n-     \n-\n-            </div>\n-          </div>\n-\n-          <div className=\"row mb-3\">\n-            <label className=\"col-sm-4 col-form-label\">Description</label>\n-            <div className=\"col-sm-8\">\n-              <textarea\n-                className=\"form-control\"\n-                name=\"desc\"\n-                defaultValue=\"\"\n-                type=\"text\"\n-                placeholder=\"Details of your Product\"\n-                onChange={handleChange}\n-              />\n-            </div>\n-          </div>\n-          <div className=\"row\">\n-            <div className=\"offset-sm-4 col-sm-4 d-grid\">\n-              <button type=\"submit\" className=\"btn btn-primary btn-sm me-3\">\n-                Save\n-              </button>\n-            </div>\n-            <div className=\"col-sm-4 d-grid\">\n-              <button type=\"submit\" onClick={handleUpload}>Submit</button>\n-              {/* <button type='button' className='btn btn-secondary me-2'>Cancel</button> */}\n-            </div>\n-          </div>\n-        </form>\n-        {responseMessage && <p>{responseMessage}</p>}\n-      </div>\n-    </div>\n-  );\n-};\n-\n-export default NewProduct;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738188683909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,73 @@\n+import React, { useState, useEffect } from \"react\";\n \n+function UploadForm() {\n+  const [title, setTitle] = useState(\"\");\n+  const [description, setDescription] = useState(\"\");\n+  const [image, setImage] = useState(null);\n+  const [posts, setPosts] = useState([]);\n+\n+  useEffect(() => {\n+    fetch(\"http://localhost:3001/posts\")\n+      .then((res) => res.json())\n+      .then((data) => setPosts(data));\n+  }, []);\n+\n+  const handleUpload = async (e) => {\n+    e.preventDefault();\n+    if (!image) return alert(\"Select an image first!\");\n+\n+    const formData = new FormData();\n+    formData.append(\"title\", title);\n+    formData.append(\"description\", description);\n+    formData.append(\"image\", image);\n+\n+    const response = await fetch(\"http://localhost:3001/upload\", {\n+      method: \"POST\",\n+      body: formData,\n+    });\n+\n+    const data = await response.json();\n+    alert(data.message);\n+    setPosts([...posts, data.post]);\n+    setTitle(\"\");\n+    setDescription(\"\");\n+    setImage(null);\n+  };\n+\n+  return (\n+    <div>\n+      <h2>Upload Post</h2>\n+      <form onSubmit={handleUpload}>\n+        <input\n+          type=\"text\"\n+          placeholder=\"Enter Title\"\n+          value={title}\n+          onChange={(e) => setTitle(e.target.value)}\n+          required\n+        />\n+        <br />\n+        <textarea\n+          placeholder=\"Enter Description\"\n+          value={description}\n+          onChange={(e) => setDescription(e.target.value)}\n+          required\n+        />\n+        <br />\n+        <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n+        <br />\n+        <button type=\"submit\">Upload</button>\n+      </form>\n+\n+      <h3>Uploaded Posts</h3>\n+      {posts.map((post, index) => (\n+        <div key={index} style={{ border: \"1px solid #ccc\", padding: \"10px\", margin: \"10px 0\" }}>\n+          <h4>{post.title}</h4>\n+          <p>{post.description}</p>\n+          <img src={http://localhost:3001/${post.imageUrl}`} alt=\"Uploaded\" width=\"200\" />\n+        </div>\n+      ))}\n+    </div>\n+  );\n+}\n+\n+export default UploadForm;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738188732948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n \n-function UploadForm() {\n+function () {\n   const [title, setTitle] = useState(\"\");\n   const [description, setDescription] = useState(\"\");\n   const [image, setImage] = useState(null);\n   const [posts, setPosts] = useState([]);\n@@ -62,9 +62,9 @@\n       {posts.map((post, index) => (\n         <div key={index} style={{ border: \"1px solid #ccc\", padding: \"10px\", margin: \"10px 0\" }}>\n           <h4>{post.title}</h4>\n           <p>{post.description}</p>\n-          <img src={http://localhost:3001/${post.imageUrl}`} alt=\"Uploaded\" width=\"200\" />\n+          <img src={`http://localhost:3001/${post.imageUrl}`} alt=\"Uploaded\" width=\"200\" />\n         </div>\n       ))}\n     </div>\n   );\n"
                },
                {
                    "date": 1738188738849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n \n-function () {\n+function newProduct() {\n   const [title, setTitle] = useState(\"\");\n   const [description, setDescription] = useState(\"\");\n   const [image, setImage] = useState(null);\n   const [posts, setPosts] = useState([]);\n"
                },
                {
                    "date": 1738188745386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,5 +69,5 @@\n     </div>\n   );\n }\n \n-export default UploadForm;\n\\ No newline at end of file\n+export default ;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738188751378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,5 +69,5 @@\n     </div>\n   );\n }\n \n-export default ;\n\\ No newline at end of file\n+export default newProduct;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738188807172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,5 +69,5 @@\n     </div>\n   );\n }\n \n-export default newProduct;\n\\ No newline at end of file\n+export default N;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738188823156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n \n-function newProduct() {\n+function UploadForm() {\n   const [title, setTitle] = useState(\"\");\n   const [description, setDescription] = useState(\"\");\n   const [image, setImage] = useState(null);\n   const [posts, setPosts] = useState([]);\n@@ -69,5 +69,5 @@\n     </div>\n   );\n }\n \n-export default N;\n\\ No newline at end of file\n+export default UploadForm;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738188915203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n \n-function UploadForm() {\n+function () {\n   const [title, setTitle] = useState(\"\");\n   const [description, setDescription] = useState(\"\");\n   const [image, setImage] = useState(null);\n   const [posts, setPosts] = useState([]);\n"
                },
                {
                    "date": 1738188925764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n \n-function () {\n+function  NewProduct() {\n   const [title, setTitle] = useState(\"\");\n   const [description, setDescription] = useState(\"\");\n   const [image, setImage] = useState(null);\n   const [posts, setPosts] = useState([]);\n@@ -69,5 +69,5 @@\n     </div>\n   );\n }\n \n-export default UploadForm;\n\\ No newline at end of file\n+export default  NewProduct;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738189914781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n       {posts.map((post, index) => (\n         <div key={index} style={{ border: \"1px solid #ccc\", padding: \"10px\", margin: \"10px 0\" }}>\n           <h4>{post.title}</h4>\n           <p>{post.description}</p>\n-          <img src={`http://localhost:3001/${post.imageUrl}`} alt=\"Uploaded\" width=\"200\" />\n+          <img src={`http://localhost:/${post.imageUrl}`} alt=\"Uploaded\" width=\"200\" />\n         </div>\n       ))}\n     </div>\n   );\n"
                },
                {
                    "date": 1738189931163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     formData.append(\"title\", title);\n     formData.append(\"description\", description);\n     formData.append(\"image\", image);\n \n-    const response = await fetch(\"http://localhost:3001/upload\", {\n+    const response = await fetch(\"http://localhost:/upload\", {\n       method: \"POST\",\n       body: formData,\n     });\n \n@@ -62,9 +62,9 @@\n       {posts.map((post, index) => (\n         <div key={index} style={{ border: \"1px solid #ccc\", padding: \"10px\", margin: \"10px 0\" }}>\n           <h4>{post.title}</h4>\n           <p>{post.description}</p>\n-          <img src={`http://localhost:/${post.imageUrl}`} alt=\"Uploaded\" width=\"200\" />\n+          <img src={`http://localhost:5000/${post.imageUrl}`} alt=\"Uploaded\" width=\"200\" />\n         </div>\n       ))}\n     </div>\n   );\n"
                },
                {
                    "date": 1738189955156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   const [image, setImage] = useState(null);\n   const [posts, setPosts] = useState([]);\n \n   useEffect(() => {\n-    fetch(\"http://localhost:3001/posts\")\n+    fetch(\"http://localhost:5/posts\")\n       .then((res) => res.json())\n       .then((data) => setPosts(data));\n   }, []);\n \n@@ -20,9 +20,9 @@\n     formData.append(\"title\", title);\n     formData.append(\"description\", description);\n     formData.append(\"image\", image);\n \n-    const response = await fetch(\"http://localhost:/upload\", {\n+    const response = await fetch(\"http://localhost:5000/upload\", {\n       method: \"POST\",\n       body: formData,\n     });\n \n"
                },
                {
                    "date": 1738247485887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   const [image, setImage] = useState(null);\n   const [posts, setPosts] = useState([]);\n \n   useEffect(() => {\n-    fetch(\"http://localhost:5/posts\")\n+    fetch(/posts\")\n       .then((res) => res.json())\n       .then((data) => setPosts(data));\n   }, []);\n \n"
                },
                {
                    "date": 1738247491689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   const [image, setImage] = useState(null);\n   const [posts, setPosts] = useState([]);\n \n   useEffect(() => {\n-    fetch(/posts\")\n+    fetch(`$/posts\")\n       .then((res) => res.json())\n       .then((data) => setPosts(data));\n   }, []);\n \n"
                },
                {
                    "date": 1738247499166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   const [image, setImage] = useState(null);\n   const [posts, setPosts] = useState([]);\n \n   useEffect(() => {\n-    fetch(`$/posts\")\n+    fetch(`${api}/posts\")\n       .then((res) => res.json())\n       .then((data) => setPosts(data));\n   }, []);\n \n"
                },
                {
                    "date": 1738247521948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n \n-function  NewProduct() {\n+function  NewProduct({}) {\n   const [title, setTitle] = useState(\"\");\n   const [description, setDescription] = useState(\"\");\n   const [image, setImage] = useState(null);\n   const [posts, setPosts] = useState([]);\n"
                },
                {
                    "date": 1738247552712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n import React, { useState, useEffect } from \"react\";\n \n-function  NewProduct({}) {\n+function  NewProduct({api}) {\n   const [title, setTitle] = useState(\"\");\n   const [description, setDescription] = useState(\"\");\n   const [image, setImage] = useState(null);\n   const [posts, setPosts] = useState([]);\n \n   useEffect(() => {\n-    fetch(`${api}/posts\")\n+    fetch(`${api}/posts`)\n       .then((res) => res.json())\n       .then((data) => setPosts(data));\n   }, []);\n \n@@ -20,9 +20,9 @@\n     formData.append(\"title\", title);\n     formData.append(\"description\", description);\n     formData.append(\"image\", image);\n \n-    const response = await fetch(\"http://localhost:5000/upload\", {\n+    const response = await fetch(/upload\", {\n       method: \"POST\",\n       body: formData,\n     });\n \n"
                },
                {
                    "date": 1738247561293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     formData.append(\"title\", title);\n     formData.append(\"description\", description);\n     formData.append(\"image\", image);\n \n-    const response = await fetch(`${api}/upload\", {\n+    const response = await fetch(`${api}/upload, {\n       method: \"POST\",\n       body: formData,\n     });\n \n"
                },
                {
                    "date": 1738854691406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n \n-function  FormUploaf({api}) {\n+function  FormUploa({api}) {\n   const [title, setTitle] = useState(\"\");\n   const [description, setDescription] = useState(\"\");\n   const [image, setImage] = useState(null);\n   const [posts, setPosts] = useState([]);\n@@ -69,5 +69,5 @@\n     </div>\n   );\n }\n \n-export default  FormUploaf;\n\\ No newline at end of file\n+export default  FormUploa;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1738186888230,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\n\nconst NewProduct = (e) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    category: \"\",\n    status: \"\",\n    like: 0,\n  });\n  const [responseMessage, setResponseMessage] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/products\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n      const data = await response.json();\n      setResponseMessage(data.message);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setResponseMessage(\"Failed to add data.\");\n    }\n  };\n  // uploads\n\n  const handleUpload = async (file) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n\n    const response = await fetch(\"http://localhost:5000/images\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    const imageUrl = await response.json();\n\n\n  return (\n    <div>\n      <h2 className=\"text-center mb-3\">Create New Product</h2>\n\n      {/* {erroMessage} */}\n\n      <div className=\"row\">\n        <div className=\"col-lg-6 mx-auto\"></div>\n        <form\n          onSubmit={(event) => handleSubmit(event)}\n          method=\"POST\"\n          action=\"/products/newproduct'\"\n        >\n          <div className=\"row mb-3\">\n            <label className=\"col-sm-4 col-form-label\">Name</label>\n            <div className=\"col-sm-8\">\n              <input\n                className=\"form-control\"\n                name=\"name\"\n                defaultValue=\"\"\n                placeholder=\"Product Name\"\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          <div className=\"row mb-3\">\n            <label className=\"col-sm-4 col-form-label\">Brand</label>\n            <div className=\"col-sm-8\">\n              <input\n                className=\"form-control\"\n                name=\"brand\"\n                Value=\"\"\n                onChange={handleChange}\n                placeholder=\"Brand Name\"\n              />\n            </div>\n          </div>\n\n          <div className=\"row mb-3\">\n            <label className=\"col-sm-4 col-form-label\">Category</label>\n            <div className=\"col-sm-8\">\n              <select\n                className=\"form-select\"\n                name=\"category\"\n                value={formData.category}\n                placeholder=\"Choose a Category\"\n                onChange={handleChange}\n              >\n                <option value=\"\">Choose a Category</option>\n                <option value=\"Phones\">Phones</option>\n                <option value=\"Computers\">Computers</option>\n                <option value=\"Acceessories\">Acceessories</option>\n                <option value=\"Farm\">Farm</option>\n                <option value=\"Gadgets\">Gadgets</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"row mb-3\">\n            <label className=\"col-sm-4 col-form-label\">Status</label>\n            <div className=\"col-sm-8\">\n              <select\n                className=\"form-select\"\n                name=\"status\"\n                defaultValue=\"\"\n                value={formData.status}\n                onChange={handleChange}\n              >\n                <option value=\"New\">New</option>\n                <option value=\"Used\">Used</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"row mb-3\">\n            <label className=\"col-sm-4 col-form-label\">Number in stock</label>\n            <div className=\"col-sm-8\">\n              <input\n                className=\"form-control\"\n                name=\"numberInStock\"\n                type=\"number\"\n                defaultValue=\"\"\n                placeholder=\"Enter Quantity \"\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"row mb-3\">\n            <label className=\"col-sm-4 col-form-label\">Price</label>\n            <div className=\"col-sm-8\">\n              <input\n                className=\"form-control\"\n                name=\"price\"\n                type=\"number\"\n                defaultValue=\"\"\n                placeholder=\"Enter Amount\"\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"row mb-3\">\n            <label className=\"col-sm-4 col-form-label\">Image</label>\n            <div className=\"col-sm-8\">\n              <input\n                className=\"form-control\"\n                name=\"image\"\n                type=\"file\"\n                defaultValue=\"\"\n                placeholder=\"Enter Amount\"\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"row mb-3\">\n            <label className=\"col-sm-4 col-form-label\">Description</label>\n            <div className=\"col-sm-8\">\n              <textarea\n                className=\"form-control\"\n                name=\"desc\"\n                defaultValue=\"\"\n                type=\"text\"\n                placeholder=\"Details of your Product\"\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"offset-sm-4 col-sm-4 d-grid\">\n              <button type=\"submit\" className=\"btn btn-primary btn-sm me-3\">\n                Save\n              </button>\n            </div>\n            <div className=\"col-sm-4 d-grid\">\n              <button type=\"submit\">Submit</button>\n              {/* <button type='button' className='btn btn-secondary me-2'>Cancel</button> */}\n            </div>\n          </div>\n        </form>\n        {responseMessage && <p>{responseMessage}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default NewProduct;\n"
        }
    ]
}