{
    "sourceFile": "src/components/pages/mobileCatgory.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1742735661193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742735699934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -441,291 +441,9 @@\n                }\n      \n                {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n              </React.Fragment>\n-   ):(\n-    <React.Fragment>\n-          {\n-            <div className=\"animated-box\" style={styles.container}>\n-              {filteredProducts.length > 0 ? (\n-                filteredProducts.map((product, index) => (\n-                  <div>\n-                    {selectedProduct === product && (\n-                      <div\n-                        style={{\n-                          padding: \"20px\",\n-                          margin: \"0 auto\",\n-                          marginTop: \"0px\",\n-                          Width: \"40%\",\n-                          maxHeight: \"100vh\",\n-                          border: \"1px solid green\",\n-                          borderRadius: \"20px\",\n-                          // background:'red',\n-                          boxShadow: \"10px 0px 50px 0px pink\",\n-                        }}\n-                      >\n-                        <div style={{ display: \"flex\" }}>\n-                          <div style={{ background: \"\", width: \"400px\" }}>\n-                            {selectedProduct.images &&\n-                            selectedProduct.images.length > 0 ? (\n-                              <Slider {...style.sliderSettings}>\n-                                {selectedProduct.images.map((imgUrl, index) => (\n-                                  <div key={index}>\n-                                    <img\n-                                      src={imgUrl}\n-                                      alt={`${selectedProduct.title} - Image ${\n-                                        index + 1\n-                                      }`}\n-                                      style={{\n-                                        width: \"400px\",\n-                                        height: \"450px\",\n-                                        borderRadius: \"8px\",\n-                                      }}\n-                                    />\n-                                  </div>\n-                                ))}\n-                              </Slider>\n-                            ) : (\n-                              <p>No images available</p>\n-                            )}\n-                          </div>\n-                          <div>{SelectedProduct}</div>\n-                          <div\n-                            style={{\n-                              background: \"#4ECDC4\",\n-                              width: \"500px\",\n-                              marginLeft: \"30px\",\n-                            }}\n-                          >\n-                            <div style={{ padding: \"20px\", margin: \"0 auto\" }}>\n-                              <CloseButton\n-                                style={{\n-                                  position: \"relative\",\n-                                  left: \"420px\",\n-                                  top: \"-40px\",\n-                                  background: \"none\",\n-                                  borderRadius: \"0px 14px 10px 10px\",\n-                                  width: \"80px\",\n-                                  border: \"1px solid red\",\n-                                  cursor: \"pointer\",\n-                                  fontWeight: \"bold\",\n-                                  fontSize: \"30px\",\n-                                  color: \"red\",\n-                                }}\n-                                onClick={() => hanldleProductHid()}\n-                              >\n-                                {t(\"close\")}\n-                              </CloseButton>\n-                              <h1>{selectedProduct.name}</h1>\n-                              <p>{selectedProduct.description}</p>\n-                              <p>\n-                                <strong>Price:</strong> {selectedProduct.price}\n-                              </p>\n-                            </div>\n-                            <div style={style.buttonsContainer}>\n-                              <div>\n-                                <button\n-                                  style={style.buttons}\n-                                  onClick={() =>\n-                                    dispatch(\n-                                      addToCartBeforeLogin(selectedProduct)\n-                                    )\n-                                  }\n-                                >\n-                                  Add To Cart\n-                                </button>\n-                              </div>\n-                              <div>\n-                                <button\n-                                  style={{ ...style.buttons }}\n-                                  onClick={() => dispatch(selectedProduct)}\n-                                >\n-                                  [add To WishList]\n-                                </button>\n-                              </div>\n-                            </div>\n-                          </div>\n-                        </div>\n-                      </div>\n-                    )}\n-                    {product !== selectedProduct && (\n-                      <BoxContainer\n-                        key={index}\n-                        categoryOption={categoryShadow[product.category]}\n-                      >\n-                        <div\n-                          key={index}\n-                          style={{\n-                            ...styles.box,\n-\n-                            // justifyContent:\n-                            // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n-                          }}\n-                        >\n-                          {product.images.length > 0 ? (\n-                            <img\n-                              src={product.images[0]} // Display first image only\n-                              alt={product.name}\n-                              style={{\n-                                width: \"250px\",\n-                                height: \"250px\",\n-                                objectFit: \"cover\",\n-                                borderRadius: \"10px\",\n-                                cursor:\"pointer\",\n-                              }}\n-                              onClick={() => {\n-                                setSelectedProduct(product);\n-\n-                                show();\n-                              }}\n-                            />\n-                          ) : (\n-                            <p>{t(\"No Image Available\")}</p>\n-                          )}\n-                        </div>\n-\n-                        {/* text */}\n-                        <div style={{ display: \"flex\" }}>\n-                          <div\n-                            className=\"text\"\n-                            style={{\n-                              borderRadius: \"10PX\",\n-                              width: \"100%\",\n-                              height: \"100px\",\n-                              //  background:\"red\",\n-                              padding: \"10px\",\n-                            }}\n-                          >\n-                            <Name className=\"name\">\n-                              <span\n-                                style={{ color: \"black\" }}\n-                                dangerouslySetInnerHTML={{\n-                                  __html: highlightText(\n-                                    product.name,\n-                                    searchTerm\n-                                  ),\n-                                }}\n-                              ></span>{\" \"}\n-                            </Name>\n-                            <DescriptionContainer>\n-                              <DescriptionTitle>\n-                                {t(\"Description\")}:\n-                                <DescriptionContent>\n-                                  {product.description}\n-                                </DescriptionContent>\n-                              </DescriptionTitle>\n-                            </DescriptionContainer>\n-                            <StatusContainer>\n-                              <StatusTitle>\n-                                {t(\"Status\")}:\n-                                <StatusContent>{product.status}</StatusContent>\n-                              </StatusTitle>\n-                            </StatusContainer>\n-                            <Price key={index}>\n-                              {t(\"CFA\")}: {product.price - product.discount}\n-                            </Price>\n-                            {product.discount > 0 && (\n-                              <Discount key={index}>\n-                                {t(\"CFA\")}:<s>{product.price}</s>\n-                                <label\n-                                  style={{\n-                                    width: \"40px\",\n-                                    height: \"20px\",\n-                                    background: \"#90EE90\",\n-                                    textAlign: \"center\",\n-                                    borderRadius: \"5px\",\n-                                    marginLeft: \"15px\",\n-                                  }}\n-                                >\n-                                  -\n-                                  {(\n-                                    (product.discount / product.price) *\n-                                    100\n-                                  ).toFixed(0)}\n-                                  %\n-                                </label>\n-                              </Discount>\n-                            )}\n-                          </div>\n-\n-                          {/* like and wishlist */}\n-                          <div style={{ background: \"\" }}>\n-                            <div>\n-                              {/* Product Display */}\n-\n-                              {selectedProduct === product && (\n-                                <div>\n-                                  <button\n-                                    onClick={() => toggleLike(selectedProduct)}\n-                                    styles={{\n-                                      border: \"0px\",\n-                                      background: \"red\",\n-                                    }}\n-                                  >\n-                                    {selectedProduct.likedBy.some(\n-                                      (user) => user.userId === userId\n-                                    )\n-                                      ? \"❤️\"\n-                                      : \"🤍\"}\n-                                    {product.likes}\n-                                  </button>\n-                                </div>\n-                              )}\n-                            </div>\n-                            <div>\n-                              <button\n-                                style={{\n-                                  background: \"transparent\",\n-                                  border: \"0px solid orange\",\n-                                  color: \"orange\",\n-                                  padding: \"0px 0px\",\n-                                  background: \"none\",\n-                                  borderRadius: \"10px 10px 10px 10px \",\n-                                  cursor: \"pointer\",\n-                                  fontSize: \"40px\",\n-                                  transition: \"all 0.3s ease\",\n-                                  marginRight: \"auto\",\n-                                  width: \"35px\",\n-                                }}\n-                                onClick={() =>\n-                                  dispatch(addToCartBeforeLogin(product))\n-                                }\n-                              >\n-                                +\n-                              </button>\n-                            </div>\n-                          </div>\n-                        </div>\n-\n-                        <div\n-                          style={{\n-                            background: \"\",\n-                            textAlign: \"center\",\n-                            padding: \"5px\",\n-                          }}\n-                        >\n-                          <AddtocartButton\n-                            main={product.discount > 0}\n-                            onClick={() => dispatch(addToCartAPI(product))}\n-                          >\n-                            {t(\"Add To Cart\")}\n-                          </AddtocartButton>\n-                        </div>\n-                      </BoxContainer>\n-                    )}\n-                  </div>\n-                ))\n-              ) : (\n-                <p>{t(\"Loading...\")}</p>\n-              )}\n-\n-              {selectedProduct && showDetails && selectedProduct && <></>}\n-            </div>\n-          }\n-\n-          {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n-        </React.Fragment>\n-   )}\n+ \n    </>\n   );\n }\n \n"
                },
                {
                    "date": 1742735754067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -441,9 +441,291 @@\n                }\n      \n                {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n              </React.Fragment>\n- \n+   ):(\n+    <React.Fragment>\n+          {\n+            <div className=\"animated-box\" style={styles.container}>\n+              {filteredProducts.length > 0 ? (\n+                filteredProducts.map((product, index) => (\n+                  <div>\n+                    {selectedProduct === product && (\n+                      <div\n+                        style={{\n+                          padding: \"20px\",\n+                          margin: \"0 auto\",\n+                          marginTop: \"0px\",\n+                          Width: \"40%\",\n+                          maxHeight: \"100vh\",\n+                          border: \"1px solid green\",\n+                          borderRadius: \"20px\",\n+                          // background:'red',\n+                          boxShadow: \"10px 0px 50px 0px pink\",\n+                        }}\n+                      >\n+                        <div style={{ display: \"flex\" }}>\n+                          <div style={{ background: \"\", width: \"400px\" }}>\n+                            {selectedProduct.images &&\n+                            selectedProduct.images.length > 0 ? (\n+                              <Slider {...style.sliderSettings}>\n+                                {selectedProduct.images.map((imgUrl, index) => (\n+                                  <div key={index}>\n+                                    <img\n+                                      src={imgUrl}\n+                                      alt={`${selectedProduct.title} - Image ${\n+                                        index + 1\n+                                      }`}\n+                                      style={{\n+                                        width: \"400px\",\n+                                        height: \"450px\",\n+                                        borderRadius: \"8px\",\n+                                      }}\n+                                    />\n+                                  </div>\n+                                ))}\n+                              </Slider>\n+                            ) : (\n+                              <p>No images available</p>\n+                            )}\n+                          </div>\n+                          <div>{SelectedProduct}</div>\n+                          <div\n+                            style={{\n+                              background: \"#4ECDC4\",\n+                              width: \"500px\",\n+                              marginLeft: \"30px\",\n+                            }}\n+                          >\n+                            <div style={{ padding: \"20px\", margin: \"0 auto\" }}>\n+                              <CloseButton\n+                                style={{\n+                                  position: \"relative\",\n+                                  left: \"420px\",\n+                                  top: \"-40px\",\n+                                  background: \"none\",\n+                                  borderRadius: \"0px 14px 10px 10px\",\n+                                  width: \"80px\",\n+                                  border: \"1px solid red\",\n+                                  cursor: \"pointer\",\n+                                  fontWeight: \"bold\",\n+                                  fontSize: \"30px\",\n+                                  color: \"red\",\n+                                }}\n+                                onClick={() => hanldleProductHid()}\n+                              >\n+                                {t(\"close\")}\n+                              </CloseButton>\n+                              <h1>{selectedProduct.name}</h1>\n+                              <p>{selectedProduct.description}</p>\n+                              <p>\n+                                <strong>Price:</strong> {selectedProduct.price}\n+                              </p>\n+                            </div>\n+                            <div style={style.buttonsContainer}>\n+                              <div>\n+                                <button\n+                                  style={style.buttons}\n+                                  onClick={() =>\n+                                    dispatch(\n+                                      addToCartBeforeLogin(selectedProduct)\n+                                    )\n+                                  }\n+                                >\n+                                  Add To Cart\n+                                </button>\n+                              </div>\n+                              <div>\n+                                <button\n+                                  style={{ ...style.buttons }}\n+                                  onClick={() => dispatch(selectedProduct)}\n+                                >\n+                                  [add To WishList]\n+                                </button>\n+                              </div>\n+                            </div>\n+                          </div>\n+                        </div>\n+                      </div>\n+                    )}\n+                    {product !== selectedProduct && (\n+                      <BoxContainer\n+                        key={index}\n+                        categoryOption={categoryShadow[product.category]}\n+                      >\n+                        <div\n+                          key={index}\n+                          style={{\n+                            ...styles.box,\n+\n+                            // justifyContent:\n+                            // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n+                          }}\n+                        >\n+                          {product.images.length > 0 ? (\n+                            <img\n+                              src={product.images[0]} // Display first image only\n+                              alt={product.name}\n+                              style={{\n+                                width: \"250px\",\n+                                height: \"250px\",\n+                                objectFit: \"cover\",\n+                                borderRadius: \"10px\",\n+                                cursor:\"pointer\",\n+                              }}\n+                              onClick={() => {\n+                                setSelectedProduct(product);\n+\n+                                show();\n+                              }}\n+                            />\n+                          ) : (\n+                            <p>{t(\"No Image Available\")}</p>\n+                          )}\n+                        </div>\n+\n+                        {/* text */}\n+                        <div style={{ display: \"flex\" }}>\n+                          <div\n+                            className=\"text\"\n+                            style={{\n+                              borderRadius: \"10PX\",\n+                              width: \"100%\",\n+                              height: \"100px\",\n+                              //  background:\"red\",\n+                              padding: \"10px\",\n+                            }}\n+                          >\n+                            <Name className=\"name\">\n+                              <span\n+                                style={{ color: \"black\" }}\n+                                dangerouslySetInnerHTML={{\n+                                  __html: highlightText(\n+                                    product.name,\n+                                    searchTerm\n+                                  ),\n+                                }}\n+                              ></span>{\" \"}\n+                            </Name>\n+                            <DescriptionContainer>\n+                              <DescriptionTitle>\n+                                {t(\"Description\")}:\n+                                <DescriptionContent>\n+                                  {product.description}\n+                                </DescriptionContent>\n+                              </DescriptionTitle>\n+                            </DescriptionContainer>\n+                            <StatusContainer>\n+                              <StatusTitle>\n+                                {t(\"Status\")}:\n+                                <StatusContent>{product.status}</StatusContent>\n+                              </StatusTitle>\n+                            </StatusContainer>\n+                            <Price key={index}>\n+                              {t(\"CFA\")}: {product.price - product.discount}\n+                            </Price>\n+                            {product.discount > 0 && (\n+                              <Discount key={index}>\n+                                {t(\"CFA\")}:<s>{product.price}</s>\n+                                <label\n+                                  style={{\n+                                    width: \"40px\",\n+                                    height: \"20px\",\n+                                    background: \"#90EE90\",\n+                                    textAlign: \"center\",\n+                                    borderRadius: \"5px\",\n+                                    marginLeft: \"15px\",\n+                                  }}\n+                                >\n+                                  -\n+                                  {(\n+                                    (product.discount / product.price) *\n+                                    100\n+                                  ).toFixed(0)}\n+                                  %\n+                                </label>\n+                              </Discount>\n+                            )}\n+                          </div>\n+\n+                          {/* like and wishlist */}\n+                          <div style={{ background: \"\" }}>\n+                            <div>\n+                              {/* Product Display */}\n+\n+                              {selectedProduct === product && (\n+                                <div>\n+                                  <button\n+                                    onClick={() => toggleLike(selectedProduct)}\n+                                    styles={{\n+                                      border: \"0px\",\n+                                      background: \"red\",\n+                                    }}\n+                                  >\n+                                    {selectedProduct.likedBy.some(\n+                                      (user) => user.userId === userId\n+                                    )\n+                                      ? \"❤️\"\n+                                      : \"🤍\"}\n+                                    {product.likes}\n+                                  </button>\n+                                </div>\n+                              )}\n+                            </div>\n+                            <div>\n+                              <button\n+                                style={{\n+                                  background: \"transparent\",\n+                                  border: \"0px solid orange\",\n+                                  color: \"orange\",\n+                                  padding: \"0px 0px\",\n+                                  background: \"none\",\n+                                  borderRadius: \"10px 10px 10px 10px \",\n+                                  cursor: \"pointer\",\n+                                  fontSize: \"40px\",\n+                                  transition: \"all 0.3s ease\",\n+                                  marginRight: \"auto\",\n+                                  width: \"35px\",\n+                                }}\n+                                onClick={() =>\n+                                  dispatch(addToCartBeforeLogin(product))\n+                                }\n+                              >\n+                                +\n+                              </button>\n+                            </div>\n+                          </div>\n+                        </div>\n+\n+                        <div\n+                          style={{\n+                            background: \"\",\n+                            textAlign: \"center\",\n+                            padding: \"5px\",\n+                          }}\n+                        >\n+                          <AddtocartButton\n+                            main={product.discount > 0}\n+                            onClick={() => dispatch(addToCartAPI(product))}\n+                          >\n+                            {t(\"Add To Cart\")}\n+                          </AddtocartButton>\n+                        </div>\n+                      </BoxContainer>\n+                    )}\n+                  </div>\n+                ))\n+              ) : (\n+                <p>{t(\"Loading...\")}</p>\n+              )}\n+\n+              {selectedProduct && showDetails && selectedProduct && <></>}\n+            </div>\n+          }\n+\n+          {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n+        </React.Fragment>\n+   )}\n    </>\n   );\n }\n \n"
                },
                {
                    "date": 1742735769094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -442,289 +442,9 @@\n      \n                {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n              </React.Fragment>\n    ):(\n-    <React.Fragment>\n-          {\n-            <div className=\"animated-box\" style={styles.container}>\n-              {filteredProducts.length > 0 ? (\n-                filteredProducts.map((product, index) => (\n-                  <div>\n-                    {selectedProduct === product && (\n-                      <div\n-                        style={{\n-                          padding: \"20px\",\n-                          margin: \"0 auto\",\n-                          marginTop: \"0px\",\n-                          Width: \"40%\",\n-                          maxHeight: \"100vh\",\n-                          border: \"1px solid green\",\n-                          borderRadius: \"20px\",\n-                          // background:'red',\n-                          boxShadow: \"10px 0px 50px 0px pink\",\n-                        }}\n-                      >\n-                        <div style={{ display: \"flex\" }}>\n-                          <div style={{ background: \"\", width: \"400px\" }}>\n-                            {selectedProduct.images &&\n-                            selectedProduct.images.length > 0 ? (\n-                              <Slider {...style.sliderSettings}>\n-                                {selectedProduct.images.map((imgUrl, index) => (\n-                                  <div key={index}>\n-                                    <img\n-                                      src={imgUrl}\n-                                      alt={`${selectedProduct.title} - Image ${\n-                                        index + 1\n-                                      }`}\n-                                      style={{\n-                                        width: \"400px\",\n-                                        height: \"450px\",\n-                                        borderRadius: \"8px\",\n-                                      }}\n-                                    />\n-                                  </div>\n-                                ))}\n-                              </Slider>\n-                            ) : (\n-                              <p>No images available</p>\n-                            )}\n-                          </div>\n-                          <div>{SelectedProduct}</div>\n-                          <div\n-                            style={{\n-                              background: \"#4ECDC4\",\n-                              width: \"500px\",\n-                              marginLeft: \"30px\",\n-                            }}\n-                          >\n-                            <div style={{ padding: \"20px\", margin: \"0 auto\" }}>\n-                              <CloseButton\n-                                style={{\n-                                  position: \"relative\",\n-                                  left: \"420px\",\n-                                  top: \"-40px\",\n-                                  background: \"none\",\n-                                  borderRadius: \"0px 14px 10px 10px\",\n-                                  width: \"80px\",\n-                                  border: \"1px solid red\",\n-                                  cursor: \"pointer\",\n-                                  fontWeight: \"bold\",\n-                                  fontSize: \"30px\",\n-                                  color: \"red\",\n-                                }}\n-                                onClick={() => hanldleProductHid()}\n-                              >\n-                                {t(\"close\")}\n-                              </CloseButton>\n-                              <h1>{selectedProduct.name}</h1>\n-                              <p>{selectedProduct.description}</p>\n-                              <p>\n-                                <strong>Price:</strong> {selectedProduct.price}\n-                              </p>\n-                            </div>\n-                            <div style={style.buttonsContainer}>\n-                              <div>\n-                                <button\n-                                  style={style.buttons}\n-                                  onClick={() =>\n-                                    dispatch(\n-                                      addToCartBeforeLogin(selectedProduct)\n-                                    )\n-                                  }\n-                                >\n-                                  Add To Cart\n-                                </button>\n-                              </div>\n-                              <div>\n-                                <button\n-                                  style={{ ...style.buttons }}\n-                                  onClick={() => dispatch(selectedProduct)}\n-                                >\n-                                  [add To WishList]\n-                                </button>\n-                              </div>\n-                            </div>\n-                          </div>\n-                        </div>\n-                      </div>\n-                    )}\n-                    {product !== selectedProduct && (\n-                      <BoxContainer\n-                        key={index}\n-                        categoryOption={categoryShadow[product.category]}\n-                      >\n-                        <div\n-                          key={index}\n-                          style={{\n-                            ...styles.box,\n-\n-                            // justifyContent:\n-                            // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n-                          }}\n-                        >\n-                          {product.images.length > 0 ? (\n-                            <img\n-                              src={product.images[0]} // Display first image only\n-                              alt={product.name}\n-                              style={{\n-                                width: \"250px\",\n-                                height: \"250px\",\n-                                objectFit: \"cover\",\n-                                borderRadius: \"10px\",\n-                                cursor:\"pointer\",\n-                              }}\n-                              onClick={() => {\n-                                setSelectedProduct(product);\n-\n-                                show();\n-                              }}\n-                            />\n-                          ) : (\n-                            <p>{t(\"No Image Available\")}</p>\n-                          )}\n-                        </div>\n-\n-                        {/* text */}\n-                        <div style={{ display: \"flex\" }}>\n-                          <div\n-                            className=\"text\"\n-                            style={{\n-                              borderRadius: \"10PX\",\n-                              width: \"100%\",\n-                              height: \"100px\",\n-                              //  background:\"red\",\n-                              padding: \"10px\",\n-                            }}\n-                          >\n-                            <Name className=\"name\">\n-                              <span\n-                                style={{ color: \"black\" }}\n-                                dangerouslySetInnerHTML={{\n-                                  __html: highlightText(\n-                                    product.name,\n-                                    searchTerm\n-                                  ),\n-                                }}\n-                              ></span>{\" \"}\n-                            </Name>\n-                            <DescriptionContainer>\n-                              <DescriptionTitle>\n-                                {t(\"Description\")}:\n-                                <DescriptionContent>\n-                                  {product.description}\n-                                </DescriptionContent>\n-                              </DescriptionTitle>\n-                            </DescriptionContainer>\n-                            <StatusContainer>\n-                              <StatusTitle>\n-                                {t(\"Status\")}:\n-                                <StatusContent>{product.status}</StatusContent>\n-                              </StatusTitle>\n-                            </StatusContainer>\n-                            <Price key={index}>\n-                              {t(\"CFA\")}: {product.price - product.discount}\n-                            </Price>\n-                            {product.discount > 0 && (\n-                              <Discount key={index}>\n-                                {t(\"CFA\")}:<s>{product.price}</s>\n-                                <label\n-                                  style={{\n-                                    width: \"40px\",\n-                                    height: \"20px\",\n-                                    background: \"#90EE90\",\n-                                    textAlign: \"center\",\n-                                    borderRadius: \"5px\",\n-                                    marginLeft: \"15px\",\n-                                  }}\n-                                >\n-                                  -\n-                                  {(\n-                                    (product.discount / product.price) *\n-                                    100\n-                                  ).toFixed(0)}\n-                                  %\n-                                </label>\n-                              </Discount>\n-                            )}\n-                          </div>\n-\n-                          {/* like and wishlist */}\n-                          <div style={{ background: \"\" }}>\n-                            <div>\n-                              {/* Product Display */}\n-\n-                              {selectedProduct === product && (\n-                                <div>\n-                                  <button\n-                                    onClick={() => toggleLike(selectedProduct)}\n-                                    styles={{\n-                                      border: \"0px\",\n-                                      background: \"red\",\n-                                    }}\n-                                  >\n-                                    {selectedProduct.likedBy.some(\n-                                      (user) => user.userId === userId\n-                                    )\n-                                      ? \"❤️\"\n-                                      : \"🤍\"}\n-                                    {product.likes}\n-                                  </button>\n-                                </div>\n-                              )}\n-                            </div>\n-                            <div>\n-                              <button\n-                                style={{\n-                                  background: \"transparent\",\n-                                  border: \"0px solid orange\",\n-                                  color: \"orange\",\n-                                  padding: \"0px 0px\",\n-                                  background: \"none\",\n-                                  borderRadius: \"10px 10px 10px 10px \",\n-                                  cursor: \"pointer\",\n-                                  fontSize: \"40px\",\n-                                  transition: \"all 0.3s ease\",\n-                                  marginRight: \"auto\",\n-                                  width: \"35px\",\n-                                }}\n-                                onClick={() =>\n-                                  dispatch(addToCartBeforeLogin(product))\n-                                }\n-                              >\n-                                +\n-                              </button>\n-                            </div>\n-                          </div>\n-                        </div>\n-\n-                        <div\n-                          style={{\n-                            background: \"\",\n-                            textAlign: \"center\",\n-                            padding: \"5px\",\n-                          }}\n-                        >\n-                          <AddtocartButton\n-                            main={product.discount > 0}\n-                            onClick={() => dispatch(addToCartAPI(product))}\n-                          >\n-                            {t(\"Add To Cart\")}\n-                          </AddtocartButton>\n-                        </div>\n-                      </BoxContainer>\n-                    )}\n-                  </div>\n-                ))\n-              ) : (\n-                <p>{t(\"Loading...\")}</p>\n-              )}\n-\n-              {selectedProduct && showDetails && selectedProduct && <></>}\n-            </div>\n-          }\n-\n-          {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n-        </React.Fragment>\n+   \n    )}\n    </>\n   );\n }\n"
                },
                {
                    "date": 1742735798652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -294,9 +294,9 @@\n \n  \n   return (\n    <>\n-   {isMobile ? (\n+   \n       <React.Fragment >\n                {\n                  <div  style={mstyles.Mcontainer}>\n                    { filteredProducts.length > 0 ? (\n@@ -441,11 +441,9 @@\n                }\n      \n                {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n              </React.Fragment>\n-   ):(\n    \n-   )}\n    </>\n   );\n }\n \n"
                },
                {
                    "date": 1742735927611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -469,5 +469,5 @@\n     before: \"+\",\n   },\n };\n \n-export default Category;\n+export default ategory;\n"
                },
                {
                    "date": 1742735936266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -469,5 +469,5 @@\n     before: \"+\",\n   },\n };\n \n-export default ategory;\n+export default Mobilecategory;\n"
                },
                {
                    "date": 1742735949768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -469,5 +469,5 @@\n     before: \"+\",\n   },\n };\n \n-export default Mobilecategory;\n+export default Mobileategory;\n"
                },
                {
                    "date": 1742735964600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n   font-size: 13px;\n `;\n \n \n-function Category({\n+function Mobileategory({\n   api,\n   addToCart,\n   searchTerm,\n   highlightText,\n@@ -469,5 +469,5 @@\n     before: \"+\",\n   },\n };\n \n-export default Mobileategory;\n+export default MobilCategory;\n"
                },
                {
                    "date": 1742736306017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n   font-size: 13px;\n `;\n \n \n-function Mobileategory({\n+function MobileCategory({\n   api,\n   addToCart,\n   searchTerm,\n   highlightText,\n@@ -469,5 +469,5 @@\n     before: \"+\",\n   },\n };\n \n-export default MobilCategory;\n+export default MobileCategory;\n"
                }
            ],
            "date": 1742735661193,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToCartBeforeLogin, addToCartAPI } from \"../../cartAction\";\nimport { useTranslation } from \"react-i18next\";\nimport Slider from \"react-slick\";\nimport styled, { keyframes } from \"styled-components\";\n\n\n\nconst categoryOptions = {\n  1: \"0px 0px 10px 1px red\",\n  2: \"0px 0px 10px 1px yellow\",\n  3: \"0px 0px 10px 1px orange\",\n  4: \"0px 0px 10px 1px blue\",\n  5: \"0px 0px 10px 1px black\",\n  6: \"0px 0px 10px 1px violet\",\n};\nconst categoryShadow = {\n  farm: 1,\n  computer: 2,\n  Clothing: 3,\n  accesseries: 4,\n  other: 5,\n};\nconst CloseButton = styled.button`\n&:hover{\ntransform: scale(1.1);\n`;\n\nconst BoxContainer = styled.div`\n  border: px solid red;\n  border-radius: 12px;\n  box-shadow: ${(props) => categoryOptions[props.categoryOption]};\n\n&:hover{\n  transform: scale(1.1);\n  \n  \n  }\n`;\nconst AddtocartButton = styled.button`\nbackground:none;\nborder: 1px solid RED;\ncolor: red;\npadding: 10px 20px;\nborder-radius: 15px;\ncursor: pointer;\nfont-size: 100%,\ntransition: all 0.3s ease;\nwidth: 90%;\nmargin-top:${(props) => (props.main ? \"40px\" : \"10px\")};\n\n\n&:hover{\ntransform: scale(1.1);\nborder:1px solid green;\ncolor:green;\n\n}\n`;\nconst MAddtocartButton = styled.button`\nbackground:none;\nborder: 1px solid RED;\ncolor: red;\npadding: 10px 20px;\nborder-radius: 15px;\ncursor: pointer;\nfont-size: 100%,\ntransition: all 0.3s ease;\nwidth:auto;\nmargin-top:${(props) => (props.main ? \"5px\" : \"-60px\")};\n\n\n&:hover{\ntransform: scale(1.1);\nborder:1px solid green;\ncolor:green;\n\n}\n`;\nconst Name = styled.a`\n  font-size: ${({ fontSize }) => fontSize || \"20px\"};\n`;\nconst DescriptionContainer = styled.label`\n  font-size: 10px;\n`;\n\nconst DescriptionTitle = styled.h6`\n  font-size: 13px;\n`;\nconst DescriptionContent = styled.a`\n  font-size: 13px;\n`;\nconst Price = styled.h4`\n  font-size: 16px;\n`;\nconst Discount = styled.h3`\n  font-size: 13px;\n`;\nconst StatusContainer = styled.label`\n  font-size: 13px;\n`;\nconst StatusTitle = styled.h6`\n  font-size: 13px;\n`;\nconst StatusContent = styled.a`\n  font-size: 13px;\n`;\n\n\nfunction Category({\n  api,\n  addToCart,\n  searchTerm,\n  highlightText,\n  addToWishList,\n  SelectedProduct,\n  selectedCategory,\n  mobilefilteredProducts,\n  filteredProducts\n}) {\n  \n  const [currentIndex, setCurrentIndex] = useState(0);\n   const [products, setProducts] = useState(null);\n   const [isMobile, setIsMobile] = useState(false);\n   const [selectedProduct, setSelectedProduct] = useState(null);\n   const [selectedDProduct, setDSelectedProduct] = useState(null);\n   const [selected, setSelected] = useState(false);\n   const userId = localStorage.getItem(\"userId\");\n   const [showDetails, setShowDetails] = useState(true);\n   const username = localStorage.getItem(\"username\");\n   const previewRef = useRef(null);\n   const buttonRef = useRef(null);\n \n   const { t } = useTranslation();\n   const dispatch = useDispatch(); // Function to check screen size\n \n   // Function to check screen size\n   const handleResize = () => {\n     setIsMobile(window.innerWidth <= 1000);\n   };\n \n   useEffect(() => {\n     handleResize(); // Initial check\n     window.addEventListener(\"resize\", handleResize); // Update on resize\n     return () => window.removeEventListener(\"resize\", handleResize);\n   }, []);\n \n   const navigate = useNavigate();\n \n   const handleProductClick = (product) => {\n     SelectedProduct(product);\n     localStorage.setItem(\"selectedProduct\", product);\n     navigate(\"/selectedProduct\");\n   };\n \n   const hanldleProductHid = () => {\n     setSelectedProduct(null);\n   };\n \n   // Toggle the selection state of a product\n   const toggleSelection = (id, currentSelection) => {\n     // Update the product on the server using PATCH\n     fetch(`${api}/updateProducts/${id}`, {\n       method: \"PATCH\",\n       headers: {\n         \"Content-Type\": \"application/json\",\n       },\n       body: JSON.stringify({ isSelected: !currentSelection }),\n     })\n       .then((response) => response.json())\n       .then((updatedProduct) => {\n         // Update the local state to reflect the change\n         setProducts((prevProducts) =>\n           prevProducts.map((product) =>\n             product.id === id ? updatedProduct : product\n           )\n         );\n       })\n       .catch((error) => console.error(\"Error updating product:\", error));\n   };\n \n   // Fetch all products\n   useEffect(() => {\n     const fetchProducts = async () => {\n       const response = await fetch(`${api}/products`);\n       const data = await response.json();\n       setProducts(data);\n     };\n     fetchProducts();\n   }, [api]);\n \n   // Toggle like/dislike with one button\n   const toggleLike = async (product) => {\n     if (!product) return;\n \n     const liked = product.likedBy.some((user) => user.userId === userId);\n     const endpoint = liked ? \"dislike\" : \"like\";\n \n     const response = await fetch(`${api}/products/${product.id}/${endpoint}`, {\n       method: \"PATCH\",\n       headers: { \"Content-Type\": \"application/json\" },\n       body: JSON.stringify({ userId, username }), // Send user info\n     });\n \n     const updatedProduct = await response.json();\n \n     // Update state\n     setProducts(\n       products.map((p) =>\n         p.id === product.id ? { ...p, ...updatedProduct } : p\n       )\n     );\n     setSelectedProduct({ ...product, ...updatedProduct });\n   };\n   // ////////////////////////////////////////////////////////\n \n   const handleMouseEnter = () => {\n     if (buttonRef.current) {\n       buttonRef.current.click();\n     }\n   };\n \n   // ///////////////////////////////////////////////////////////\n \n   const show = (event) => {\n     setShowDetails((prevShow) => !prevShow);\n     if (previewRef.current && !previewRef.current.contains(event.target)) {\n     }\n   };\n \n   // useEffect(() => {\n   //   // Attach event listener to the whole document\n   //   document.addEventListener(\"mousedown\", show);\n   //   return () => {\n   //     document.removeEventListener(\"mousedown\", show);\n   //   };\n   // }, []);\n\n  const styles = {\n    container: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"20px\",\n      background: \"white\",\n      maxWidth: \"96%\", // Prevents full width spread\n      margin: \"auto\", // Centers the whole container\n      padding: \"20px\",\n      marginTop: \"90px\",\n    },\n    box: {\n      width: \"250px\",\n      height: \"250px\",\n     \n    },\n\n    lastBox: {\n      background: \"blue\",\n      \n      // Pushes last box to the left\n    },\n  };\n\n  const mstyles = {\n    Mcontainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"10px\",\n      background: \"white\",\n      maxWidth: \"100%\", // Prevents full width spread\n      margin: \"auto\", // Centers the whole container\n      padding: \"0px\",\n      marginTop: \"200px\",\n    },\n    mbox: {\n      width: \"100px\",\n      height: \"150px\",\n    },\n\n    mlastBox: {\n      background: \"blue\",\n\n      // Pushes last box to the left\n    },\n  };\n\n\n \n  return (\n   <>\n   {isMobile ? (\n      <React.Fragment >\n               {\n                 <div  style={mstyles.Mcontainer}>\n                   { filteredProducts.length > 0 ? (\n                      filteredProducts.map((product, index) => (\n                       <div>\n                         <BoxContainer\n                         className=\"animated-box\"\n                           key={index}\n                           categoryOption={categoryShadow[product.category]}\n                         >\n                           <div\n                             key={index}\n                             style={{\n                               ...mstyles.mbox,\n     \n                               // justifyContent:\n                               // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n                             }}\n                           >\n                             {product.images.length > 0 ? (\n                               <img\n                                 src={product.images[0]} // Display first image only\n                                 alt={product.name}\n                                 style={{\n                                   width: \"135px\",\n                                   height: \"150px\",\n                                   objectFit: \"cover\",\n                                   borderRadius: \"10px\",\n                                   cursor:\"pointer\"\n                                 }}\n                                 onClick={() => {\n                                  setSelectedProduct(product);\n                                  handleProductClick(product);\n                                  show();\n                                 }}\n                               />\n                             ) : (\n                               <p>{t(\"No Image Available\")}</p>\n                             )}\n                             <button\n                               style={{\n                                 position: \"relative\",\n                                 left: \"105px\",\n                                 top: \"-15px\",\n                                 background: \"none\",\n                                 border: \"none\",\n                                 fontSize: \"35px\",\n                                 color: \"orange\",\n                               }}\n                             >\n                               +\n                             </button>\n                           </div>\n     \n                           {/* text */}\n                           <div style={{ display: \"flex\" }}>\n                             <div\n                               className=\"text\"\n                               style={{\n                                 borderRadius: \"10PX\",\n                                 width: \"100%\",\n                                 height: \"100px\",\n                                 // background:\"red\",\n                                 padding: \"10px\",\n                               }}\n                             >\n                               <Name className=\"name\" fontSize=\"17px\">\n                                 <span\n                                   style={{ color: \"black\" }}\n                                   dangerouslySetInnerHTML={{\n                                     __html: highlightText(product.name, searchTerm),\n                                   }}\n                                 ></span>{\" \"}\n                               </Name>\n     \n                               {/* <DescriptionContainer>\n                              <DescriptionTitle>\n                                {t(\"Description\")}:\n                                <DescriptionContent>\n                                  {product.description}\n                                </DescriptionContent>\n                              </DescriptionTitle>\n                            </DescriptionContainer> */}\n                               <StatusContainer>\n                                 <StatusTitle>\n                                   {t(\"Status\")}:\n                                   <StatusContent>{product.status}</StatusContent>\n                                 </StatusTitle>\n                               </StatusContainer>\n                               <Price key={index}>\n                                 {t(\"CFA\")}: {product.price - product.discount}\n                               </Price>\n                               {product.discount > 0 && (\n                                 <Discount key={index}>\n                                   {t(\"CFA\")}:<s>{product.price}</s>\n                                   <label\n                                     style={{\n                                       width: \"40px\",\n                                       height: \"20px\",\n                                       background: \"#90EE90\",\n                                       textAlign: \"center\",\n                                       borderRadius: \"5px\",\n                                       marginLeft: \"15px\",\n                                     }}\n                                   >\n                                     -\n                                     {(\n                                       (product.discount / product.price) *\n                                       100\n                                     ).toFixed(0)}\n                                     %\n                                   </label>\n                                 </Discount>\n                               )}\n                             </div>\n                           </div>\n     \n                           <div\n                             style={{\n                               background: \"\",\n                               textAlign: \"center\",\n                               padding: \"5px\",\n                             }}\n                           >\n                             <MAddtocartButton\n                               main={product.discount > 0}\n                               width=\"auto\"\n                               onClick={() => dispatch(addToCartAPI(product))}\n                             >\n                               {t(\"Add To Cart\")}\n                             </MAddtocartButton>\n                           </div>\n                         </BoxContainer>\n                       </div>\n                     ))\n                   ) : (\n                     <p>{t(\"Loading...\")}</p>\n                   )}\n     \n                   \n                 </div>\n               }\n     \n               {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n             </React.Fragment>\n   ):(\n    <React.Fragment>\n          {\n            <div className=\"animated-box\" style={styles.container}>\n              {filteredProducts.length > 0 ? (\n                filteredProducts.map((product, index) => (\n                  <div>\n                    {selectedProduct === product && (\n                      <div\n                        style={{\n                          padding: \"20px\",\n                          margin: \"0 auto\",\n                          marginTop: \"0px\",\n                          Width: \"40%\",\n                          maxHeight: \"100vh\",\n                          border: \"1px solid green\",\n                          borderRadius: \"20px\",\n                          // background:'red',\n                          boxShadow: \"10px 0px 50px 0px pink\",\n                        }}\n                      >\n                        <div style={{ display: \"flex\" }}>\n                          <div style={{ background: \"\", width: \"400px\" }}>\n                            {selectedProduct.images &&\n                            selectedProduct.images.length > 0 ? (\n                              <Slider {...style.sliderSettings}>\n                                {selectedProduct.images.map((imgUrl, index) => (\n                                  <div key={index}>\n                                    <img\n                                      src={imgUrl}\n                                      alt={`${selectedProduct.title} - Image ${\n                                        index + 1\n                                      }`}\n                                      style={{\n                                        width: \"400px\",\n                                        height: \"450px\",\n                                        borderRadius: \"8px\",\n                                      }}\n                                    />\n                                  </div>\n                                ))}\n                              </Slider>\n                            ) : (\n                              <p>No images available</p>\n                            )}\n                          </div>\n                          <div>{SelectedProduct}</div>\n                          <div\n                            style={{\n                              background: \"#4ECDC4\",\n                              width: \"500px\",\n                              marginLeft: \"30px\",\n                            }}\n                          >\n                            <div style={{ padding: \"20px\", margin: \"0 auto\" }}>\n                              <CloseButton\n                                style={{\n                                  position: \"relative\",\n                                  left: \"420px\",\n                                  top: \"-40px\",\n                                  background: \"none\",\n                                  borderRadius: \"0px 14px 10px 10px\",\n                                  width: \"80px\",\n                                  border: \"1px solid red\",\n                                  cursor: \"pointer\",\n                                  fontWeight: \"bold\",\n                                  fontSize: \"30px\",\n                                  color: \"red\",\n                                }}\n                                onClick={() => hanldleProductHid()}\n                              >\n                                {t(\"close\")}\n                              </CloseButton>\n                              <h1>{selectedProduct.name}</h1>\n                              <p>{selectedProduct.description}</p>\n                              <p>\n                                <strong>Price:</strong> {selectedProduct.price}\n                              </p>\n                            </div>\n                            <div style={style.buttonsContainer}>\n                              <div>\n                                <button\n                                  style={style.buttons}\n                                  onClick={() =>\n                                    dispatch(\n                                      addToCartBeforeLogin(selectedProduct)\n                                    )\n                                  }\n                                >\n                                  Add To Cart\n                                </button>\n                              </div>\n                              <div>\n                                <button\n                                  style={{ ...style.buttons }}\n                                  onClick={() => dispatch(selectedProduct)}\n                                >\n                                  [add To WishList]\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                    {product !== selectedProduct && (\n                      <BoxContainer\n                        key={index}\n                        categoryOption={categoryShadow[product.category]}\n                      >\n                        <div\n                          key={index}\n                          style={{\n                            ...styles.box,\n\n                            // justifyContent:\n                            // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n                          }}\n                        >\n                          {product.images.length > 0 ? (\n                            <img\n                              src={product.images[0]} // Display first image only\n                              alt={product.name}\n                              style={{\n                                width: \"250px\",\n                                height: \"250px\",\n                                objectFit: \"cover\",\n                                borderRadius: \"10px\",\n                                cursor:\"pointer\",\n                              }}\n                              onClick={() => {\n                                setSelectedProduct(product);\n\n                                show();\n                              }}\n                            />\n                          ) : (\n                            <p>{t(\"No Image Available\")}</p>\n                          )}\n                        </div>\n\n                        {/* text */}\n                        <div style={{ display: \"flex\" }}>\n                          <div\n                            className=\"text\"\n                            style={{\n                              borderRadius: \"10PX\",\n                              width: \"100%\",\n                              height: \"100px\",\n                              //  background:\"red\",\n                              padding: \"10px\",\n                            }}\n                          >\n                            <Name className=\"name\">\n                              <span\n                                style={{ color: \"black\" }}\n                                dangerouslySetInnerHTML={{\n                                  __html: highlightText(\n                                    product.name,\n                                    searchTerm\n                                  ),\n                                }}\n                              ></span>{\" \"}\n                            </Name>\n                            <DescriptionContainer>\n                              <DescriptionTitle>\n                                {t(\"Description\")}:\n                                <DescriptionContent>\n                                  {product.description}\n                                </DescriptionContent>\n                              </DescriptionTitle>\n                            </DescriptionContainer>\n                            <StatusContainer>\n                              <StatusTitle>\n                                {t(\"Status\")}:\n                                <StatusContent>{product.status}</StatusContent>\n                              </StatusTitle>\n                            </StatusContainer>\n                            <Price key={index}>\n                              {t(\"CFA\")}: {product.price - product.discount}\n                            </Price>\n                            {product.discount > 0 && (\n                              <Discount key={index}>\n                                {t(\"CFA\")}:<s>{product.price}</s>\n                                <label\n                                  style={{\n                                    width: \"40px\",\n                                    height: \"20px\",\n                                    background: \"#90EE90\",\n                                    textAlign: \"center\",\n                                    borderRadius: \"5px\",\n                                    marginLeft: \"15px\",\n                                  }}\n                                >\n                                  -\n                                  {(\n                                    (product.discount / product.price) *\n                                    100\n                                  ).toFixed(0)}\n                                  %\n                                </label>\n                              </Discount>\n                            )}\n                          </div>\n\n                          {/* like and wishlist */}\n                          <div style={{ background: \"\" }}>\n                            <div>\n                              {/* Product Display */}\n\n                              {selectedProduct === product && (\n                                <div>\n                                  <button\n                                    onClick={() => toggleLike(selectedProduct)}\n                                    styles={{\n                                      border: \"0px\",\n                                      background: \"red\",\n                                    }}\n                                  >\n                                    {selectedProduct.likedBy.some(\n                                      (user) => user.userId === userId\n                                    )\n                                      ? \"❤️\"\n                                      : \"🤍\"}\n                                    {product.likes}\n                                  </button>\n                                </div>\n                              )}\n                            </div>\n                            <div>\n                              <button\n                                style={{\n                                  background: \"transparent\",\n                                  border: \"0px solid orange\",\n                                  color: \"orange\",\n                                  padding: \"0px 0px\",\n                                  background: \"none\",\n                                  borderRadius: \"10px 10px 10px 10px \",\n                                  cursor: \"pointer\",\n                                  fontSize: \"40px\",\n                                  transition: \"all 0.3s ease\",\n                                  marginRight: \"auto\",\n                                  width: \"35px\",\n                                }}\n                                onClick={() =>\n                                  dispatch(addToCartBeforeLogin(product))\n                                }\n                              >\n                                +\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div\n                          style={{\n                            background: \"\",\n                            textAlign: \"center\",\n                            padding: \"5px\",\n                          }}\n                        >\n                          <AddtocartButton\n                            main={product.discount > 0}\n                            onClick={() => dispatch(addToCartAPI(product))}\n                          >\n                            {t(\"Add To Cart\")}\n                          </AddtocartButton>\n                        </div>\n                      </BoxContainer>\n                    )}\n                  </div>\n                ))\n              ) : (\n                <p>{t(\"Loading...\")}</p>\n              )}\n\n              {selectedProduct && showDetails && selectedProduct && <></>}\n            </div>\n          }\n\n          {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n        </React.Fragment>\n   )}\n   </>\n  );\n}\n\nconst style = {\n  sliderSettings: {\n    dots: true, // Show navigation dots\n    infinite: true, // Enable infinite looping\n    speed: 100, // Transition speed (ms)\n    slidesToShow: 1, // Show one image at a time\n    slidesToScroll: 1, // Scroll one image per action\n    autoplay: true,\n    autoplaySpeed: 3000, // Autoplay speed (ms)\n  },\n  buttonsContainer: {\n    display: \"flex\",\n  },\n  buttons: {\n    color: \"orangered\",\n    background: \"none\",\n    border: \"2px solid orangered\",\n    margin: \"10px\",\n    borderRadius: \"10px\",\n    before: \"+\",\n  },\n};\n\nexport default Category;\n"
        }
    ]
}