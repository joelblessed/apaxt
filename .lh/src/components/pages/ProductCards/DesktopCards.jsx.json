{
    "sourceFile": "src/components/pages/ProductCards/DesktopCards.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1743729751411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743729757972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,9 @@\n-rafce\n\\ No newline at end of file\n+import React from 'react'\n+\n+const DesktopCards = () => {\n+  return (\n+    \n+  )\n+}\n+\n+export default DesktopCards\n"
                },
                {
                    "date": 1743729802142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,205 @@\n import React from 'react'\n \n const DesktopCards = () => {\n   return (\n-    \n+    <React.Fragment>\n+          {\n+            <div className=\"animated-box\" style={styles.container}>\n+              {Dobject.length > 0 ? (\n+                Dobject.map((product, index) => (\n+                  <div>\n+                    {/* selected Product */}\n+                    {selectedProduct === product && (\n+                      <div>\n+                        <SelectedProductDesktop\n+                          selectedProduct={selectedProduct}\n+                          handleProductHid={handleProductHid}\n+                        />\n+                      </div>\n+                    )}\n+\n+                    {product !== selectedProduct && (\n+                      <BoxContainer\n+                        key={index}\n+                        categoryOption={categoryShadow[product.category]}\n+                      >\n+                        <div\n+                          key={index}\n+                          style={{\n+                            ...styles.box,\n+\n+                            // justifyContent:\n+                            // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n+                          }}\n+                        >\n+                          {product.images.length > 0 ? (\n+                            <img\n+                              src={product.images[0]} // Display first image only\n+                              alt={product.name}\n+                              style={{\n+                                width: \"250px\",\n+                                height: \"250px\",\n+                                objectFit: \"cover\",\n+                                borderRadius: \"10px\",\n+                                cursor: \"pointer\",\n+                              }}\n+                              onClick={() => {\n+                                setSelectedProduct(product);\n+\n+                                show();\n+                              }}\n+                            />\n+                          ) : (\n+                            <p>{t(\"No Image Available\")}</p>\n+                          )}\n+                        </div>\n+\n+                        {/* text */}\n+                        <div style={{ display: \"flex\" }}>\n+                          <div\n+                            className=\"text\"\n+                            style={{\n+                              borderRadius: \"10PX\",\n+                              width: \"100%\",\n+                              height: \"100px\",\n+                              //  background:\"red\",\n+                              padding: \"10px\",\n+                            }}\n+                          >\n+                            <Name className=\"name\">\n+                              <span\n+                                style={{ color: \"black\" }}\n+                                dangerouslySetInnerHTML={{\n+                                  __html: highlightText(\n+                                    isExpanded\n+                                      ? product.name\n+                                      : product.name.slice(0, maxLength),\n+                                    searchTerm\n+                                  ),\n+                                }}\n+                              ></span>{\" \"}\n+                            </Name>\n+                            <DescriptionContainer>\n+                              <DescriptionTitle>\n+                                {t(\"Description\")}:\n+                                <DescriptionContent>\n+                                  {isExpanded\n+                                    ? product.description\n+                                    : product.description.slice(0, maxLength) +\n+                                      \"...\"}\n+                                </DescriptionContent>\n+                              </DescriptionTitle>\n+                            </DescriptionContainer>\n+                            <StatusContainer>\n+                              <StatusTitle>\n+                                {t(\"Status\")}:\n+                                <StatusContent>{product.status}</StatusContent>\n+                              </StatusTitle>\n+                            </StatusContainer>\n+                            <Price key={index}>\n+                              {t(\"CFA\")}: {product.price - product.discount}\n+                            </Price>\n+                            {product.discount > 0 && (\n+                              <Discount key={index}>\n+                                {t(\"CFA\")}:<s>{product.price}</s>\n+                                <label\n+                                  style={{\n+                                    width: \"40px\",\n+                                    height: \"20px\",\n+                                    background: \"#90EE90\",\n+                                    textAlign: \"center\",\n+                                    borderRadius: \"5px\",\n+                                    marginLeft: \"15px\",\n+                                  }}\n+                                >\n+                                  -\n+                                  {(\n+                                    (product.discount / product.price) *\n+                                    100\n+                                  ).toFixed(0)}\n+                                  %\n+                                </label>\n+                              </Discount>\n+                            )}\n+                          </div>\n+\n+                          {/* like and wishlist */}\n+                          <div style={{ background: \"\" }}>\n+                            <div>\n+                              {/* Product Display */}\n+\n+                              {selectedProduct === product && (\n+                                <div>\n+                                  <button\n+                                    onClick={() => toggleLike(selectedProduct)}\n+                                    styles={{\n+                                      border: \"0px\",\n+                                      background: \"red\",\n+                                    }}\n+                                  >\n+                                    {selectedProduct.likedBy.some(\n+                                      (user) => user.userId === userId\n+                                    )\n+                                      ? \"‚ù§Ô∏è\"\n+                                      : \"ü§ç\"}\n+                                    {product.likes}\n+                                  </button>\n+                                </div>\n+                              )}\n+                            </div>\n+                            <div>\n+                              <button\n+                                style={{\n+                                  background: \"transparent\",\n+                                  border: \"0px solid orange\",\n+                                  color: \"orange\",\n+                                  padding: \"0px 0px\",\n+                                  background: \"none\",\n+                                  borderRadius: \"10px 10px 10px 10px \",\n+                                  cursor: \"pointer\",\n+                                  fontSize: \"40px\",\n+                                  transition: \"all 0.3s ease\",\n+                                  marginRight: \"auto\",\n+                                  width: \"35px\",\n+                                }}\n+                                onClick={() => dispatch(addToWishlist({ productId: product.id, userId }))}\n+                              >\n+                                +\n+                              </button>\n+                            </div>\n+                          </div>\n+                        </div>\n+\n+                        <div\n+                          style={{\n+                            background: \"\",\n+                            textAlign: \"center\",\n+                            padding: \"5px\",\n+                          }}\n+                        >\n+                          <AddtocartButton\n+                            main={product.discount > 0}\n+                            onClick={() => dispatch(addToCartAPI(product))}\n+                          >\n+                            {t(\"Add To Cart\")}\n+                          </AddtocartButton>\n+                        </div>\n+                      </BoxContainer>\n+                    )}\n+                  </div>\n+                ))\n+              ) : (\n+                <p>{t(\"Loading...\")}</p>\n+              )}\n+\n+              {selectedProduct && showDetails && selectedProduct && <></>}\n+            </div>\n+          }\n+\n+          {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n+        </React.Fragment>\n   )\n }\n \n+\n export default DesktopCards\n"
                },
                {
                    "date": 1743729918032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import React from 'react'\n \n+\n const DesktopCards = () => {\n   return (\n     <React.Fragment>\n           {\n@@ -199,7 +200,29 @@\n           {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n         </React.Fragment>\n   )\n }\n+const style = {\n+    sliderSettings: {\n+      dots: true, // Show navigation dots\n+      infinite: true, // Enable infinite looping\n+      speed: 100, // Transition speed (ms)\n+      slidesToShow: 1, // Show one image at a time\n+      slidesToScroll: 1, // Scroll one image per action\n+      autoplay: true,\n+      autoplaySpeed: 3000, // Autoplay speed (ms)\n+    },\n+    buttonsContainer: {\n+      display: \"flex\",\n+    },\n+    buttons: {\n+      color: \"orangered\",\n+      background: \"none\",\n+      border: \"2px solid orangered\",\n+      margin: \"10px\",\n+      borderRadius: \"10px\",\n+      before: \"+\",\n+    },\n+  };\n+  \n \n-\n export default DesktopCards\n"
                },
                {
                    "date": 1743729945914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,27 @@\n import React from 'react'\n \n+import {\n+  BoxContainer,\n+  AddtocartButton,\n+  MAddtocartButton,\n+  MAddToWishList,\n+  Price,\n+  Discount,\n+  DescriptionContainer,\n+  DescriptionTitle,\n+  DescriptionContent,\n+  StatusContainer,\n+  StatusContent,\n+  StatusTitle,\n+  CloseButton,\n+  Name,\n+  positions,\n+  fontSizes,\n+  categoryShadow,\n+  iospositions,\n+  iosfontSizes,\n+} from \"../styledComponents\";\n \n const DesktopCards = () => {\n   return (\n     <React.Fragment>\n"
                },
                {
                    "date": 1743729963164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n   iospositions,\n   iosfontSizes,\n } from \"../styledComponents\";\n \n-const DesktopCards = () => {\n+const DesktopCards = ({}) => {\n   return (\n     <React.Fragment>\n           {\n             <div className=\"animated-box\" style={styles.container}>\n"
                },
                {
                    "date": 1743729972942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n   iospositions,\n   iosfontSizes,\n } from \"../styledComponents\";\n \n-const DesktopCards = ({ object,\n+const DesktopCards = ({ Dobject,\n     addToCartAPI,\n     addToWishlist,\n     handleProductClick,\n     show,\n"
                },
                {
                    "date": 1743730034612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,8 @@\n   StatusContainer,\n   StatusContent,\n   StatusTitle,\n   Name,\n-\n   categoryShadow,\n \n } from \"../styledComponents\";\n \n"
                }
            ],
            "date": 1743729751411,
            "name": "Commit-0",
            "content": "rafce"
        }
    ]
}