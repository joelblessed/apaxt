{
    "sourceFile": "src/components/pages/mobileCategory.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 33,
            "patches": [
                {
                    "date": 1742741565115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742741577969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,9 +150,9 @@\n    const navigate = useNavigate();\n  \n    const handleProductClick = (product) => {\n     //  SelectedProduct(product);\n-     localStorage.setItem(\"selectedProduct\", product);\n+     localStorage.setItem(\"selectedProduct\", product);?\n      navigate(\"/selectedProduct\");\n    };\n  \n    const hanldleProductHid = () => {\n"
                },
                {
                    "date": 1742741621529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,10 +149,10 @@\n  \n    const navigate = useNavigate();\n  \n    const handleProductClick = (product) => {\n-    //  SelectedProduct(product);\n-     localStorage.setItem(\"selectedProduct\", product);?\n+    //  SelectedProduct(product);mobileCategory\n+    //  localStorage.setItem(\"selectedProduct\", product);\n      navigate(\"/selectedProduct\");\n    };\n  \n    const hanldleProductHid = () => {\n"
                },
                {
                    "date": 1742741627163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,9 @@\n  \n    const navigate = useNavigate();\n  \n    const handleProductClick = (product) => {\n-    //  SelectedProduct(product);mobileCategory\n+     SelectedProduct(product);\n     //  localStorage.setItem(\"selectedProduct\", product);\n      navigate(\"/selectedProduct\");\n    };\n  \n"
                },
                {
                    "date": 1742741684399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,9 @@\n  \n    const navigate = useNavigate();\n  \n    const handleProductClick = (product) => {\n-     SelectedProduct(product);\n+     electedProduct(product);\n     //  localStorage.setItem(\"selectedProduct\", product);\n      navigate(\"/selectedProduct\");\n    };\n  \n"
                },
                {
                    "date": 1742741694128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n   addToCart,\n   searchTerm,\n   highlightText,\n   addToWishList,\n-  SelectedProduct,\n+  electedProduct,\n   selectedCategory,\n   mobilefilteredProducts,\n   filteredProducts\n }) {\n"
                },
                {
                    "date": 1742741778190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n   addToCart,\n   searchTerm,\n   highlightText,\n   addToWishList,\n-  electedProduct,\n+  SelectedProduct,\n   selectedCategory,\n   mobilefilteredProducts,\n   filteredProducts\n }) {\n"
                },
                {
                    "date": 1742741802687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,9 +148,9 @@\n    }, []);\n  \n    const navigate = useNavigate();\n  \n-   const handleProductClick = (product) => {\n+   const handleProductClic = (product) => {\n      electedProduct(product);\n     //  localStorage.setItem(\"selectedProduct\", product);\n      navigate(\"/selectedProduct\");\n    };\n"
                },
                {
                    "date": 1742741808728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,9 @@\n  \n    const navigate = useNavigate();\n  \n    const handleProductClic = (product) => {\n-     electedProduct(product);\n+     selectedProduct(product);\n     //  localStorage.setItem(\"selectedProduct\", product);\n      navigate(\"/selectedProduct\");\n    };\n  \n"
                },
                {
                    "date": 1742741817110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,8 @@\n import { useTranslation } from \"react-i18next\";\n import Slider from \"react-slick\";\n import styled, { keyframes } from \"styled-components\";\n \n-\n-\n const categoryOptions = {\n   1: \"0px 0px 10px 1px red\",\n   2: \"0px 0px 10px 1px yellow\",\n   3: \"0px 0px 10px 1px orange\",\n@@ -32,12 +30,10 @@\n   border: px solid red;\n   border-radius: 12px;\n   box-shadow: ${(props) => categoryOptions[props.categoryOption]};\n \n-&:hover{\n-  transform: scale(1.1);\n-  \n-  \n+  &:hover {\n+    transform: scale(1.1);\n   }\n `;\n const AddtocartButton = styled.button`\n background:none;\n@@ -107,9 +103,8 @@\n const StatusContent = styled.a`\n   font-size: 13px;\n `;\n \n-\n function MobileCategory({\n   api,\n   addToCart,\n   searchTerm,\n@@ -117,128 +112,127 @@\n   addToWishList,\n   SelectedProduct,\n   selectedCategory,\n   mobilefilteredProducts,\n-  filteredProducts\n+  filteredProducts,\n }) {\n-  \n   const [currentIndex, setCurrentIndex] = useState(0);\n-   const [products, setProducts] = useState(null);\n-   const [isMobile, setIsMobile] = useState(false);\n-   const [selectedProduct, setSelectedProduct] = useState(null);\n-   const [selectedDProduct, setDSelectedProduct] = useState(null);\n-   const [selected, setSelected] = useState(false);\n-   const userId = localStorage.getItem(\"userId\");\n-   const [showDetails, setShowDetails] = useState(true);\n-   const username = localStorage.getItem(\"username\");\n-   const previewRef = useRef(null);\n-   const buttonRef = useRef(null);\n- \n-   const { t } = useTranslation();\n-   const dispatch = useDispatch(); // Function to check screen size\n- \n-   // Function to check screen size\n-   const handleResize = () => {\n-     setIsMobile(window.innerWidth <= 1000);\n-   };\n- \n-   useEffect(() => {\n-     handleResize(); // Initial check\n-     window.addEventListener(\"resize\", handleResize); // Update on resize\n-     return () => window.removeEventListener(\"resize\", handleResize);\n-   }, []);\n- \n-   const navigate = useNavigate();\n- \n-   const handleProductClic = (product) => {\n-     selectedProduct(product);\n+  const [products, setProducts] = useState(null);\n+  const [isMobile, setIsMobile] = useState(false);\n+  const [selectedProduct, setSelectedProduct] = useState(null);\n+  const [selectedDProduct, setDSelectedProduct] = useState(null);\n+  const [selected, setSelected] = useState(false);\n+  const userId = localStorage.getItem(\"userId\");\n+  const [showDetails, setShowDetails] = useState(true);\n+  const username = localStorage.getItem(\"username\");\n+  const previewRef = useRef(null);\n+  const buttonRef = useRef(null);\n+\n+  const { t } = useTranslation();\n+  const dispatch = useDispatch(); // Function to check screen size\n+\n+  // Function to check screen size\n+  const handleResize = () => {\n+    setIsMobile(window.innerWidth <= 1000);\n+  };\n+\n+  useEffect(() => {\n+    handleResize(); // Initial check\n+    window.addEventListener(\"resize\", handleResize); // Update on resize\n+    return () => window.removeEventListener(\"resize\", handleResize);\n+  }, []);\n+\n+  const navigate = useNavigate();\n+\n+  const handleProductClic = (product) => {\n+    SelectedProduct(product);\n     //  localStorage.setItem(\"selectedProduct\", product);\n-     navigate(\"/selectedProduct\");\n-   };\n- \n-   const hanldleProductHid = () => {\n-     setSelectedProduct(null);\n-   };\n- \n-   // Toggle the selection state of a product\n-   const toggleSelection = (id, currentSelection) => {\n-     // Update the product on the server using PATCH\n-     fetch(`${api}/updateProducts/${id}`, {\n-       method: \"PATCH\",\n-       headers: {\n-         \"Content-Type\": \"application/json\",\n-       },\n-       body: JSON.stringify({ isSelected: !currentSelection }),\n-     })\n-       .then((response) => response.json())\n-       .then((updatedProduct) => {\n-         // Update the local state to reflect the change\n-         setProducts((prevProducts) =>\n-           prevProducts.map((product) =>\n-             product.id === id ? updatedProduct : product\n-           )\n-         );\n-       })\n-       .catch((error) => console.error(\"Error updating product:\", error));\n-   };\n- \n-   // Fetch all products\n-   useEffect(() => {\n-     const fetchProducts = async () => {\n-       const response = await fetch(`${api}/products`);\n-       const data = await response.json();\n-       setProducts(data);\n-     };\n-     fetchProducts();\n-   }, [api]);\n- \n-   // Toggle like/dislike with one button\n-   const toggleLike = async (product) => {\n-     if (!product) return;\n- \n-     const liked = product.likedBy.some((user) => user.userId === userId);\n-     const endpoint = liked ? \"dislike\" : \"like\";\n- \n-     const response = await fetch(`${api}/products/${product.id}/${endpoint}`, {\n-       method: \"PATCH\",\n-       headers: { \"Content-Type\": \"application/json\" },\n-       body: JSON.stringify({ userId, username }), // Send user info\n-     });\n- \n-     const updatedProduct = await response.json();\n- \n-     // Update state\n-     setProducts(\n-       products.map((p) =>\n-         p.id === product.id ? { ...p, ...updatedProduct } : p\n-       )\n-     );\n-     setSelectedProduct({ ...product, ...updatedProduct });\n-   };\n-   // ////////////////////////////////////////////////////////\n- \n-   const handleMouseEnter = () => {\n-     if (buttonRef.current) {\n-       buttonRef.current.click();\n-     }\n-   };\n- \n-   // ///////////////////////////////////////////////////////////\n- \n-   const show = (event) => {\n-     setShowDetails((prevShow) => !prevShow);\n-     if (previewRef.current && !previewRef.current.contains(event.target)) {\n-     }\n-   };\n- \n-   // useEffect(() => {\n-   //   // Attach event listener to the whole document\n-   //   document.addEventListener(\"mousedown\", show);\n-   //   return () => {\n-   //     document.removeEventListener(\"mousedown\", show);\n-   //   };\n-   // }, []);\n+    navigate(\"/selectedProduct\");\n+  };\n \n+  const hanldleProductHid = () => {\n+    setSelectedProduct(null);\n+  };\n+\n+  // Toggle the selection state of a product\n+  const toggleSelection = (id, currentSelection) => {\n+    // Update the product on the server using PATCH\n+    fetch(`${api}/updateProducts/${id}`, {\n+      method: \"PATCH\",\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+      },\n+      body: JSON.stringify({ isSelected: !currentSelection }),\n+    })\n+      .then((response) => response.json())\n+      .then((updatedProduct) => {\n+        // Update the local state to reflect the change\n+        setProducts((prevProducts) =>\n+          prevProducts.map((product) =>\n+            product.id === id ? updatedProduct : product\n+          )\n+        );\n+      })\n+      .catch((error) => console.error(\"Error updating product:\", error));\n+  };\n+\n+  // Fetch all products\n+  useEffect(() => {\n+    const fetchProducts = async () => {\n+      const response = await fetch(`${api}/products`);\n+      const data = await response.json();\n+      setProducts(data);\n+    };\n+    fetchProducts();\n+  }, [api]);\n+\n+  // Toggle like/dislike with one button\n+  const toggleLike = async (product) => {\n+    if (!product) return;\n+\n+    const liked = product.likedBy.some((user) => user.userId === userId);\n+    const endpoint = liked ? \"dislike\" : \"like\";\n+\n+    const response = await fetch(`${api}/products/${product.id}/${endpoint}`, {\n+      method: \"PATCH\",\n+      headers: { \"Content-Type\": \"application/json\" },\n+      body: JSON.stringify({ userId, username }), // Send user info\n+    });\n+\n+    const updatedProduct = await response.json();\n+\n+    // Update state\n+    setProducts(\n+      products.map((p) =>\n+        p.id === product.id ? { ...p, ...updatedProduct } : p\n+      )\n+    );\n+    setSelectedProduct({ ...product, ...updatedProduct });\n+  };\n+  // ////////////////////////////////////////////////////////\n+\n+  const handleMouseEnter = () => {\n+    if (buttonRef.current) {\n+      buttonRef.current.click();\n+    }\n+  };\n+\n+  // ///////////////////////////////////////////////////////////\n+\n+  const show = (event) => {\n+    setShowDetails((prevShow) => !prevShow);\n+    if (previewRef.current && !previewRef.current.contains(event.target)) {\n+    }\n+  };\n+\n+  // useEffect(() => {\n+  //   // Attach event listener to the whole document\n+  //   document.addEventListener(\"mousedown\", show);\n+  //   return () => {\n+  //     document.removeEventListener(\"mousedown\", show);\n+  //   };\n+  // }, []);\n+\n   const styles = {\n     container: {\n       display: \"flex\",\n       flexDirection: \"row\",\n@@ -254,14 +248,13 @@\n     },\n     box: {\n       width: \"250px\",\n       height: \"250px\",\n-     \n     },\n \n     lastBox: {\n       background: \"blue\",\n-      \n+\n       // Pushes last box to the left\n     },\n   };\n \n@@ -290,161 +283,155 @@\n       // Pushes last box to the left\n     },\n   };\n \n+  return (\n+    <>\n+      <React.Fragment>\n+        {\n+          <div style={mstyles.Mcontainer}>\n+            {filteredProducts.length > 0 ? (\n+              filteredProducts.map((product, index) => (\n+                <div>\n+                  <BoxContainer\n+                    className=\"animated-box\"\n+                    key={index}\n+                    categoryOption={categoryShadow[product.category]}\n+                  >\n+                    <div\n+                      key={index}\n+                      style={{\n+                        ...mstyles.mbox,\n \n- \n-  return (\n-   <>\n-   \n-      <React.Fragment >\n-               {\n-                 <div  style={mstyles.Mcontainer}>\n-                   { filteredProducts.length > 0 ? (\n-                      filteredProducts.map((product, index) => (\n-                       <div>\n-                         <BoxContainer\n-                         className=\"animated-box\"\n-                           key={index}\n-                           categoryOption={categoryShadow[product.category]}\n-                         >\n-                           <div\n-                             key={index}\n-                             style={{\n-                               ...mstyles.mbox,\n-     \n-                               // justifyContent:\n-                               // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n-                             }}\n-                           >\n-                             {product.images.length > 0 ? (\n-                               <img\n-                                 src={product.images[0]} // Display first image only\n-                                 alt={product.name}\n-                                 style={{\n-                                   width: \"135px\",\n-                                   height: \"150px\",\n-                                   objectFit: \"cover\",\n-                                   borderRadius: \"10px\",\n-                                   cursor:\"pointer\"\n-                                 }}\n-                                 onClick={() => {\n-                                  setSelectedProduct(product);\n-                                  handleProductClick(product);\n-                                  show();\n-                                 }}\n-                               />\n-                             ) : (\n-                               <p>{t(\"No Image Available\")}</p>\n-                             )}\n-                             <button\n-                               style={{\n-                                 position: \"relative\",\n-                                 left: \"105px\",\n-                                 top: \"-15px\",\n-                                 background: \"none\",\n-                                 border: \"none\",\n-                                 fontSize: \"35px\",\n-                                 color: \"orange\",\n-                               }}\n-                             >\n-                               +\n-                             </button>\n-                           </div>\n-     \n-                           {/* text */}\n-                           <div style={{ display: \"flex\" }}>\n-                             <div\n-                               className=\"text\"\n-                               style={{\n-                                 borderRadius: \"10PX\",\n-                                 width: \"100%\",\n-                                 height: \"100px\",\n-                                 // background:\"red\",\n-                                 padding: \"10px\",\n-                               }}\n-                             >\n-                               <Name className=\"name\" fontSize=\"17px\">\n-                                 <span\n-                                   style={{ color: \"black\" }}\n-                                   dangerouslySetInnerHTML={{\n-                                     __html: highlightText(product.name, searchTerm),\n-                                   }}\n-                                 ></span>{\" \"}\n-                               </Name>\n-     \n-                               {/* <DescriptionContainer>\n+                        // justifyContent:\n+                        // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n+                      }}\n+                    >\n+                      {product.images.length > 0 ? (\n+                        <img\n+                          src={product.images[0]} // Display first image only\n+                          alt={product.name}\n+                          style={{\n+                            width: \"135px\",\n+                            height: \"150px\",\n+                            objectFit: \"cover\",\n+                            borderRadius: \"10px\",\n+                            cursor: \"pointer\",\n+                          }}\n+                          onClick={() => {\n+                            setSelectedProduct(product);\n+                            handleProductClick(product);\n+                            show();\n+                          }}\n+                        />\n+                      ) : (\n+                        <p>{t(\"No Image Available\")}</p>\n+                      )}\n+                      <button\n+                        style={{\n+                          position: \"relative\",\n+                          left: \"105px\",\n+                          top: \"-15px\",\n+                          background: \"none\",\n+                          border: \"none\",\n+                          fontSize: \"35px\",\n+                          color: \"orange\",\n+                        }}\n+                      >\n+                        +\n+                      </button>\n+                    </div>\n+\n+                    {/* text */}\n+                    <div style={{ display: \"flex\" }}>\n+                      <div\n+                        className=\"text\"\n+                        style={{\n+                          borderRadius: \"10PX\",\n+                          width: \"100%\",\n+                          height: \"100px\",\n+                          // background:\"red\",\n+                          padding: \"10px\",\n+                        }}\n+                      >\n+                        <Name className=\"name\" fontSize=\"17px\">\n+                          <span\n+                            style={{ color: \"black\" }}\n+                            dangerouslySetInnerHTML={{\n+                              __html: highlightText(product.name, searchTerm),\n+                            }}\n+                          ></span>{\" \"}\n+                        </Name>\n+\n+                        {/* <DescriptionContainer>\n                               <DescriptionTitle>\n                                 {t(\"Description\")}:\n                                 <DescriptionContent>\n                                   {product.description}\n                                 </DescriptionContent>\n                               </DescriptionTitle>\n                             </DescriptionContainer> */}\n-                               <StatusContainer>\n-                                 <StatusTitle>\n-                                   {t(\"Status\")}:\n-                                   <StatusContent>{product.status}</StatusContent>\n-                                 </StatusTitle>\n-                               </StatusContainer>\n-                               <Price key={index}>\n-                                 {t(\"CFA\")}: {product.price - product.discount}\n-                               </Price>\n-                               {product.discount > 0 && (\n-                                 <Discount key={index}>\n-                                   {t(\"CFA\")}:<s>{product.price}</s>\n-                                   <label\n-                                     style={{\n-                                       width: \"40px\",\n-                                       height: \"20px\",\n-                                       background: \"#90EE90\",\n-                                       textAlign: \"center\",\n-                                       borderRadius: \"5px\",\n-                                       marginLeft: \"15px\",\n-                                     }}\n-                                   >\n-                                     -\n-                                     {(\n-                                       (product.discount / product.price) *\n-                                       100\n-                                     ).toFixed(0)}\n-                                     %\n-                                   </label>\n-                                 </Discount>\n-                               )}\n-                             </div>\n-                           </div>\n-     \n-                           <div\n-                             style={{\n-                               background: \"\",\n-                               textAlign: \"center\",\n-                               padding: \"5px\",\n-                             }}\n-                           >\n-                             <MAddtocartButton\n-                               main={product.discount > 0}\n-                               width=\"auto\"\n-                               onClick={() => dispatch(addToCartAPI(product))}\n-                             >\n-                               {t(\"Add To Cart\")}\n-                             </MAddtocartButton>\n-                           </div>\n-                         </BoxContainer>\n-                       </div>\n-                     ))\n-                   ) : (\n-                     <p>{t(\"Loading...\")}</p>\n-                   )}\n-     \n-                   \n-                 </div>\n-               }\n-     \n-               {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n-             </React.Fragment>\n-   \n-   </>\n+                        <StatusContainer>\n+                          <StatusTitle>\n+                            {t(\"Status\")}:\n+                            <StatusContent>{product.status}</StatusContent>\n+                          </StatusTitle>\n+                        </StatusContainer>\n+                        <Price key={index}>\n+                          {t(\"CFA\")}: {product.price - product.discount}\n+                        </Price>\n+                        {product.discount > 0 && (\n+                          <Discount key={index}>\n+                            {t(\"CFA\")}:<s>{product.price}</s>\n+                            <label\n+                              style={{\n+                                width: \"40px\",\n+                                height: \"20px\",\n+                                background: \"#90EE90\",\n+                                textAlign: \"center\",\n+                                borderRadius: \"5px\",\n+                                marginLeft: \"15px\",\n+                              }}\n+                            >\n+                              -\n+                              {(\n+                                (product.discount / product.price) *\n+                                100\n+                              ).toFixed(0)}\n+                              %\n+                            </label>\n+                          </Discount>\n+                        )}\n+                      </div>\n+                    </div>\n+\n+                    <div\n+                      style={{\n+                        background: \"\",\n+                        textAlign: \"center\",\n+                        padding: \"5px\",\n+                      }}\n+                    >\n+                      <MAddtocartButton\n+                        main={product.discount > 0}\n+                        width=\"auto\"\n+                        onClick={() => dispatch(addToCartAPI(product))}\n+                      >\n+                        {t(\"Add To Cart\")}\n+                      </MAddtocartButton>\n+                    </div>\n+                  </BoxContainer>\n+                </div>\n+              ))\n+            ) : (\n+              <p>{t(\"Loading...\")}</p>\n+            )}\n+          </div>\n+        }\n+\n+        {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n+      </React.Fragment>\n+    </>\n   );\n }\n \n const style = {\n"
                },
                {
                    "date": 1742741839403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,9 +318,9 @@\n                             cursor: \"pointer\",\n                           }}\n                           onClick={() => {\n                             setSelectedProduct(product);\n-                            handleProductClick(product);\n+                            handleProductClic(product);\n                             show();\n                           }}\n                         />\n                       ) : (\n"
                },
                {
                    "date": 1742741904143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,9 +318,9 @@\n                             cursor: \"pointer\",\n                           }}\n                           onClick={() => {\n                             setSelectedProduct(product);\n-                            handleProductClic(product);\n+                            \n                             show();\n                           }}\n                         />\n                       ) : (\n"
                },
                {
                    "date": 1742741910430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,8 +319,9 @@\n                           }}\n                           onClick={() => {\n                             setSelectedProduct(product);\n                             \n+                            \n                             show();\n                           }}\n                         />\n                       ) : (\n"
                },
                {
                    "date": 1742741916997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,10 +318,10 @@\n                             cursor: \"pointer\",\n                           }}\n                           onClick={() => {\n                             setSelectedProduct(product);\n+                            SelectedProduct(product);\n                             \n-                            \n                             show();\n                           }}\n                         />\n                       ) : (\n"
                },
                {
                    "date": 1742741945382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,10 +318,9 @@\n                             cursor: \"pointer\",\n                           }}\n                           onClick={() => {\n                             setSelectedProduct(product);\n-                            SelectedProduct(product);\n-                            \n+                            handleProductClic(product);\n                             show();\n                           }}\n                         />\n                       ) : (\n"
                },
                {
                    "date": 1742741955968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,9 +317,9 @@\n                             borderRadius: \"10px\",\n                             cursor: \"pointer\",\n                           }}\n                           onClick={() => {\n-                            setSelectedProduct(product);\n+                            SelectedProduct(product);\n                             handleProductClic(product);\n                             show();\n                           }}\n                         />\n"
                },
                {
                    "date": 1742741975254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,9 +318,9 @@\n                             cursor: \"pointer\",\n                           }}\n                           onClick={() => {\n                             SelectedProduct(product);\n-                            handleProductClic(product);\n+                            handleProductClic();\n                             show();\n                           }}\n                         />\n                       ) : (\n"
                },
                {
                    "date": 1742741994182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n \n   const navigate = useNavigate();\n \n   const handleProductClic = (product) => {\n-    SelectedProduct(product);\n+    SelectedProduct(product);setSelectedProduct(product);\n     //  localStorage.setItem(\"selectedProduct\", product);\n     navigate(\"/selectedProduct\");\n   };\n \n"
                },
                {
                    "date": 1742742013641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,10 +142,10 @@\n   }, []);\n \n   const navigate = useNavigate();\n \n-  const handleProductClic = (product) => {\n-    SelectedProduct(product);setSelectedProduct(product);\n+  const handleProductClic = () => {\n+    // SelectedProduct(product);\n     //  localStorage.setItem(\"selectedProduct\", product);\n     navigate(\"/selectedProduct\");\n   };\n \n"
                },
                {
                    "date": 1742742044546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,9 +317,8 @@\n                             borderRadius: \"10px\",\n                             cursor: \"pointer\",\n                           }}\n                           onClick={() => {\n-                            SelectedProduct(product);\n                             handleProductClic();\n                             show();\n                           }}\n                         />\n"
                },
                {
                    "date": 1742742173021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,8 +318,10 @@\n                             cursor: \"pointer\",\n                           }}\n                           onClick={() => {\n                             handleProductClic();\n+                            SelectedProduct(p);\n+\n                             show();\n                           }}\n                         />\n                       ) : (\n"
                },
                {
                    "date": 1742742195964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,9 +318,9 @@\n                             cursor: \"pointer\",\n                           }}\n                           onClick={() => {\n                             handleProductClic();\n-                            SelectedProduct(p);\n+                            SelectedProduct;\n \n                             show();\n                           }}\n                         />\n"
                },
                {
                    "date": 1742742210995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,9 +318,9 @@\n                             cursor: \"pointer\",\n                           }}\n                           onClick={() => {\n                             handleProductClic();\n-                            SelectedProduct;\n+                            SelectedProduct(product);\n \n                             show();\n                           }}\n                         />\n"
                },
                {
                    "date": 1743037474176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,106 +5,8 @@\n import { useTranslation } from \"react-i18next\";\n import Slider from \"react-slick\";\n import styled, { keyframes } from \"styled-components\";\n \n-const categoryOptions = {\n-  1: \"0px 0px 10px 1px red\",\n-  2: \"0px 0px 10px 1px yellow\",\n-  3: \"0px 0px 10px 1px orange\",\n-  4: \"0px 0px 10px 1px blue\",\n-  5: \"0px 0px 10px 1px black\",\n-  6: \"0px 0px 10px 1px violet\",\n-};\n-const categoryShadow = {\n-  farm: 1,\n-  computer: 2,\n-  Clothing: 3,\n-  accesseries: 4,\n-  other: 5,\n-};\n-const CloseButton = styled.button`\n-&:hover{\n-transform: scale(1.1);\n-`;\n-\n-const BoxContainer = styled.div`\n-  border: px solid red;\n-  border-radius: 12px;\n-  box-shadow: ${(props) => categoryOptions[props.categoryOption]};\n-\n-  &:hover {\n-    transform: scale(1.1);\n-  }\n-`;\n-const AddtocartButton = styled.button`\n-background:none;\n-border: 1px solid RED;\n-color: red;\n-padding: 10px 20px;\n-border-radius: 15px;\n-cursor: pointer;\n-font-size: 100%,\n-transition: all 0.3s ease;\n-width: 90%;\n-margin-top:${(props) => (props.main ? \"40px\" : \"10px\")};\n-\n-\n-&:hover{\n-transform: scale(1.1);\n-border:1px solid green;\n-color:green;\n-\n-}\n-`;\n-const MAddtocartButton = styled.button`\n-background:none;\n-border: 1px solid RED;\n-color: red;\n-padding: 10px 20px;\n-border-radius: 15px;\n-cursor: pointer;\n-font-size: 100%,\n-transition: all 0.3s ease;\n-width:auto;\n-margin-top:${(props) => (props.main ? \"5px\" : \"-60px\")};\n-\n-\n-&:hover{\n-transform: scale(1.1);\n-border:1px solid green;\n-color:green;\n-\n-}\n-`;\n-const Name = styled.a`\n-  font-size: ${({ fontSize }) => fontSize || \"20px\"};\n-`;\n-const DescriptionContainer = styled.label`\n-  font-size: 10px;\n-`;\n-\n-const DescriptionTitle = styled.h6`\n-  font-size: 13px;\n-`;\n-const DescriptionContent = styled.a`\n-  font-size: 13px;\n-`;\n-const Price = styled.h4`\n-  font-size: 16px;\n-`;\n-const Discount = styled.h3`\n-  font-size: 13px;\n-`;\n-const StatusContainer = styled.label`\n-  font-size: 13px;\n-`;\n-const StatusTitle = styled.h6`\n-  font-size: 13px;\n-`;\n-const StatusContent = styled.a`\n-  font-size: 13px;\n-`;\n-\n function MobileCategory({\n   api,\n   addToCart,\n   searchTerm,\n"
                },
                {
                    "date": 1743037493072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,27 @@\n import { addToCartBeforeLogin, addToCartAPI } from \"../../cartAction\";\n import { useTranslation } from \"react-i18next\";\n import Slider from \"react-slick\";\n import styled, { keyframes } from \"styled-components\";\n-\n+import {\n+  BoxContainer,\n+  AddtocartButton,\n+  MAddtocartButton,\n+  MAddToWishList,\n+  Price,\n+  Discount,\n+  DescriptionContainer,\n+  DescriptionTitle,\n+  DescriptionContent,\n+  StatusContainer,\n+  StatusContent,\n+  StatusTitle,\n+  CloseButton,\n+  Name,\n+  positions,\n+  fontSizes,\n+  categoryShadow,\n+} from \"./styledComponents\";\n function MobileCategory({\n   api,\n   addToCart,\n   searchTerm,\n"
                },
                {
                    "date": 1743037498429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,10 @@\n   positions,\n   fontSizes,\n   categoryShadow,\n } from \"./styledComponents\";\n+\n+\n function MobileCategory({\n   api,\n   addToCart,\n   searchTerm,\n"
                },
                {
                    "date": 1743037533792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import { addToCartBeforeLogin, addToCartAPI } from \"../../cartAction\";\n import { useTranslation } from \"react-i18next\";\n import Slider from \"react-slick\";\n import styled, { keyframes } from \"styled-components\";\n+\n import {\n   BoxContainer,\n   AddtocartButton,\n   MAddtocartButton,\n"
                },
                {
                    "date": 1743037608442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import { addToCartBeforeLogin, addToCartAPI } from \"../../cartAction\";\n import { useTranslation } from \"react-i18next\";\n import Slider from \"react-slick\";\n import styled, { keyframes } from \"styled-components\";\n+import \"../translations/i18n\";\n \n import {\n   BoxContainer,\n   AddtocartButton,\n@@ -50,8 +51,10 @@\n   const previewRef = useRef(null);\n   const buttonRef = useRef(null);\n \n   const { t } = useTranslation();\n+     const position = positions[i18n.language] || position.en;\n+        const fontSize = fontSizes[i18n.language] || fontSize.en;\n   const dispatch = useDispatch(); // Function to check screen size\n \n   // Function to check screen size\n   const handleResize = () => {\n"
                },
                {
                    "date": 1743037616189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,8 @@\n   fontSizes,\n   categoryShadow,\n } from \"./styledComponents\";\n \n-\n function MobileCategory({\n   api,\n   addToCart,\n   searchTerm,\n@@ -49,12 +48,11 @@\n   const [showDetails, setShowDetails] = useState(true);\n   const username = localStorage.getItem(\"username\");\n   const previewRef = useRef(null);\n   const buttonRef = useRef(null);\n-\n   const { t } = useTranslation();\n-     const position = positions[i18n.language] || position.en;\n-        const fontSize = fontSizes[i18n.language] || fontSize.en;\n+  const position = positions[i18n.language] || position.en;\n+  const fontSize = fontSizes[i18n.language] || fontSize.en;\n   const dispatch = useDispatch(); // Function to check screen size\n \n   // Function to check screen size\n   const handleResize = () => {\n"
                },
                {
                    "date": 1743037717698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n   const [showDetails, setShowDetails] = useState(true);\n   const username = localStorage.getItem(\"username\");\n   const previewRef = useRef(null);\n   const buttonRef = useRef(null);\n-  const { t } = useTranslation();\n+  const { t,  } = useTranslation();\n   const position = positions[i18n.language] || position.en;\n   const fontSize = fontSizes[i18n.language] || fontSize.en;\n   const dispatch = useDispatch(); // Function to check screen size\n \n"
                },
                {
                    "date": 1743037740362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n   const [showDetails, setShowDetails] = useState(true);\n   const username = localStorage.getItem(\"username\");\n   const previewRef = useRef(null);\n   const buttonRef = useRef(null);\n-  const { t,  } = useTranslation();\n+  const { t, i18n } = useTranslation();\n   const position = positions[i18n.language] || position.en;\n   const fontSize = fontSizes[i18n.language] || fontSize.en;\n   const dispatch = useDispatch(); // Function to check screen size\n \n@@ -251,17 +251,9 @@\n                       ) : (\n                         <p>{t(\"No Image Available\")}</p>\n                       )}\n                       <button\n-                        style={{\n-                          position: \"relative\",\n-                          left: \"105px\",\n-                          top: \"-15px\",\n-                          background: \"none\",\n-                          border: \"none\",\n-                          fontSize: \"35px\",\n-                          color: \"orange\",\n-                        }}\n+                   \n                       >\n                         +\n                       </button>\n                     </div>\n"
                },
                {
                    "date": 1743037746937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -250,13 +250,13 @@\n                         />\n                       ) : (\n                         <p>{t(\"No Image Available\")}</p>\n                       )}\n-                      <button\n+                      <\n                    \n                       >\n                         +\n-                      </button>\n+                      </>\n                     </div>\n \n                     {/* text */}\n                     <div style={{ display: \"flex\" }}>\n"
                },
                {
                    "date": 1743037755302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -251,12 +251,14 @@\n                       ) : (\n                         <p>{t(\"No Image Available\")}</p>\n                       )}\n                       <MAddToWishList\n+                      \n                    \n                       >\n                         +\n-                      </MAddToWishList>\n+                      </MAddToWishList\n+                      >\n                     </div>\n \n                     {/* text */}\n                     <div style={{ display: \"flex\" }}>\n"
                },
                {
                    "date": 1743037764923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -251,14 +251,14 @@\n                       ) : (\n                         <p>{t(\"No Image Available\")}</p>\n                       )}\n                       <MAddToWishList\n-                      positiion=\n+                      positiion={}\n                    \n                       >\n                         +\n                       </MAddToWishList\n-                      positiion=>\n+                      positiion={}>\n                     </div>\n \n                     {/* text */}\n                     <div style={{ display: \"flex\" }}>\n"
                }
            ],
            "date": 1742741565115,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToCartBeforeLogin, addToCartAPI } from \"../../cartAction\";\nimport { useTranslation } from \"react-i18next\";\nimport Slider from \"react-slick\";\nimport styled, { keyframes } from \"styled-components\";\n\n\n\nconst categoryOptions = {\n  1: \"0px 0px 10px 1px red\",\n  2: \"0px 0px 10px 1px yellow\",\n  3: \"0px 0px 10px 1px orange\",\n  4: \"0px 0px 10px 1px blue\",\n  5: \"0px 0px 10px 1px black\",\n  6: \"0px 0px 10px 1px violet\",\n};\nconst categoryShadow = {\n  farm: 1,\n  computer: 2,\n  Clothing: 3,\n  accesseries: 4,\n  other: 5,\n};\nconst CloseButton = styled.button`\n&:hover{\ntransform: scale(1.1);\n`;\n\nconst BoxContainer = styled.div`\n  border: px solid red;\n  border-radius: 12px;\n  box-shadow: ${(props) => categoryOptions[props.categoryOption]};\n\n&:hover{\n  transform: scale(1.1);\n  \n  \n  }\n`;\nconst AddtocartButton = styled.button`\nbackground:none;\nborder: 1px solid RED;\ncolor: red;\npadding: 10px 20px;\nborder-radius: 15px;\ncursor: pointer;\nfont-size: 100%,\ntransition: all 0.3s ease;\nwidth: 90%;\nmargin-top:${(props) => (props.main ? \"40px\" : \"10px\")};\n\n\n&:hover{\ntransform: scale(1.1);\nborder:1px solid green;\ncolor:green;\n\n}\n`;\nconst MAddtocartButton = styled.button`\nbackground:none;\nborder: 1px solid RED;\ncolor: red;\npadding: 10px 20px;\nborder-radius: 15px;\ncursor: pointer;\nfont-size: 100%,\ntransition: all 0.3s ease;\nwidth:auto;\nmargin-top:${(props) => (props.main ? \"5px\" : \"-60px\")};\n\n\n&:hover{\ntransform: scale(1.1);\nborder:1px solid green;\ncolor:green;\n\n}\n`;\nconst Name = styled.a`\n  font-size: ${({ fontSize }) => fontSize || \"20px\"};\n`;\nconst DescriptionContainer = styled.label`\n  font-size: 10px;\n`;\n\nconst DescriptionTitle = styled.h6`\n  font-size: 13px;\n`;\nconst DescriptionContent = styled.a`\n  font-size: 13px;\n`;\nconst Price = styled.h4`\n  font-size: 16px;\n`;\nconst Discount = styled.h3`\n  font-size: 13px;\n`;\nconst StatusContainer = styled.label`\n  font-size: 13px;\n`;\nconst StatusTitle = styled.h6`\n  font-size: 13px;\n`;\nconst StatusContent = styled.a`\n  font-size: 13px;\n`;\n\n\nfunction MobileCategory({\n  api,\n  addToCart,\n  searchTerm,\n  highlightText,\n  addToWishList,\n  SelectedProduct,\n  selectedCategory,\n  mobilefilteredProducts,\n  filteredProducts\n}) {\n  \n  const [currentIndex, setCurrentIndex] = useState(0);\n   const [products, setProducts] = useState(null);\n   const [isMobile, setIsMobile] = useState(false);\n   const [selectedProduct, setSelectedProduct] = useState(null);\n   const [selectedDProduct, setDSelectedProduct] = useState(null);\n   const [selected, setSelected] = useState(false);\n   const userId = localStorage.getItem(\"userId\");\n   const [showDetails, setShowDetails] = useState(true);\n   const username = localStorage.getItem(\"username\");\n   const previewRef = useRef(null);\n   const buttonRef = useRef(null);\n \n   const { t } = useTranslation();\n   const dispatch = useDispatch(); // Function to check screen size\n \n   // Function to check screen size\n   const handleResize = () => {\n     setIsMobile(window.innerWidth <= 1000);\n   };\n \n   useEffect(() => {\n     handleResize(); // Initial check\n     window.addEventListener(\"resize\", handleResize); // Update on resize\n     return () => window.removeEventListener(\"resize\", handleResize);\n   }, []);\n \n   const navigate = useNavigate();\n \n   const handleProductClick = (product) => {\n    //  SelectedProduct(product);\n     localStorage.setItem(\"selectedProduct\", product);\n     navigate(\"/selectedProduct\");\n   };\n \n   const hanldleProductHid = () => {\n     setSelectedProduct(null);\n   };\n \n   // Toggle the selection state of a product\n   const toggleSelection = (id, currentSelection) => {\n     // Update the product on the server using PATCH\n     fetch(`${api}/updateProducts/${id}`, {\n       method: \"PATCH\",\n       headers: {\n         \"Content-Type\": \"application/json\",\n       },\n       body: JSON.stringify({ isSelected: !currentSelection }),\n     })\n       .then((response) => response.json())\n       .then((updatedProduct) => {\n         // Update the local state to reflect the change\n         setProducts((prevProducts) =>\n           prevProducts.map((product) =>\n             product.id === id ? updatedProduct : product\n           )\n         );\n       })\n       .catch((error) => console.error(\"Error updating product:\", error));\n   };\n \n   // Fetch all products\n   useEffect(() => {\n     const fetchProducts = async () => {\n       const response = await fetch(`${api}/products`);\n       const data = await response.json();\n       setProducts(data);\n     };\n     fetchProducts();\n   }, [api]);\n \n   // Toggle like/dislike with one button\n   const toggleLike = async (product) => {\n     if (!product) return;\n \n     const liked = product.likedBy.some((user) => user.userId === userId);\n     const endpoint = liked ? \"dislike\" : \"like\";\n \n     const response = await fetch(`${api}/products/${product.id}/${endpoint}`, {\n       method: \"PATCH\",\n       headers: { \"Content-Type\": \"application/json\" },\n       body: JSON.stringify({ userId, username }), // Send user info\n     });\n \n     const updatedProduct = await response.json();\n \n     // Update state\n     setProducts(\n       products.map((p) =>\n         p.id === product.id ? { ...p, ...updatedProduct } : p\n       )\n     );\n     setSelectedProduct({ ...product, ...updatedProduct });\n   };\n   // ////////////////////////////////////////////////////////\n \n   const handleMouseEnter = () => {\n     if (buttonRef.current) {\n       buttonRef.current.click();\n     }\n   };\n \n   // ///////////////////////////////////////////////////////////\n \n   const show = (event) => {\n     setShowDetails((prevShow) => !prevShow);\n     if (previewRef.current && !previewRef.current.contains(event.target)) {\n     }\n   };\n \n   // useEffect(() => {\n   //   // Attach event listener to the whole document\n   //   document.addEventListener(\"mousedown\", show);\n   //   return () => {\n   //     document.removeEventListener(\"mousedown\", show);\n   //   };\n   // }, []);\n\n  const styles = {\n    container: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"20px\",\n      background: \"white\",\n      maxWidth: \"96%\", // Prevents full width spread\n      margin: \"auto\", // Centers the whole container\n      padding: \"20px\",\n      marginTop: \"90px\",\n    },\n    box: {\n      width: \"250px\",\n      height: \"250px\",\n     \n    },\n\n    lastBox: {\n      background: \"blue\",\n      \n      // Pushes last box to the left\n    },\n  };\n\n  const mstyles = {\n    Mcontainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"10px\",\n      background: \"white\",\n      maxWidth: \"100%\", // Prevents full width spread\n      margin: \"auto\", // Centers the whole container\n      padding: \"0px\",\n      marginTop: \"200px\",\n    },\n    mbox: {\n      width: \"100px\",\n      height: \"150px\",\n    },\n\n    mlastBox: {\n      background: \"blue\",\n\n      // Pushes last box to the left\n    },\n  };\n\n\n \n  return (\n   <>\n   \n      <React.Fragment >\n               {\n                 <div  style={mstyles.Mcontainer}>\n                   { filteredProducts.length > 0 ? (\n                      filteredProducts.map((product, index) => (\n                       <div>\n                         <BoxContainer\n                         className=\"animated-box\"\n                           key={index}\n                           categoryOption={categoryShadow[product.category]}\n                         >\n                           <div\n                             key={index}\n                             style={{\n                               ...mstyles.mbox,\n     \n                               // justifyContent:\n                               // index === filteredProducts.length - 1 ? \"space-evenly\" : {}, // Apply style only to the last box\n                             }}\n                           >\n                             {product.images.length > 0 ? (\n                               <img\n                                 src={product.images[0]} // Display first image only\n                                 alt={product.name}\n                                 style={{\n                                   width: \"135px\",\n                                   height: \"150px\",\n                                   objectFit: \"cover\",\n                                   borderRadius: \"10px\",\n                                   cursor:\"pointer\"\n                                 }}\n                                 onClick={() => {\n                                  setSelectedProduct(product);\n                                  handleProductClick(product);\n                                  show();\n                                 }}\n                               />\n                             ) : (\n                               <p>{t(\"No Image Available\")}</p>\n                             )}\n                             <button\n                               style={{\n                                 position: \"relative\",\n                                 left: \"105px\",\n                                 top: \"-15px\",\n                                 background: \"none\",\n                                 border: \"none\",\n                                 fontSize: \"35px\",\n                                 color: \"orange\",\n                               }}\n                             >\n                               +\n                             </button>\n                           </div>\n     \n                           {/* text */}\n                           <div style={{ display: \"flex\" }}>\n                             <div\n                               className=\"text\"\n                               style={{\n                                 borderRadius: \"10PX\",\n                                 width: \"100%\",\n                                 height: \"100px\",\n                                 // background:\"red\",\n                                 padding: \"10px\",\n                               }}\n                             >\n                               <Name className=\"name\" fontSize=\"17px\">\n                                 <span\n                                   style={{ color: \"black\" }}\n                                   dangerouslySetInnerHTML={{\n                                     __html: highlightText(product.name, searchTerm),\n                                   }}\n                                 ></span>{\" \"}\n                               </Name>\n     \n                               {/* <DescriptionContainer>\n                              <DescriptionTitle>\n                                {t(\"Description\")}:\n                                <DescriptionContent>\n                                  {product.description}\n                                </DescriptionContent>\n                              </DescriptionTitle>\n                            </DescriptionContainer> */}\n                               <StatusContainer>\n                                 <StatusTitle>\n                                   {t(\"Status\")}:\n                                   <StatusContent>{product.status}</StatusContent>\n                                 </StatusTitle>\n                               </StatusContainer>\n                               <Price key={index}>\n                                 {t(\"CFA\")}: {product.price - product.discount}\n                               </Price>\n                               {product.discount > 0 && (\n                                 <Discount key={index}>\n                                   {t(\"CFA\")}:<s>{product.price}</s>\n                                   <label\n                                     style={{\n                                       width: \"40px\",\n                                       height: \"20px\",\n                                       background: \"#90EE90\",\n                                       textAlign: \"center\",\n                                       borderRadius: \"5px\",\n                                       marginLeft: \"15px\",\n                                     }}\n                                   >\n                                     -\n                                     {(\n                                       (product.discount / product.price) *\n                                       100\n                                     ).toFixed(0)}\n                                     %\n                                   </label>\n                                 </Discount>\n                               )}\n                             </div>\n                           </div>\n     \n                           <div\n                             style={{\n                               background: \"\",\n                               textAlign: \"center\",\n                               padding: \"5px\",\n                             }}\n                           >\n                             <MAddtocartButton\n                               main={product.discount > 0}\n                               width=\"auto\"\n                               onClick={() => dispatch(addToCartAPI(product))}\n                             >\n                               {t(\"Add To Cart\")}\n                             </MAddtocartButton>\n                           </div>\n                         </BoxContainer>\n                       </div>\n                     ))\n                   ) : (\n                     <p>{t(\"Loading...\")}</p>\n                   )}\n     \n                   \n                 </div>\n               }\n     \n               {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n             </React.Fragment>\n   \n   </>\n  );\n}\n\nconst style = {\n  sliderSettings: {\n    dots: true, // Show navigation dots\n    infinite: true, // Enable infinite looping\n    speed: 100, // Transition speed (ms)\n    slidesToShow: 1, // Show one image at a time\n    slidesToScroll: 1, // Scroll one image per action\n    autoplay: true,\n    autoplaySpeed: 3000, // Autoplay speed (ms)\n  },\n  buttonsContainer: {\n    display: \"flex\",\n  },\n  buttons: {\n    color: \"orangered\",\n    background: \"none\",\n    border: \"2px solid orangered\",\n    margin: \"10px\",\n    borderRadius: \"10px\",\n    before: \"+\",\n  },\n};\n\nexport default MobileCategory;\n"
        }
    ]
}