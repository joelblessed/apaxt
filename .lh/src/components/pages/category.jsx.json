{
    "sourceFile": "src/components/pages/category.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 87,
            "patches": [
                {
                    "date": 1738245009901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738245018791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,15 @@\n import React, { useState, useEffect } from \"react\";\n import { useNavigate } from 'react-router-dom';\n \n-function Category({apiaddToCart,searchTerm, highlightText, setSelectedProduct,selectedCategory}) {\n+function Category({api,addToCart,searchTerm, highlightText, setSelectedProduct,selectedCategory}) {\n   const [items, setItems] = useState([]);\n   \n   const [filteredItems, setFilteredItems] = useState([]);\n \n   // Fetch items from db.json (JSON Server)\n   useEffect(() => {\n-    fetch(\"http://localhost:5000/products\")\n+    fetch(`/products\")\n       .then((response) => response.json())\n       .then((data) => {\n         setItems(data); // Store all items\n         setFilteredItems(data); // Set initial filtered items\n"
                },
                {
                    "date": 1738245028560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [filteredItems, setFilteredItems] = useState([]);\n \n   // Fetch items from db.json (JSON Server)\n   useEffect(() => {\n-    fetch(`/products\")\n+    fetch(`${}/products\")\n       .then((response) => response.json())\n       .then((data) => {\n         setItems(data); // Store all items\n         setFilteredItems(data); // Set initial filtered items\n"
                },
                {
                    "date": 1738245039156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   const [filteredItems, setFilteredItems] = useState([]);\n \n   // Fetch items from db.json (JSON Server)\n   useEffect(() => {\n-    fetch(`${}/products\")\n+    fetch(`${api}/products`)\n       .then((response) => response.json())\n       .then((data) => {\n         setItems(data); // Store all items\n         setFilteredItems(data); // Set initial filtered items\n"
                },
                {
                    "date": 1738245059503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         {filteredProducts.map((product) => (\n             <div key={product._id} className='box2'  >\n                        \n             <img className='image'\n-                src={'http://localhost:5000/images/'+product.image}\n+                src={`${api}/images/'+product.image}\n                 alt={product.name}\n                 onClick={() => handleProductClick(product)}\n                \n                 />\n"
                },
                {
                    "date": 1738849469498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,40 +39,9 @@\n   };\n \n   \n   return (\n-    <div>\n-      \n-<h1>cat</h1>\n-      <div style={{ display: 'flex', flexWrap: 'wrap' }} >\n-        {filteredProducts.map((product) => (\n-            <div key={product._id} className='box2'  >\n-                       \n-            <img className='image'\n-                src={`${api}/images/'+product.image}\n-                alt={product.name}\n-                onClick={() => handleProductClick(product)}\n-               \n-                />\n-                 <span className='text'>\n-                    <a  className='name'><span style={{color:\"black\"}} \n-                        dangerouslySetInnerHTML={{\n-                        __html: highlightText(product.name, searchTerm),\n-                               }}\n-                         ></span> </a>\n-                    <a>Description: {product.desc}</a>\n-                    <a>Price: {product.price}</a>\n-                 </span>\n-                 <div className='cart'>\n-                    <button className='btn btn-warning' onClick={() => addToCart(product)} >Add to Cart</button>\n-                    \n-                 </div>\n-                  \n-                 \n-            </div>\n-        ))}\n-      </div>\n-    </div>\n+   \n   );\n }\n \n export default Category\n"
                },
                {
                    "date": 1738849475657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,53 @@\n   };\n \n   \n   return (\n-   \n+   <>\n+    <div style={{  marginTop: \"20px\",display: 'flex', flexWrap: 'wrap' }}>\n+       \n+       {filteredProducts.length > 0 ? (\n+           filteredProducts.map((product) => (\n+               <div key={product.id} style={{ \n+                   border: \"1px solid #ddd\", \n+                   borderRadius: \"8px\", \n+                   maxWidth: \"400px\",\n+                   maxHeight:\"600px\",\n+                   margin: \"15px\"\n+               }}>\n+                   {product.images.length > 0 ? (\n+                       <img\n+                           src={product.images[0]} // Display first image only\n+                           alt={product.name}\n+                           style={{\n+                               width: \"300px\",\n+                               height: \"300px\",\n+                               objectFit: \"cover\",\n+                               borderRadius: \"8px\",\n+                           }}\n+                       />\n+                   ) : (\n+                       <p>No image available</p>\n+                   )}\n+                      <span className='text'>\n+                         <h5  className='name'><span style={{color:\"black\"}} \n+                             dangerouslySetInnerHTML={{\n+                             __html: highlightText(product.name, searchTerm),\n+                                    }}\n+                              ></span> </h5>\n+                         <h5>Description: {product.desc}</h5>\n+                         <h5>Price: {product.price}</h5>\n+                         <div><button>addToCart</button> <button>+wisList</button></div>\n+                      </span>\n+\n+                 \n+               </div>\n+           ))\n+       ) : (\n+           <p>Loading...</p>\n+       )}\n+   </div>\n+         </></>\n   );\n }\n \n export default Category\n"
                },
                {
                    "date": 1738849481242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n        ) : (\n            <p>Loading...</p>\n        )}\n    </div>\n-         </></>\n+         </>\n   );\n }\n \n export default Category\n"
                },
                {
                    "date": 1738867115581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n                                     }}\n                               ></span> </h5>\n                          <h5>Description: {product.desc}</h5>\n                          <h5>Price: {product.price}</h5>\n-                         <div><button>addToCart</button> <button>+wisList</button></div>\n+                         <div><button >addToCart</button> <button>+wisList</button></div>\n                       </span>\n \n                  \n                </div>\n"
                },
                {
                    "date": 1738867958554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from \"react\";\n import { useNavigate } from 'react-router-dom';\n \n-function Category({api,addToCart,searchTerm, highlightText, setSelectedProduct,selectedCategory}) {\n+function Category({api,addToCart,searchTerm, highlightText,addToWishList setSelectedProduct,selectedCategory}) {\n   const [items, setItems] = useState([]);\n   \n   const [filteredItems, setFilteredItems] = useState([]);\n \n@@ -73,9 +73,9 @@\n                                     }}\n                               ></span> </h5>\n                          <h5>Description: {product.desc}</h5>\n                          <h5>Price: {product.price}</h5>\n-                         <div><button >addToCart</button> <button>+wisList</button></div>\n+                         <div><button onClick={() => addToCart(product)}>addToCart</button> <button>+wisList</button></div>\n                       </span>\n \n                  \n                </div>\n"
                },
                {
                    "date": 1738867966528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,18 @@\n import React, { useState, useEffect } from \"react\";\n-import { useNavigate } from 'react-router-dom';\n+import { useNavigate } from \"react-router-dom\";\n \n-function Category({api,addToCart,searchTerm, highlightText,addToWishList setSelectedProduct,selectedCategory}) {\n+function Category({\n+  api,\n+  addToCart,\n+  searchTerm,\n+  highlightText,\n+  addToWishList,\n+  setSelectedProduct,\n+  selectedCategory,\n+}) {\n   const [items, setItems] = useState([]);\n-  \n+\n   const [filteredItems, setFilteredItems] = useState([]);\n \n   // Fetch items from db.json (JSON Server)\n   useEffect(() => {\n@@ -18,75 +26,81 @@\n   }, []);\n \n   // Filter items based on selected category\n   useEffect(() => {\n-    if (selectedCategory === \"All\" ) {\n+    if (selectedCategory === \"All\") {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) )\n-      \n+      setFilteredItems(\n+        items.filter((item) => item.category === selectedCategory)\n+      );\n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n-  const filteredProducts = filteredItems.filter((product) => ( \n-    product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n-  ));\n+  const filteredProducts = filteredItems.filter(\n+    (product) =>\n+      product.category.toLowerCase().includes(searchTerm.toLowerCase()) ||\n+      product.name.toLowerCase().includes(searchTerm.toLowerCase())\n+  );\n \n-const navigate = useNavigate();\n+  const navigate = useNavigate();\n   const handleProductClick = (product) => {\n     setSelectedProduct(product);\n-    navigate(\"/selectedProduct\")\n+    navigate(\"/selectedProduct\");\n   };\n \n-  \n   return (\n-   <>\n-    <div style={{  marginTop: \"20px\",display: 'flex', flexWrap: 'wrap' }}>\n-       \n-       {filteredProducts.length > 0 ? (\n-           filteredProducts.map((product) => (\n-               <div key={product.id} style={{ \n-                   border: \"1px solid #ddd\", \n-                   borderRadius: \"8px\", \n-                   maxWidth: \"400px\",\n-                   maxHeight:\"600px\",\n-                   margin: \"15px\"\n-               }}>\n-                   {product.images.length > 0 ? (\n-                       <img\n-                           src={product.images[0]} // Display first image only\n-                           alt={product.name}\n-                           style={{\n-                               width: \"300px\",\n-                               height: \"300px\",\n-                               objectFit: \"cover\",\n-                               borderRadius: \"8px\",\n-                           }}\n-                       />\n-                   ) : (\n-                       <p>No image available</p>\n-                   )}\n-                      <span className='text'>\n-                         <h5  className='name'><span style={{color:\"black\"}} \n-                             dangerouslySetInnerHTML={{\n-                             __html: highlightText(product.name, searchTerm),\n-                                    }}\n-                              ></span> </h5>\n-                         <h5>Description: {product.desc}</h5>\n-                         <h5>Price: {product.price}</h5>\n-                         <div><button onClick={() => addToCart(product)}>addToCart</button> <button>+wisList</button></div>\n-                      </span>\n-\n-                 \n-               </div>\n\\ No newline at end of file\n-           ))\n-       ) : (\n-           <p>Loading...</p>\n-       )}\n-   </div>\n-         </>\n+    <>\n+      <div style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}>\n+        {filteredProducts.length > 0 ? (\n+          filteredProducts.map((product) => (\n+            <div\n+              key={product.id}\n+              style={{\n+                border: \"1px solid #ddd\",\n+                borderRadius: \"8px\",\n+                maxWidth: \"400px\",\n+                maxHeight: \"600px\",\n+                margin: \"15px\",\n+              }}\n+            >\n+              {product.images.length > 0 ? (\n+                <img\n+                  src={product.images[0]} // Display first image only\n+                  alt={product.name}\n+                  style={{\n+                    width: \"300px\",\n+                    height: \"300px\",\n+                    objectFit: \"cover\",\n+                    borderRadius: \"8px\",\n+                  }}\n+                />\n+              ) : (\n+                <p>No image available</p>\n+              )}\n+              <span className=\"text\">\n+                <h5 className=\"name\">\n+                  <span\n+                    style={{ color: \"black\" }}\n+                    dangerouslySetInnerHTML={{\n+                      __html: highlightText(product.name, searchTerm),\n+                    }}\n+                  ></span>{\" \"}\n+                </h5>\n+                <h5>Description: {product.desc}</h5>\n+                <h5>Price: {product.price}</h5>\n+                <div>\n+                  <button onClick={() => addToCart(product)}>addToCart</button>{\" \"}\n+                  <button>+wisList</button>\n+                </div>\n+              </span>\n+            </div>\n+          ))\n+        ) : (\n+          <p>Loading...</p>\n+        )}\n+      </div>\n+    </>\n   );\n }\n \n-export default Category\n-;\n+export default Category;\n"
                },
                {
                    "date": 1738867976916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,106 @@\n+import React, { useState, useEffect } from \"react\";\n+import { useNavigate } from \"react-router-dom\";\n+\n+function Category({\n+  api,\n+  addToCart,\n+  searchTerm,\n+  highlightText,\n+  addToWishList,\n+  setSelectedProduct,\n+  selectedCategory,\n+}) {\n+  const [items, setItems] = useState([]);\n+\n+  const [filteredItems, setFilteredItems] = useState([]);\n+\n+  // Fetch items from db.json (JSON Server)\n+  useEffect(() => {\n+    fetch(`${api}/products`)\n+      .then((response) => response.json())\n+      .then((data) => {\n+        setItems(data); // Store all items\n+        setFilteredItems(data); // Set initial filtered items\n+      })\n+      .catch((error) => console.error(\"Error fetching data:\", error));\n+  }, []);\n+\n+  // Filter items based on selected category\n+  useEffect(() => {\n+    if (selectedCategory === \"All\") {\n+      setFilteredItems(items);\n+    } else {\n+      setFilteredItems(\n+        items.filter((item) => item.category === selectedCategory)\n+      );\n+    }\n+  }, [selectedCategory, items]); // Re-run filter when category or items change\n+\n+  const filteredProducts = filteredItems.filter(\n+    (product) =>\n+      product.category.toLowerCase().includes(searchTerm.toLowerCase()) ||\n+      product.name.toLowerCase().includes(searchTerm.toLowerCase())\n+  );\n+\n+  const navigate = useNavigate();\n+  const handleProductClick = (product) => {\n+    setSelectedProduct(product);\n+    navigate(\"/selectedProduct\");\n+  };\n+\n+  return (\n+    <>\n+      <div style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}>\n+        {filteredProducts.length > 0 ? (\n+          filteredProducts.map((product) => (\n+            <div\n+              key={product.id}\n+              style={{\n+                border: \"1px solid #ddd\",\n+                borderRadius: \"8px\",\n+                maxWidth: \"400px\",\n+                maxHeight: \"600px\",\n+                margin: \"15px\",\n+              }}\n+            >\n+              {product.images.length > 0 ? (\n+                <img\n+                  src={product.images[0]} // Display first image only\n+                  alt={product.name}\n+                  style={{\n+                    width: \"300px\",\n+                    height: \"300px\",\n+                    objectFit: \"cover\",\n+                    borderRadius: \"8px\",\n+                  }}\n+                />\n+              ) : (\n+                <p>No image available</p>\n+              )}\n+              <span className=\"text\">\n+                <h5 className=\"name\">\n+                  <span\n+                    style={{ color: \"black\" }}\n+                    dangerouslySetInnerHTML={{\n+                      __html: highlightText(product.name, searchTerm),\n+                    }}\n+                  ></span>{\" \"}\n+                </h5>\n+                <h5>Description: {product.desc}</h5>\n+                <h5>Price: {product.price}</h5>\n+                <div>\n+                  <button onClick={() => addToCart(product)}>addToCart</button>{\" \"}\n+                  <button >+wisList</button>\n+                </div>\n+              </span>\n+            </div>\n+          ))\n+        ) : (\n+          <p>Loading...</p>\n+        )}\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default Category;\n"
                },
                {
                    "date": 1738867990346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,10 +88,10 @@\n                 </h5>\n                 <h5>Description: {product.desc}</h5>\n                 <h5>Price: {product.price}</h5>\n                 <div>\n-                  <button onClick={() => addToCart(product)}>addToCart</button>{\" \"}\n-                  <button >+wisList</button>\n+                  <button }>addToCart</button>{\" \"}\n+                  <buttononClick={() => addToCart(product) >+wisList</button>\n                 </div>\n               </span>\n             </div>\n           ))\n@@ -103,110 +103,4 @@\n   );\n }\n \n export default Category;\n-import React, { useState, useEffect } from \"react\";\n-import { useNavigate } from \"react-router-dom\";\n-\n-function Category({\n-  api,\n-  addToCart,\n-  searchTerm,\n-  highlightText,\n-  addToWishList,\n-  setSelectedProduct,\n-  selectedCategory,\n-}) {\n-  const [items, setItems] = useState([]);\n-\n-  const [filteredItems, setFilteredItems] = useState([]);\n-\n-  // Fetch items from db.json (JSON Server)\n-  useEffect(() => {\n-    fetch(`${api}/products`)\n-      .then((response) => response.json())\n-      .then((data) => {\n-        setItems(data); // Store all items\n-        setFilteredItems(data); // Set initial filtered items\n-      })\n-      .catch((error) => console.error(\"Error fetching data:\", error));\n-  }, []);\n-\n-  // Filter items based on selected category\n-  useEffect(() => {\n-    if (selectedCategory === \"All\") {\n-      setFilteredItems(items);\n-    } else {\n-      setFilteredItems(\n-        items.filter((item) => item.category === selectedCategory)\n-      );\n-    }\n-  }, [selectedCategory, items]); // Re-run filter when category or items change\n-\n-  const filteredProducts = filteredItems.filter(\n-    (product) =>\n-      product.category.toLowerCase().includes(searchTerm.toLowerCase()) ||\n-      product.name.toLowerCase().includes(searchTerm.toLowerCase())\n-  );\n-\n-  const navigate = useNavigate();\n-  const handleProductClick = (product) => {\n-    setSelectedProduct(product);\n-    navigate(\"/selectedProduct\");\n-  };\n-\n-  return (\n-    <>\n-      <div style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}>\n-        {filteredProducts.length > 0 ? (\n-          filteredProducts.map((product) => (\n-            <div\n-              key={product.id}\n-              style={{\n-                border: \"1px solid #ddd\",\n-                borderRadius: \"8px\",\n-                maxWidth: \"400px\",\n-                maxHeight: \"600px\",\n-                margin: \"15px\",\n-              }}\n-            >\n-              {product.images.length > 0 ? (\n-                <img\n-                  src={product.images[0]} // Display first image only\n-                  alt={product.name}\n-                  style={{\n-                    width: \"300px\",\n-                    height: \"300px\",\n-                    objectFit: \"cover\",\n-                    borderRadius: \"8px\",\n-                  }}\n-                />\n-              ) : (\n-                <p>No image available</p>\n-              )}\n-              <span className=\"text\">\n-                <h5 className=\"name\">\n-                  <span\n-                    style={{ color: \"black\" }}\n-                    dangerouslySetInnerHTML={{\n-                      __html: highlightText(product.name, searchTerm),\n-                    }}\n-                  ></span>{\" \"}\n-                </h5>\n-                <h5>Description: {product.desc}</h5>\n-                <h5>Price: {product.price}</h5>\n-                <div>\n-                  <button onClick={() => addToCart(product)}>addToCart</button>{\" \"}\n-                  <button>+wisList</button>\n-                </div>\n-              </span>\n-            </div>\n-          ))\n-        ) : (\n-          <p>Loading...</p>\n-        )}\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default Category;\n"
                },
                {
                    "date": 1738867996257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n                 <h5>Description: {product.desc}</h5>\n                 <h5>Price: {product.price}</h5>\n                 <div>\n                   <button }>addToCart</button>{\" \"}\n-                  <buttononClick={() => addToCart(product) >+wisList</button>\n+                  <button} >+wisList</button>\n                 </div>\n               </span>\n             </div>\n           ))\n"
                },
                {
                    "date": 1738868003285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n                 <h5>Description: {product.desc}</h5>\n                 <h5>Price: {product.price}</h5>\n                 <div>\n                   <button }>addToCart</button>{\" \"}\n-                  <button} >+wisList</button>\n+                  <button onClick={() => addToCart(product) >+wisList</button>\n                 </div>\n               </span>\n             </div>\n           ))\n"
                },
                {
                    "date": 1738868015026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n                 </h5>\n                 <h5>Description: {product.desc}</h5>\n                 <h5>Price: {product.price}</h5>\n                 <div>\n-                  <button }>addToCart</button>{\" \"}\n+                  <button onClick={() => addToCart(product)}>addToCart</button>{\" \"}\n                   <button onClick={() => addToCart(product) >+wisList</button>\n                 </div>\n               </span>\n             </div>\n"
                },
                {
                    "date": 1738868022821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n                 <h5>Description: {product.desc}</h5>\n                 <h5>Price: {product.price}</h5>\n                 <div>\n                   <button onClick={() => addToCart(product)}>addToCart</button>{\" \"}\n-                  <button onClick={() => addToCart(product) >+wisList</button>\n+                  <button onClick={() => addTo(product)} >+wisList</button>\n                 </div>\n               </span>\n             </div>\n           ))\n"
                },
                {
                    "date": 1738868839043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n                 borderRadius: \"8px\",\n                 maxWidth: \"400px\",\n                 maxHeight: \"600px\",\n                 margin: \"15px\",\n+                \n               }}\n             >\n               {product.images.length > 0 ? (\n                 <img\n@@ -89,9 +90,9 @@\n                 <h5>Description: {product.desc}</h5>\n                 <h5>Price: {product.price}</h5>\n                 <div>\n                   <button onClick={() => addToCart(product)}>addToCart</button>{\" \"}\n-                  <button onClick={() => addTo(product)} >+wisList</button>\n+                  <button onClick={() => addToWishList(product)} >+wisList</button>\n                 </div>\n               </span>\n             </div>\n           ))\n"
                },
                {
                    "date": 1738868850342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,10 @@\n                 borderRadius: \"8px\",\n                 maxWidth: \"400px\",\n                 maxHeight: \"600px\",\n                 margin: \"15px\",\n-                \n+                onClick={() => handleProductC(product)}\n+               \n               }}\n             >\n               {product.images.length > 0 ? (\n                 <img\n"
                },
                {
                    "date": 1738868856248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n                 borderRadius: \"8px\",\n                 maxWidth: \"400px\",\n                 maxHeight: \"600px\",\n                 margin: \"15px\",\n-                onClick={() => handleProductC(product)}\n+                onClick={() => (product)}\n                \n               }}\n             >\n               {product.images.length > 0 ? (\n"
                },
                {
                    "date": 1738868863029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n                 borderRadius: \"8px\",\n                 maxWidth: \"400px\",\n                 maxHeight: \"600px\",\n                 margin: \"15px\",\n-                onClick={() => (product)}\n+                onClick={() => product(product)}\n                \n               }}\n             >\n               {product.images.length > 0 ? (\n"
                },
                {
                    "date": 1738868883392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   addToCart,\n   searchTerm,\n   highlightText,\n   addToWishList,\n-  setSelectedProduct,\n+  ,\n   selectedCategory,\n }) {\n   const [items, setItems] = useState([]);\n \n@@ -60,9 +60,9 @@\n                 borderRadius: \"8px\",\n                 maxWidth: \"400px\",\n                 maxHeight: \"600px\",\n                 margin: \"15px\",\n-                onClick={() => product(product)}\n+                onClick={() => productPreview(product)}\n                \n               }}\n             >\n               {product.images.length > 0 ? (\n"
                },
                {
                    "date": 1738868888562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   addToCart,\n   searchTerm,\n   highlightText,\n   addToWishList,\n-  ,\n+  produ,\n   selectedCategory,\n }) {\n   const [items, setItems] = useState([]);\n \n"
                },
                {
                    "date": 1738868894282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   addToCart,\n   searchTerm,\n   highlightText,\n   addToWishList,\n-  produ,\n+  productP,\n   selectedCategory,\n }) {\n   const [items, setItems] = useState([]);\n \n"
                },
                {
                    "date": 1738868933790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   addToCart,\n   searchTerm,\n   highlightText,\n   addToWishList,\n-  productP,\n+  productPreview,\n   selectedCategory,\n }) {\n   const [items, setItems] = useState([]);\n \n@@ -60,9 +60,9 @@\n                 borderRadius: \"8px\",\n                 maxWidth: \"400px\",\n                 maxHeight: \"600px\",\n                 margin: \"15px\",\n-                onClick={() => productPreview(product)}\n+                \n                \n               }}\n             >\n               {product.images.length > 0 ? (\n"
                },
                {
                    "date": 1738869519352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,9 @@\n                 margin: \"15px\",\n                 \n                \n               }}\n+              \n             >\n               {product.images.length > 0 ? (\n                 <img\n                   src={product.images[0]} // Display first image only\n"
                },
                {
                    "date": 1738869526153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,8 @@\n                 margin: \"15px\",\n                 \n                \n               }}\n-              \n             >\n               {product.images.length > 0 ? (\n                 <img\n                   src={product.images[0]} // Display first image only\n"
                },
                {
                    "date": 1738869565554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   addToCart,\n   searchTerm,\n   highlightText,\n   addToWishList,\n-  productPreview,\n+  setSelectedProduct,\n   selectedCategory,\n }) {\n   const [items, setItems] = useState([]);\n \n@@ -60,9 +60,9 @@\n                 borderRadius: \"8px\",\n                 maxWidth: \"400px\",\n                 maxHeight: \"600px\",\n                 margin: \"15px\",\n-                \n+                onClick={() => productPreview(product)}\n                \n               }}\n             >\n               {product.images.length > 0 ? (\n"
                },
                {
                    "date": 1738869581868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n                 borderRadius: \"8px\",\n                 maxWidth: \"400px\",\n                 maxHeight: \"600px\",\n                 margin: \"15px\",\n-                onClick={() => productPreview(product)}\n+                onClick={() => product(product)}\n                \n               }}\n             >\n               {product.images.length > 0 ? (\n"
                },
                {
                    "date": 1738869587372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,108 @@\n+import React, { useState, useEffect } from \"react\";\n+import { useNavigate } from \"react-router-dom\";\n+\n+function Category({\n+  api,\n+  addToCart,\n+  searchTerm,\n+  highlightText,\n+  addToWishList,\n+  setSelectedProduct,\n+  selectedCategory,\n+}) {\n+  const [items, setItems] = useState([]);\n+\n+  const [filteredItems, setFilteredItems] = useState([]);\n+\n+  // Fetch items from db.json (JSON Server)\n+  useEffect(() => {\n+    fetch(`${api}/products`)\n+      .then((response) => response.json())\n+      .then((data) => {\n+        setItems(data); // Store all items\n+        setFilteredItems(data); // Set initial filtered items\n+      })\n+      .catch((error) => console.error(\"Error fetching data:\", error));\n+  }, []);\n+\n+  // Filter items based on selected category\n+  useEffect(() => {\n+    if (selectedCategory === \"All\") {\n+      setFilteredItems(items);\n+    } else {\n+      setFilteredItems(\n+        items.filter((item) => item.category === selectedCategory)\n+      );\n+    }\n+  }, [selectedCategory, items]); // Re-run filter when category or items change\n+\n+  const filteredProducts = filteredItems.filter(\n+    (product) =>\n+      product.category.toLowerCase().includes(searchTerm.toLowerCase()) ||\n+      product.name.toLowerCase().includes(searchTerm.toLowerCase())\n+  );\n+\n+  const navigate = useNavigate();\n+  const handleProductClick = (product) => {\n+    setSelectedProduct(product);\n+    navigate(\"/selectedProduct\");\n+  };\n+\n+  return (\n+    <>\n+      <div style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}>\n+        {filteredProducts.length > 0 ? (\n+          filteredProducts.map((product) => (\n+            <div\n+              key={product.id}\n+              style={{\n+                border: \"1px solid #ddd\",\n+                borderRadius: \"8px\",\n+                maxWidth: \"400px\",\n+                maxHeight: \"600px\",\n+                margin: \"15px\",\n+                  onClick={() => handleProductClick(product)}\n+               \n+              }}\n+            >\n+              {product.images.length > 0 ? (\n+                <img\n+                  src={product.images[0]} // Display first image only\n+                  alt={product.name}\n+                  style={{\n+                    width: \"300px\",\n+                    height: \"300px\",\n+                    objectFit: \"cover\",\n+                    borderRadius: \"8px\",\n+                  }}\n+                />\n+              ) : (\n+                <p>No image available</p>\n+              )}\n+              <span className=\"text\">\n+                <h5 className=\"name\">\n+                  <span\n+                    style={{ color: \"black\" }}\n+                    dangerouslySetInnerHTML={{\n+                      __html: highlightText(product.name, searchTerm),\n+                    }}\n+                  ></span>{\" \"}\n+                </h5>\n+                <h5>Description: {product.desc}</h5>\n+                <h5>Price: {product.price}</h5>\n+                <div>\n+                  <button onClick={() => addToCart(product)}>addToCart</button>{\" \"}\n+                  <button onClick={() => addToWishList(product)} >+wisList</button>\n+                </div>\n+              </span>\n+            </div>\n+          ))\n+        ) : (\n+          <p>Loading...</p>\n+        )}\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default Category;\n"
                },
                {
                    "date": 1738869597675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,10 +60,8 @@\n                 borderRadius: \"8px\",\n                 maxWidth: \"400px\",\n                 maxHeight: \"600px\",\n                 margin: \"15px\",\n-                  onClick={() => handleProductClick(product)}\n-               \n               }}\n             >\n               {product.images.length > 0 ? (\n                 <img\n@@ -105,112 +103,4 @@\n   );\n }\n \n export default Category;\n-import React, { useState, useEffect } from \"react\";\n-import { useNavigate } from \"react-router-dom\";\n-\n-function Category({\n-  api,\n-  addToCart,\n-  searchTerm,\n-  highlightText,\n-  addToWishList,\n-  setSelectedProduct,\n-  selectedCategory,\n-}) {\n-  const [items, setItems] = useState([]);\n-\n-  const [filteredItems, setFilteredItems] = useState([]);\n-\n-  // Fetch items from db.json (JSON Server)\n-  useEffect(() => {\n-    fetch(`${api}/products`)\n-      .then((response) => response.json())\n-      .then((data) => {\n-        setItems(data); // Store all items\n-        setFilteredItems(data); // Set initial filtered items\n-      })\n-      .catch((error) => console.error(\"Error fetching data:\", error));\n-  }, []);\n-\n-  // Filter items based on selected category\n-  useEffect(() => {\n-    if (selectedCategory === \"All\") {\n-      setFilteredItems(items);\n-    } else {\n-      setFilteredItems(\n-        items.filter((item) => item.category === selectedCategory)\n-      );\n-    }\n-  }, [selectedCategory, items]); // Re-run filter when category or items change\n-\n-  const filteredProducts = filteredItems.filter(\n-    (product) =>\n-      product.category.toLowerCase().includes(searchTerm.toLowerCase()) ||\n-      product.name.toLowerCase().includes(searchTerm.toLowerCase())\n-  );\n-\n-  const navigate = useNavigate();\n-  const handleProductClick = (product) => {\n-    setSelectedProduct(product);\n-    navigate(\"/selectedProduct\");\n-  };\n-\n-  return (\n-    <>\n-      <div style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}>\n-        {filteredProducts.length > 0 ? (\n-          filteredProducts.map((product) => (\n-            <div\n-              key={product.id}\n-              style={{\n-                border: \"1px solid #ddd\",\n-                borderRadius: \"8px\",\n-                maxWidth: \"400px\",\n-                maxHeight: \"600px\",\n-                margin: \"15px\",\n-                onClick={() => product(product)}\n-               \n-              }}\n-            >\n-              {product.images.length > 0 ? (\n-                <img\n-                  src={product.images[0]} // Display first image only\n-                  alt={product.name}\n-                  style={{\n-                    width: \"300px\",\n-                    height: \"300px\",\n-                    objectFit: \"cover\",\n-                    borderRadius: \"8px\",\n-                  }}\n-                />\n-              ) : (\n-                <p>No image available</p>\n-              )}\n-              <span className=\"text\">\n-                <h5 className=\"name\">\n-                  <span\n-                    style={{ color: \"black\" }}\n-                    dangerouslySetInnerHTML={{\n-                      __html: highlightText(product.name, searchTerm),\n-                    }}\n-                  ></span>{\" \"}\n-                </h5>\n-                <h5>Description: {product.desc}</h5>\n-                <h5>Price: {product.price}</h5>\n-                <div>\n-                  <button onClick={() => addToCart(product)}>addToCart</button>{\" \"}\n-                  <button onClick={() => addToWishList(product)} >+wisList</button>\n-                </div>\n-              </span>\n-            </div>\n-          ))\n-        ) : (\n-          <p>Loading...</p>\n-        )}\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default Category;\n"
                },
                {
                    "date": 1738869608134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,10 @@\n                 borderRadius: \"8px\",\n                 maxWidth: \"400px\",\n                 maxHeight: \"600px\",\n                 margin: \"15px\",\n+                 \n+               \n               }}\n             >\n               {product.images.length > 0 ? (\n                 <img\n"
                },
                {
                    "date": 1738869761400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,9 @@\n                 margin: \"15px\",\n                  \n                \n               }}\n+             \n             >\n               {product.images.length > 0 ? (\n                 <img\n                   src={product.images[0]} // Display first image only\n"
                },
                {
                    "date": 1738869768466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,8 +75,9 @@\n                     height: \"300px\",\n                     objectFit: \"cover\",\n                     borderRadius: \"8px\",\n                   }}\n+                  onClick={() => handleProductClick(product)}\n                 />\n               ) : (\n                 <p>No image available</p>\n               )}\n"
                },
                {
                    "date": 1738882389766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   setSelectedProduct,\n   selectedCategory,\n }) {\n   const [items, setItems] = useState([]);\n-\n+  const [products, setProducts] = useState([]);\n   const [filteredItems, setFilteredItems] = useState([]);\n \n   // Fetch items from db.json (JSON Server)\n   useEffect(() => {\n"
                },
                {
                    "date": 1738882408632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   setSelectedProduct,\n   selectedCategory,\n }) {\n   const [items, setItems] = useState([]);\n-  const [products, setProducts] = useState([]);\n+\n   const [filteredItems, setFilteredItems] = useState([]);\n \n   // Fetch items from db.json (JSON Server)\n   useEffect(() => {\n"
                },
                {
                    "date": 1738947839426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,63 +48,9 @@\n     navigate(\"/selectedProduct\");\n   };\n \n   return (\n-    <>\n-      <div style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}>\n-        {filteredProducts.length > 0 ? (\n-          filteredProducts.map((product) => (\n-            <div\n-              key={product.id}\n-              style={{\n-                border: \"1px solid #ddd\",\n-                borderRadius: \"8px\",\n-                maxWidth: \"400px\",\n-                maxHeight: \"600px\",\n-                margin: \"15px\",\n-                 \n-               \n-              }}\n-             \n-            >\n-              {product.images.length > 0 ? (\n-                <img\n-                  src={product.images[0]} // Display first image only\n-                  alt={product.name}\n-                  style={{\n-                    width: \"300px\",\n-                    height: \"300px\",\n-                    objectFit: \"cover\",\n-                    borderRadius: \"8px\",\n-                  }}\n-                  onClick={() => handleProductClick(product)}\n-                />\n-              ) : (\n-                <p>No image available</p>\n-              )}\n-              <span className=\"text\">\n-                <h5 className=\"name\">\n-                  <span\n-                    style={{ color: \"black\" }}\n-                    dangerouslySetInnerHTML={{\n-                      __html: highlightText(product.name, searchTerm),\n-                    }}\n-                  ></span>{\" \"}\n-                </h5>\n-                <h5>Description: {product.desc}</h5>\n-                <h5>Price: {product.price}</h5>\n-                <div>\n-                  <button onClick={() => addToCart(product)}>addToCart</button>{\" \"}\n-                  <button onClick={() => addToWishList(product)} >+wisList</button>\n-                </div>\n-              </span>\n-            </div>\n-          ))\n-        ) : (\n-          <p>Loading...</p>\n-        )}\n-      </div>\n-    </>\n+ \n   );\n }\n \n export default Category;\n"
                },
                {
                    "date": 1738947846095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,109 @@\n     navigate(\"/selectedProduct\");\n   };\n \n   return (\n- \n+ <>\n+ <>\n+      <div\n+        className=\"\"\n+        style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}\n+      >\n+        {filteredProducts.length > 0 ? (\n+          filteredProducts.map((product) => (\n+            <div\n+              key={product.id}\n+              style={{\n+                border: \"1px solid red\",\n+                borderRadius: \"10px\",\n+                maxWidth: \"400px\",\n+                maxHeight: \"600px\",\n+                margin: \"15px\",\n+              }}\n+            >\n+              {product.images.length > 0 ? (\n+                <img\n+                  src={product.images[0]} // Display first image only\n+                  alt={product.name}\n+                  style={{\n+                    width: \"300px\",\n+                    height: \"300px\",\n+                    objectFit: \"cover\",\n+                    borderRadius: \"10px\",\n+                  }}\n+                  // onClick={() => handleProductClick(product)}\n+\n+                  onClick={() =>\n+                    toggleSelection(\n+                      product.id,\n+                      product.isSelected,\n+                      navigate(\"/selectedProduct\")\n+                    )\n+                  }\n+                />\n+              ) : (\n+                <p>No image available</p>\n+              )}\n+              <span\n+                className=\"text\"\n+                style={{\n+                  background:\n+                    \" linear-gradient(-45deg,RED 33%, #feb47b 33%, #86a8e7 66%, #91eae4 66%)\",\n+                    borderRadius:\"10PX\"\n+                }}\n+              >\n+                <h5 className=\"name\">\n+                  <span\n+                    style={{ color: \"black\" }}\n+                    dangerouslySetInnerHTML={{\n+                      __html: highlightText(product.name, searchTerm),\n+                    }}\n+                  ></span>{\" \"}\n+                </h5>\n+                <h5>Description: {product.desc}</h5>\n+                <h5>\n+                  Price: {product.price}{\" \"}\n+                  <button  style={{\n+                      background: \"transparent\",\n+                      border: \"1px solid orange\",\n+                      color: \"orange\",\n+                      padding: \"0px 20px\",\n+                      borderRadius: \"10px 10px 10px 10px \",\n+                      cursor: \"pointer\",\n+                      fontSize: \"40px\",\n+                      fontWeight:\"bold\",\n+                      transition: \"all 0.3s ease\",\n+                      marginLeft:\"140px\"\n+                      \n+                    }} onClick={() => addToCart(product)}>+</button>\n+                </h5>\n+                <div style={{ background: \"\" }}>\n+                  <button\n+                    style={{\n+                      background: \"white\",\n+                      border: \"1px solid RED\",\n+                      color: \"red\",\n+                      padding: \"10px 20px\",\n+                      borderRadius: \"0px 0px 10px 10px \",\n+                      cursor: \"pointer\",\n+                      fontSize: \"100%\",\n+                      transition: \"all 0.3s ease\",\n+                      width: \"100%\",\n+                    }}\n+                    onClick={() => addToCart(product)}\n+                  >\n+                    addToCart\n+                  </button>\n+                </div>\n+              </span>\n+            </div>\n+          ))\n+        ) : (\n+          <p>Loading...</p>\n+        )}\n+      </div>\n+      {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n+    </></>\n   );\n }\n \n export default Category;\n"
                },
                {
                    "date": 1738947860568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n   };\n \n   return (\n  <>\n- <>\n+ \n       <div\n         className=\"\"\n         style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}\n       >\n@@ -148,9 +148,9 @@\n           <p>Loading...</p>\n         )}\n       </div>\n       {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n-    </></>\n+    </>\n   );\n }\n \n export default Category;\n"
                },
                {
                    "date": 1738947920064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,30 @@\n     setSelectedProduct(product);\n     navigate(\"/selectedProduct\");\n   };\n \n+   // Toggle the selection state of a product\n+   const toggleSelection = (id, currentSelection) => {\n+    // Update the product on the server using PATCH\n+    fetch(`${api}/updateProducts/${id}`, {\n+      method: \"PATCH\",\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+      },\n+      body: JSON.stringify({ isSelected: !currentSelection }),\n+    })\n+      .then((response) => response.json())\n+      .then((updatedProduct) => {\n+        // Update the local state to reflect the change\n+        setProducts((prevProducts) =>\n+          prevProducts.map((product) =>\n+            product.id === id ? updatedProduct : product\n+          )\n+        );\n+      })\n+      .catch((error) => console.error(\"Error updating product:\", error));\n+  };\n+\n   return (\n  <>\n  \n       <div\n"
                },
                {
                    "date": 1738948008762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n   setSelectedProduct,\n   selectedCategory,\n }) {\n   const [items, setItems] = useState([]);\n+  const [product, setProduct] = useState(null);\n \n   const [filteredItems, setFilteredItems] = useState([]);\n \n   // Fetch items from db.json (JSON Server)\n"
                },
                {
                    "date": 1738948229978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   setSelectedProduct,\n   selectedCategory,\n }) {\n   const [items, setItems] = useState([]);\n-  const [product, setProduct] = useState(null);\n+  const [product, setProductS] = useState(null);\n \n   const [filteredItems, setFilteredItems] = useState([]);\n \n   // Fetch items from db.json (JSON Server)\n"
                },
                {
                    "date": 1739216071433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   setSelectedProduct,\n   selectedCategory,\n }) {\n   const [items, setItems] = useState([]);\n-  const [product, setProductS] = useState(null);\n+  const [product, setProducts] = useState(null);\n \n   const [filteredItems, setFilteredItems] = useState([]);\n \n   // Fetch items from db.json (JSON Server)\n@@ -101,15 +101,15 @@\n                     borderRadius: \"10px\",\n                   }}\n                   // onClick={() => handleProductClick(product)}\n \n-                  onClick={() =>\n-                    toggleSelection(\n-                      product.id,\n-                      product.isSelected,\n-                      navigate(\"/selectedProduct\")\n-                    )\n-                  }\n+                  // onClick={() =>\n+                  //   toggleSelection(\n+                  //     product.id,\n+                  //     product.isSelected,\n+                  //     navigate(\"/selectedProduct\")\n+                  //   )\n+                  // }\n                 />\n               ) : (\n                 <p>No image available</p>\n               )}\n"
                },
                {
                    "date": 1739216164501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n                     height: \"300px\",\n                     objectFit: \"cover\",\n                     borderRadius: \"10px\",\n                   }}\n-                  // onClick={() => handleProductClick(product)}\n+                  onClick={() => handleProductClick(product)}\n \n                   // onClick={() =>\n                   //   toggleSelection(\n                   //     product.id,\n@@ -143,9 +143,9 @@\n                       fontWeight:\"bold\",\n                       transition: \"all 0.3s ease\",\n                       marginLeft:\"140px\"\n                       \n-                    }} onClick={() => addToCart(product)}>+</button>\n+                    }} onClick={() => addTo(product)}>+</button>\n                 </h5>\n                 <div style={{ background: \"\" }}>\n                   <button\n                     style={{\n"
                },
                {
                    "date": 1739409796729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,8 +87,9 @@\n                 borderRadius: \"10px\",\n                 maxWidth: \"400px\",\n                 maxHeight: \"600px\",\n                 margin: \"15px\",\n+                \n               }}\n             >\n               {product.images.length > 0 ? (\n                 <img\n@@ -143,9 +144,9 @@\n                       fontWeight:\"bold\",\n                       transition: \"all 0.3s ease\",\n                       marginLeft:\"140px\"\n                       \n-                    }} onClick={() => addTo(product)}>+</button>\n+                    }} onClick={() => addToWishList(product)}>+</button>\n                 </h5>\n                 <div style={{ background: \"\" }}>\n                   <button\n                     style={{\n"
                },
                {
                    "date": 1739409871021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n import { useNavigate } from \"react-router-dom\";\n+import \"./products.css\";\n \n function Category({\n   api,\n   addToCart,\n@@ -87,9 +88,9 @@\n                 borderRadius: \"10px\",\n                 maxWidth: \"400px\",\n                 maxHeight: \"600px\",\n                 margin: \"15px\",\n-                \n+                marginTop:\"80px\",\n               }}\n             >\n               {product.images.length > 0 ? (\n                 <img\n"
                },
                {
                    "date": 1739409893723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n   return (\n  <>\n  \n       <div\n-        className=\"\"\n+        className=\"b\"\n         style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}\n       >\n         {filteredProducts.length > 0 ? (\n           filteredProducts.map((product) => (\n"
                },
                {
                    "date": 1739409909285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,14 +75,14 @@\n   return (\n  <>\n  \n       <div\n-        className=\"b\"\n+        className=\"box1\"\n         style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}\n       >\n         {filteredProducts.length > 0 ? (\n           filteredProducts.map((product) => (\n-            <div\n+            <div cla\n               key={product.id}\n               style={{\n                 border: \"1px solid red\",\n                 borderRadius: \"10px\",\n"
                },
                {
                    "date": 1739432628304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,16 @@\n       })\n       .catch((error) => console.error(\"Error updating product:\", error));\n   };\n \n+\n+  const styles = {\n+\n+    lastBox: {\n+      marginLeft: \"auto\", // Pushes last box to the left\n+    },\n+  };\n+\n   return (\n  <>\n  \n       <div\n@@ -80,9 +88,9 @@\n         style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}\n       >\n         {filteredProducts.length > 0 ? (\n           filteredProducts.map((product) => (\n-            <div cla\n+            <div className=\"box2\"\n               key={product.id}\n               style={{\n                 border: \"1px solid red\",\n                 borderRadius: \"10px\",\n"
                },
                {
                    "date": 1739432737745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,14 +91,10 @@\n           filteredProducts.map((product) => (\n             <div className=\"box2\"\n               key={product.id}\n               style={{\n-                border: \"1px solid red\",\n-                borderRadius: \"10px\",\n-                maxWidth: \"400px\",\n-                maxHeight: \"600px\",\n-                margin: \"15px\",\n-                marginTop:\"80px\",\n+                ...styles.box,\n+                ...(index === product.length - 1 ? styles.lastBox : {}), // Apply style only to the last box\n               }}\n             >\n               {product.images.length > 0 ? (\n                 <img\n"
                },
                {
                    "date": 1739432775012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n         className=\"box1\"\n         style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}\n       >\n         {filteredProducts.length > 0 ? (\n-          filteredProducts.map((product) => (\n+          filteredProducts.map((product, index) => (\n             <div className=\"box2\"\n               key={product.id}\n               style={{\n                 ...styles.box,\n"
                },
                {
                    "date": 1739432783858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n       >\n         {filteredProducts.length > 0 ? (\n           filteredProducts.map((product, index) => (\n             <div className=\"box2\"\n-              key={product.id}\n+              key={index}\n               style={{\n                 ...styles.box,\n                 ...(index === product.length - 1 ? styles.lastBox : {}), // Apply style only to the last box\n               }}\n"
                },
                {
                    "date": 1739432972118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n   return (\n  <>\n  \n       <div\n-        className=\"box1\"\n+        className=\"\n         style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}\n       >\n         {filteredProducts.length > 0 ? (\n           filteredProducts.map((product, index) => (\n"
                },
                {
                    "date": 1739432978452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n   return (\n  <>\n  \n       <div\n-        className=\"\n+        className=\"container\"\n         style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}\n       >\n         {filteredProducts.length > 0 ? (\n           filteredProducts.map((product, index) => (\n"
                },
                {
                    "date": 1739433045404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n  <>\n  \n       <div\n         className=\"container\"\n-        style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}\n+        style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\", gap }}\n       >\n         {filteredProducts.length > 0 ? (\n           filteredProducts.map((product, index) => (\n             <div className=\"box2\"\n"
                },
                {
                    "date": 1739433075664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n  <>\n  \n       <div\n         className=\"container\"\n-        style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\", gap }}\n+        style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\", gap:\"20px\"  }}\n       >\n         {filteredProducts.length > 0 ? (\n           filteredProducts.map((product, index) => (\n             <div className=\"box2\"\n"
                },
                {
                    "date": 1739433081728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n  <>\n  \n       <div\n         className=\"container\"\n-        style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\", gap:\"20px\"  }}\n+        style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\", gap:\"20px\" marginTo }}\n       >\n         {filteredProducts.length > 0 ? (\n           filteredProducts.map((product, index) => (\n             <div className=\"box2\"\n"
                },
                {
                    "date": 1739433087505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n  <>\n  \n       <div\n         className=\"container\"\n-        style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\", gap:\"20px\" marginTo }}\n+        style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\", gap:\"20px\" marginTop:\"80px\" }}\n       >\n         {filteredProducts.length > 0 ? (\n           filteredProducts.map((product, index) => (\n             <div className=\"box2\"\n"
                },
                {
                    "date": 1739433104277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n  <>\n  \n       <div\n         className=\"container\"\n-        style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\", gap:\"20px\" marginTop:\"80px\" }}\n+        style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\", gap:\"20px\", marginTop:\"90px\" }}\n       >\n         {filteredProducts.length > 0 ? (\n           filteredProducts.map((product, index) => (\n             <div className=\"box2\"\n"
                },
                {
                    "date": 1739455275286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,185 +0,0 @@\n-import React, { useState, useEffect } from \"react\";\n-import { useNavigate } from \"react-router-dom\";\n-import \"./products.css\";\n-\n-function Category({\n-  api,\n-  addToCart,\n-  searchTerm,\n-  highlightText,\n-  addToWishList,\n-  setSelectedProduct,\n-  selectedCategory,\n-}) {\n-  const [items, setItems] = useState([]);\n-  const [product, setProducts] = useState(null);\n-\n-  const [filteredItems, setFilteredItems] = useState([]);\n-\n-  // Fetch items from db.json (JSON Server)\n-  useEffect(() => {\n-    fetch(`${api}/products`)\n-      .then((response) => response.json())\n-      .then((data) => {\n-        setItems(data); // Store all items\n-        setFilteredItems(data); // Set initial filtered items\n-      })\n-      .catch((error) => console.error(\"Error fetching data:\", error));\n-  }, []);\n-\n-  // Filter items based on selected category\n-  useEffect(() => {\n-    if (selectedCategory === \"All\") {\n-      setFilteredItems(items);\n-    } else {\n-      setFilteredItems(\n-        items.filter((item) => item.category === selectedCategory)\n-      );\n-    }\n-  }, [selectedCategory, items]); // Re-run filter when category or items change\n-\n-  const filteredProducts = filteredItems.filter(\n-    (product) =>\n-      product.category.toLowerCase().includes(searchTerm.toLowerCase()) ||\n-      product.name.toLowerCase().includes(searchTerm.toLowerCase())\n-  );\n-\n-  const navigate = useNavigate();\n-  const handleProductClick = (product) => {\n-    setSelectedProduct(product);\n-    navigate(\"/selectedProduct\");\n-  };\n-\n-   // Toggle the selection state of a product\n-   const toggleSelection = (id, currentSelection) => {\n-    // Update the product on the server using PATCH\n-    fetch(`${api}/updateProducts/${id}`, {\n-      method: \"PATCH\",\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-      },\n-      body: JSON.stringify({ isSelected: !currentSelection }),\n-    })\n-      .then((response) => response.json())\n-      .then((updatedProduct) => {\n-        // Update the local state to reflect the change\n-        setProducts((prevProducts) =>\n-          prevProducts.map((product) =>\n-            product.id === id ? updatedProduct : product\n-          )\n-        );\n-      })\n-      .catch((error) => console.error(\"Error updating product:\", error));\n-  };\n-\n-\n-  const styles = {\n-\n-    lastBox: {\n-      marginLeft: \"auto\", // Pushes last box to the left\n-    },\n-  };\n-\n-  return (\n- <>\n- \n-      <div\n-        className=\"container\"\n-        style={{ marginTop: \"20px\", display: \"flex\", flexWrap: \"wrap\", gap:\"20px\", marginTop:\"90px\" }}\n-      >\n-        {filteredProducts.length > 0 ? (\n-          filteredProducts.map((product, index) => (\n-            <div className=\"box2\"\n-              key={index}\n-              style={{\n-                ...styles.box,\n-                ...(index === product.length - 1 ? styles.lastBox : {}), // Apply style only to the last box\n-              }}\n-            >\n-              {product.images.length > 0 ? (\n-                <img\n-                  src={product.images[0]} // Display first image only\n-                  alt={product.name}\n-                  style={{\n-                    width: \"300px\",\n-                    height: \"300px\",\n-                    objectFit: \"cover\",\n-                    borderRadius: \"10px\",\n-                  }}\n-                  onClick={() => handleProductClick(product)}\n-\n-                  // onClick={() =>\n-                  //   toggleSelection(\n-                  //     product.id,\n-                  //     product.isSelected,\n-                  //     navigate(\"/selectedProduct\")\n-                  //   )\n-                  // }\n-                />\n-              ) : (\n-                <p>No image available</p>\n-              )}\n-              <span\n-                className=\"text\"\n-                style={{\n-                  background:\n-                    \" linear-gradient(-45deg,RED 33%, #feb47b 33%, #86a8e7 66%, #91eae4 66%)\",\n-                    borderRadius:\"10PX\"\n-                }}\n-              >\n-                <h5 className=\"name\">\n-                  <span\n-                    style={{ color: \"black\" }}\n-                    dangerouslySetInnerHTML={{\n-                      __html: highlightText(product.name, searchTerm),\n-                    }}\n-                  ></span>{\" \"}\n-                </h5>\n-                <h5>Description: {product.desc}</h5>\n-                <h5>\n-                  Price: {product.price}{\" \"}\n-                  <button  style={{\n-                      background: \"transparent\",\n-                      border: \"1px solid orange\",\n-                      color: \"orange\",\n-                      padding: \"0px 20px\",\n-                      borderRadius: \"10px 10px 10px 10px \",\n-                      cursor: \"pointer\",\n-                      fontSize: \"40px\",\n-                      fontWeight:\"bold\",\n-                      transition: \"all 0.3s ease\",\n-                      marginLeft:\"140px\"\n-                      \n-                    }} onClick={() => addToWishList(product)}>+</button>\n-                </h5>\n-                <div style={{ background: \"\" }}>\n-                  <button\n-                    style={{\n-                      background: \"white\",\n-                      border: \"1px solid RED\",\n-                      color: \"red\",\n-                      padding: \"10px 20px\",\n-                      borderRadius: \"0px 0px 10px 10px \",\n-                      cursor: \"pointer\",\n-                      fontSize: \"100%\",\n-                      transition: \"all 0.3s ease\",\n-                      width: \"100%\",\n-                    }}\n-                    onClick={() => addToCart(product)}\n-                  >\n-                    addToCart\n-                  </button>\n-                </div>\n-              </span>\n-            </div>\n-          ))\n-        ) : (\n-          <p>Loading...</p>\n-        )}\n-      </div>\n-      {/* {product.isSelected ? \"Unselect\" : \"Select\"} */}\n-    </>\n-  );\n-}\n-\n-export default Category;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739455307579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,71 @@\n+import React from \"react\";\n \n+const products = [\n+  { id: 1, name: \"Laptop\", category: \"Electronics\" },\n+  { id: 2, name: \"Phone\", category: \"Electronics\" },\n+  { id: 3, name: \"T-shirt\", category: \"Clothing\" },\n+  { id: 4, name: \"Jeans\", category: \"Clothing\" },\n+  { id: 5, name: \"Headphones\", category: \"Electronics\" },\n+  { id: 6, name: \"Sneakers\", category: \"Footwear\" },\n+];\n+\n+// Group products by category\n+const groupByCategory = (products) => {\n+  return products.reduce((acc, product) => {\n+    if (!acc[product.category]) {\n+      acc[product.category] = [];\n+    }\n+    acc[product.category].push(product);\n+    return acc;\n+  }, {});\n+};\n+\n+const ProductsByCategory = () => {\n+  const groupedProducts = groupByCategory(products);\n+\n+  return (\n+    <div style={styles.container}>\n+      {Object.keys(groupedProducts).map((category, index) => (\n+        <div key={index} style={styles.categoryContainer}>\n+          <h2 style={styles.categoryTitle}>{category}</h2>\n+          <div style={styles.productsGrid}>\n+            {groupedProducts[category].map((product) => (\n+              <div key={product.id} style={styles.productBox}>\n+                {product.name}\n+              </div>\n+            ))}\n+          </div>\n+        </div>\n+      ))}\n+    </div>\n+  );\n+};\n+\n+const styles = {\n+  container: {\n+    width: \"80%\",\n+    margin: \"auto\",\n+  },\n+  categoryContainer: {\n+    marginBottom: \"20px\",\n+  },\n+  categoryTitle: {\n+    color: \"teal\",\n+  },\n+  productsGrid: {\n+    display: \"flex\",\n+    flexWrap: \"wrap\",\n+    gap: \"10px\",\n+  },\n+  productBox: {\n+    width: \"120px\",\n+    height: \"120px\",\n+    backgroundColor: \"lightgray\",\n+    display: \"flex\",\n+    justifyContent: \"center\",\n+    alignItems: \"center\",\n+    borderRadius: \"8px\",\n+  },\n+};\n+\n+export default ProductsByCategory;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739455354807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     return acc;\n   }, {});\n };\n \n-const ProductsByCategory = () => {\n+const  = () => {\n   const groupedProducts = groupByCategory(products);\n \n   return (\n     <div style={styles.container}>\n@@ -67,5 +67,5 @@\n     borderRadius: \"8px\",\n   },\n };\n \n-export default ProductsByCategory;\n\\ No newline at end of file\n+export default ;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739455360562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     return acc;\n   }, {});\n };\n \n-const  = () => {\n+const Category = () => {\n   const groupedProducts = groupByCategory(products);\n \n   return (\n     <div style={styles.container}>\n@@ -67,5 +67,5 @@\n     borderRadius: \"8px\",\n   },\n };\n \n-export default ;\n\\ No newline at end of file\n+export default Category;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739455428867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,8 @@\n import React from \"react\";\n \n-const products = [\n-  { id: 1, name: \"Laptop\", category: \"Electronics\" },\n-  { id: 2, name: \"Phone\", category: \"Electronics\" },\n-  { id: 3, name: \"T-shirt\", category: \"Clothing\" },\n-  { id: 4, name: \"Jeans\", category: \"Clothing\" },\n-  { id: 5, name: \"Headphones\", category: \"Electronics\" },\n-  { id: 6, name: \"Sneakers\", category: \"Footwear\" },\n-];\n \n+\n // Group products by category\n const groupByCategory = (products) => {\n   return products.reduce((acc, product) => {\n     if (!acc[product.category]) {\n"
                },
                {
                    "date": 1739455435828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \n \n \n // Group products by category\n-const groupByCategory = (products) => {\n+const groupByCategory = ({}) => {\n   return products.reduce((acc, product) => {\n     if (!acc[product.category]) {\n       acc[product.category] = [];\n     }\n"
                },
                {
                    "date": 1739455488829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,10 @@\n \n \n \n // Group products by category\n-const groupByCategory = ({}) => {\n+const groupByCategory = ({filteredProducts}) => {\n+  \n   return products.reduce((acc, product) => {\n     if (!acc[product.category]) {\n       acc[product.category] = [];\n     }\n"
                },
                {
                    "date": 1739455505251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,9 @@\n \n \n \n // Group products by category\n-const groupByCategory = ({filteredProducts}) => {\n-  \n+const groupByCategory = (products) => {\n   return products.reduce((acc, product) => {\n     if (!acc[product.category]) {\n       acc[product.category] = [];\n     }\n"
                },
                {
                    "date": 1739455511741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     return acc;\n   }, {});\n };\n \n-const Category = () => {\n+const Category = ({filteredProducts}) => {\n   const groupedProducts = groupByCategory(products);\n \n   return (\n     <div style={styles.container}>\n"
                },
                {
                    "date": 1739455540270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,10 @@\n import React from \"react\";\n \n \n \n-// Group products by category\n-const groupByCategory = (products) => {\n-  return products.reduce((acc, product) => {\n-    if (!acc[product.category]) {\n-      acc[product.category] = [];\n-    }\n-    acc[product.category].push(product);\n-    return acc;\n-  }, {});\n-};\n \n+\n const Category = ({filteredProducts}) => {\n   const groupedProducts = groupByCategory(products);\n \n   return (\n"
                },
                {
                    "date": 1739455572288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,21 @@\n \n \n \n const Category = ({filteredProducts}) => {\n-  const groupedProducts = groupByCategory(products);\n+  const groupedProducts = groupByCategory();\n \n+  // Group products by category\n+const groupByCategory = (products) => {\n+  return products.reduce((acc, product) => {\n+    if (!acc[product.category]) {\n+      acc[product.category] = [];\n+    }\n+    acc[product.category].push(product);\n+    return acc;\n+  }, {});\n+};\n+\n   return (\n     <div style={styles.container}>\n       {Object.keys(groupedProducts).map((category, index) => (\n         <div key={index} style={styles.categoryContainer}>\n"
                },
                {
                    "date": 1739455585855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n \n \n const Category = ({filteredProducts}) => {\n-  const groupedProducts = groupByCategory();\n+  const groupedProducts = groupByCategory(filteredProducts);\n \n   // Group products by category\n const groupByCategory = (products) => {\n   return products.reduce((acc, product) => {\n"
                },
                {
                    "date": 1739455601647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,20 +4,11 @@\n \n \n \n const Category = ({filteredProducts}) => {\n-  const groupedProducts = groupByCategory(filteredProducts);\n+  const groupedProducts = groupByCategory(products);\n \n-  // Group products by category\n-const groupByCategory = (products) => {\n-  return products.reduce((acc, product) => {\n-    if (!acc[product.category]) {\n-      acc[product.category] = [];\n-    }\n-    acc[product.category].push(product);\n-    return acc;\n-  }, {});\n-};\n+  \n \n   return (\n     <div style={styles.container}>\n       {Object.keys(groupedProducts).map((category, index) => (\n"
                },
                {
                    "date": 1739455609029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,18 @@\n \n const Category = ({filteredProducts}) => {\n   const groupedProducts = groupByCategory(products);\n \n-  \n+  // Group products by category\n+const groupByCategory = (products) => {\n+  return products.reduce((acc, product) => {\n+    if (!acc[product.category]) {\n+      acc[product.category] = [];\n+    }\n+    acc[product.category].push(product);\n+    return acc;\n+  }, {});\n+};\n \n   return (\n     <div style={styles.container}>\n       {Object.keys(groupedProducts).map((category, index) => (\n"
                },
                {
                    "date": 1739456610672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,66 +1,73 @@\n-import React from \"react\";\n+import React, { useState, useEffect } from \"react\";\n+import { Link } from \"react-router-dom\";\n \n+const ProductsByCategory = () => {\n+  const [products, setProducts] = useState([]);\n \n+  useEffect(() => {\n+    fetch(\"http://localhost:5000/products\")\n+      .then((res) => res.json())\n+      .then((data) => setProducts(data))\n+      .catch((error) => console.error(\"Error fetching products:\", error));\n+  }, []);\n \n+  const groupByCategory = (products) => {\n+    return products.reduce((acc, product) => {\n+      if (!acc[product.category]) acc[product.category] = [];\n+      acc[product.category].push(product);\n+      return acc;\n+    }, {});\n+  };\n \n-\n-const Category = ({filteredProducts}) => {\n   const groupedProducts = groupByCategory(products);\n \n-  // Group products by category\n-const groupByCategory = (products) => {\n-  return products.reduce((acc, product) => {\n-    if (!acc[product.category]) {\n-      acc[product.category] = [];\n-    }\n-    acc[product.category].push(product);\n-    return acc;\n-  }, {});\n-};\n-\n   return (\n     <div style={styles.container}>\n       {Object.keys(groupedProducts).map((category, index) => (\n         <div key={index} style={styles.categoryContainer}>\n           <h2 style={styles.categoryTitle}>{category}</h2>\n           <div style={styles.productsGrid}>\n-            {groupedProducts[category].map((product) => (\n+            {groupedProducts[category].slice(0, 3).map((product) => (\n               <div key={product.id} style={styles.productBox}>\n-                {product.name}\n+                <img src={product.image} alt={product.name} style={styles.image} />\n+                <p>{product.name}</p>\n               </div>\n             ))}\n           </div>\n+          <Link to={/category/${category}} style={styles.viewMoreButton}>\n+            View More\n+          </Link>\n         </div>\n       ))}\n     </div>\n   );\n };\n \n const styles = {\n-  container: {\n-    width: \"80%\",\n-    margin: \"auto\",\n-  },\n\\ No newline at end of file\n-  categoryContainer: {\n-    marginBottom: \"20px\",\n-  },\n-  categoryTitle: {\n-    color: \"teal\",\n-  },\n-  productsGrid: {\n-    display: \"flex\",\n-    flexWrap: \"wrap\",\n-    gap: \"10px\",\n-  },\n+  container: { width: \"80%\", margin: \"auto\" },\n+  categoryContainer: { marginBottom: \"20px\" },\n+  categoryTitle: { color: \"teal\" },\n+  productsGrid: { display: \"flex\", flexWrap: \"wrap\", gap: \"10px\" },\n   productBox: {\n     width: \"120px\",\n-    height: \"120px\",\n+    height: \"150px\",\n     backgroundColor: \"lightgray\",\n     display: \"flex\",\n+    flexDirection: \"column\",\n     justifyContent: \"center\",\n     alignItems: \"center\",\n     borderRadius: \"8px\",\n   },\n+  image: { width: \"80px\", height: \"80px\", objectFit: \"cover\" },\n+  viewMoreButton: {\n+    display: \"inline-block\",\n+    marginTop: \"10px\",\n+    padding: \"8px 15px\",\n+    backgroundColor: \"teal\",\n+    color: \"white\",\n+    textDecoration: \"none\",\n+    borderRadius: \"5px\",\n+  },\n };\n \n-export default Category;\n+export default ProductsByCategory;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739456628833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from \"react\";\n import { Link } from \"react-router-dom\";\n \n-const ProductsByCategory = () => {\n+const Category = () => {\n   const [products, setProducts] = useState([]);\n \n   useEffect(() => {\n     fetch(\"http://localhost:5000/products\")\n@@ -69,5 +69,5 @@\n     borderRadius: \"5px\",\n   },\n };\n \n-export default ProductsByCategory;\n\\ No newline at end of file\n+export default Category;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739456693735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n                 <p>{product.name}</p>\n               </div>\n             ))}\n           </div>\n-          <Link to={/category/${category}} style={styles.viewMoreButton}>\n+          <Link to={`/category/${category}} style={styles.viewMoreButton}>\n             View More\n           </Link>\n         </div>\n       ))}\n"
                },
                {
                    "date": 1739457055806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n                 <p>{product.name}</p>\n               </div>\n             ))}\n           </div>\n-          <Link to={`/category/${category}} style={styles.viewMoreButton}>\n+          <Link to={`/categoryP/${category}`} style={styles.viewMoreButton}>\n             View More\n           </Link>\n         </div>\n       ))}\n"
                },
                {
                    "date": 1739457061755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n                 <p>{product.name}</p>\n               </div>\n             ))}\n           </div>\n-          <Link to={`/categoryP/${category}`} style={styles.viewMoreButton}>\n+          <Link to={`/categoryPage/${category}`} style={styles.viewMoreButton}>\n             View More\n           </Link>\n         </div>\n       ))}\n"
                },
                {
                    "date": 1739457783118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n                 <p>{product.name}</p>\n               </div>\n             ))}\n           </div>\n-          <Link to={`/categoryPage/${category}`} style={styles.viewMoreButton}>\n+          <Link to={`/category/${category}`} style={styles.viewMoreButton}>\n             View More\n           </Link>\n         </div>\n       ))}\n"
                },
                {
                    "date": 1739458246212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,22 +3,22 @@\n \n const Category = () => {\n   const [products, setProducts] = useState([]);\n \n-  useEffect(() => {\n-    fetch(\"http://localhost:5000/products\")\n-      .then((res) => res.json())\n-      .then((data) => setProducts(data))\n-      .catch((error) => console.error(\"Error fetching products:\", error));\n-  }, []);\n+  // useEffect(() => {\n+  //   fetch(\"http://localhost:5000/products\")\n+  //     .then((res) => res.json())\n+  //     .then((data) => setProducts(data))\n+  //     .catch((error) => console.error(\"Error fetching products:\", error));\n+  // }, []);\n \n-  const groupByCategory = (products) => {\n-    return products.reduce((acc, product) => {\n-      if (!acc[product.category]) acc[product.category] = [];\n-      acc[product.category].push(product);\n-      return acc;\n-    }, {});\n-  };\n+  // const groupByCategory = (products) => {\n+  //   return products.reduce((acc, product) => {\n+  //     if (!acc[product.category]) acc[product.category] = [];\n+  //     acc[product.category].push(product);\n+  //     return acc;\n+  //   }, {});\n+  // };\n \n   const groupedProducts = groupByCategory(products);\n \n   return (\n"
                },
                {
                    "date": 1739458251389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from \"react\";\n import { Link } from \"react-router-dom\";\n \n-const Category = () => {\n+const Category = ({}) => {\n   const [products, setProducts] = useState([]);\n \n   // useEffect(() => {\n   //   fetch(\"http://localhost:5000/products\")\n"
                },
                {
                    "date": 1739458257643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from \"react\";\n import { Link } from \"react-router-dom\";\n \n-const Category = ({}) => {\n+const Category = ({filtered}) => {\n   const [products, setProducts] = useState([]);\n \n   // useEffect(() => {\n   //   fetch(\"http://localhost:5000/products\")\n"
                },
                {
                    "date": 1739458264651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from \"react\";\n import { Link } from \"react-router-dom\";\n \n-const Category = ({filtered}) => {\n-  const [products, setProducts] = useState([]);\n+const Category = ({filteredProduct}) => {\n+  const [products, setProducts] = useState();\n \n   // useEffect(() => {\n   //   fetch(\"http://localhost:5000/products\")\n   //     .then((res) => res.json())\n"
                },
                {
                    "date": 1739458270666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from \"react\";\n import { Link } from \"react-router-dom\";\n \n const Category = ({filteredProduct}) => {\n-  const [products, setProducts] = useState();\n+  const [products, setProducts] = useState(filteredProduct);\n \n   // useEffect(() => {\n   //   fetch(\"http://localhost:5000/products\")\n   //     .then((res) => res.json())\n"
                },
                {
                    "date": 1739458282549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,15 +10,15 @@\n   //     .then((data) => setProducts(data))\n   //     .catch((error) => console.error(\"Error fetching products:\", error));\n   // }, []);\n \n-  // const groupByCategory = (products) => {\n-  //   return products.reduce((acc, product) => {\n-  //     if (!acc[product.category]) acc[product.category] = [];\n-  //     acc[product.category].push(product);\n-  //     return acc;\n-  //   }, {});\n-  // };\n+  const groupByCategory = (products) => {\n+    return products.reduce((acc, product) => {\n+      if (!acc[product.category]) acc[product.category] = [];\n+      acc[product.category].push(product);\n+      return acc;\n+    }, {});\n+  };\n \n   const groupedProducts = groupByCategory(products);\n \n   return (\n"
                },
                {
                    "date": 1739458339231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from \"react\";\n import { Link } from \"react-router-dom\";\n \n-const Category = ({filteredProduct}) => {\n+const Category = ({ft}) => {\n   const [products, setProducts] = useState(filteredProduct);\n \n   // useEffect(() => {\n   //   fetch(\"http://localhost:5000/products\")\n"
                },
                {
                    "date": 1739458358814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from \"react\";\n import { Link } from \"react-router-dom\";\n \n const Category = ({filteredProducts}) => {\n-  const [products, setProducts] = useState();\n+  const [products, setProducts] = useState(filteredProducts);\n \n   // useEffect(() => {\n   //   fetch(\"http://localhost:5000/products\")\n   //     .then((res) => res.json())\n"
                },
                {
                    "date": 1739459089603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from \"react\";\n import { Link } from \"react-router-dom\";\n \n-const Category = ({filteredProducts}) => {\n+const Category = ({}) => {\n   const [products, setProducts] = useState(filteredProduct);\n \n   // useEffect(() => {\n   //   fetch(\"http://localhost:5000/products\")\n"
                }
            ],
            "date": 1738245009901,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction Category({apiaddToCart,searchTerm, highlightText, setSelectedProduct,selectedCategory}) {\n  const [items, setItems] = useState([]);\n  \n  const [filteredItems, setFilteredItems] = useState([]);\n\n  // Fetch items from db.json (JSON Server)\n  useEffect(() => {\n    fetch(\"http://localhost:5000/products\")\n      .then((response) => response.json())\n      .then((data) => {\n        setItems(data); // Store all items\n        setFilteredItems(data); // Set initial filtered items\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  // Filter items based on selected category\n  useEffect(() => {\n    if (selectedCategory === \"All\" ) {\n      setFilteredItems(items);\n    } else {\n      setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) )\n      \n    }\n  }, [selectedCategory, items]); // Re-run filter when category or items change\n\n  const filteredProducts = filteredItems.filter((product) => ( \n    product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n  ));\n\nconst navigate = useNavigate();\n  const handleProductClick = (product) => {\n    setSelectedProduct(product);\n    navigate(\"/selectedProduct\")\n  };\n\n  \n  return (\n    <div>\n      \n<h1>cat</h1>\n      <div style={{ display: 'flex', flexWrap: 'wrap' }} >\n        {filteredProducts.map((product) => (\n            <div key={product._id} className='box2'  >\n                       \n            <img className='image'\n                src={'http://localhost:5000/images/'+product.image}\n                alt={product.name}\n                onClick={() => handleProductClick(product)}\n               \n                />\n                 <span className='text'>\n                    <a  className='name'><span style={{color:\"black\"}} \n                        dangerouslySetInnerHTML={{\n                        __html: highlightText(product.name, searchTerm),\n                               }}\n                         ></span> </a>\n                    <a>Description: {product.desc}</a>\n                    <a>Price: {product.price}</a>\n                 </span>\n                 <div className='cart'>\n                    <button className='btn btn-warning' onClick={() => addToCart(product)} >Add to Cart</button>\n                    \n                 </div>\n                  \n                 \n            </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Category\n;"
        }
    ]
}