{
    "sourceFile": "src/components/others/like.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1742495245059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742495262072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { useState, useEffect } from \"react\";\n \n-const Test = ({ api }) => {\n+const Likes = ({ api }) => {\n   const [likes, setLikes] = useState(0);\n   const [liked, setLiked] = useState(false); // Track if the user liked the product\n   const productId = 34354;\n \n@@ -37,5 +37,5 @@\n     </div>\n   );\n };\n \n-export default Test;\n\\ No newline at end of file\n+export default Likes;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742541715772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,73 @@\n import { useState, useEffect } from \"react\";\n \n-const Likes = ({ api }) => {\n-  const [likes, setLikes] = useState(0);\n-  const [liked, setLiked] = useState(false); // Track if the user liked the product\n-  const productId = 34354;\n+const Test = ({ api }) => {\n+  const [products, setProducts] = useState([]);\n+  const [selectedProduct, setSelectedProduct] = useState(null);\n+  const userId = localStorage.getItem(\"userId\");\n+  const username = localStorage.getItem(\"username\");\n \n-  // Fetch the current likes from the backend\n+  // Fetch all products\n   useEffect(() => {\n-    const fetchLikes = async () => {\n-      const response = await fetch(`${api}/products/${productId}`);\n-      const product = await response.json();\n-      setLikes(product.likes);\n+    const fetchProducts = async () => {\n+      const response = await fetch(`${api}/products`);\n+      const data = await response.json();\n+      setProducts(data);\n     };\n \n-    fetchLikes();\n-  }, [api, productId]);\n+    fetchProducts();\n+  }, [api]);\n \n-  // Toggle like/dislike\n-  const toggleLike = async () => {\n-    const endpoint = liked ? \"dislike\" : \"like\"; // Choose API endpoint\n-    const response = await fetch(`${api}/products/${productId}/${endpoint}`, {\n+  // Toggle like/dislike with one button\n+  const toggleLike = async (product) => {\n+    if (!product) return;\n+\n+    const liked = product.likedBy.some((user) => user.userId === userId);\n+    const endpoint = liked ? \"dislike\" : \"like\";\n+\n\\ No newline at end of file\n+    const response = await fetch(`${api}/products/${product.id}/${endpoint}`, {\n       method: \"PATCH\",\n       headers: { \"Content-Type\": \"application/json\" },\n+      body: JSON.stringify({ userId, username }), // Send user info\n     });\n \n-    const data = await response.json();\n-    setLikes(data.likes);\n-    setLiked(!liked); // Toggle liked state\n+    const updatedProduct = await response.json();\n+\n+    // Update state\n+    setProducts(\n+      products.map((p) =>\n+        p.id === product.id ? { ...p, ...updatedProduct } : p\n+      )\n+    );\n+    setSelectedProduct({ ...product, ...updatedProduct });\n   };\n \n   return (\n     <div>\n-      <button onClick={toggleLike}>\n-        {liked ? \"Dislike 💔\" : \"Like ❤️\"} {likes}\n-      </button>\n+      <h2>Products</h2>\n+      <ul>\n+        {products.map((product) => (\n+          <li key={product.id}>\n+            <button onClick={() => setSelectedProduct(product)}>\n+              {product.name} (Likes: {product.likes})\n+            </button>\n+          </li>\n+        ))}\n+      </ul>\n+\n+      {selectedProduct && (\n+        <div>\n+          <h3>\n+            {selectedProduct.name} (Likes: {selectedProduct.likes})\n+          </h3>\n+          <button onClick={() => toggleLike(selectedProduct)}>\n+            {selectedProduct.likedBy.some((user) => user.userId === userId)\n+              ? \"❤️ Liked\"\n+              : \"🤍 Like\"}\n+          </button>\n+        </div>\n+      )}\n     </div>\n   );\n };\n \n-export default Likes;\n+export default Test;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1742495245059,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from \"react\";\n\nconst Test = ({ api }) => {\n  const [likes, setLikes] = useState(0);\n  const [liked, setLiked] = useState(false); // Track if the user liked the product\n  const productId = 34354;\n\n  // Fetch the current likes from the backend\n  useEffect(() => {\n    const fetchLikes = async () => {\n      const response = await fetch(`${api}/products/${productId}`);\n      const product = await response.json();\n      setLikes(product.likes);\n    };\n\n    fetchLikes();\n  }, [api, productId]);\n\n  // Toggle like/dislike\n  const toggleLike = async () => {\n    const endpoint = liked ? \"dislike\" : \"like\"; // Choose API endpoint\n    const response = await fetch(`${api}/products/${productId}/${endpoint}`, {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const data = await response.json();\n    setLikes(data.likes);\n    setLiked(!liked); // Toggle liked state\n  };\n\n  return (\n    <div>\n      <button onClick={toggleLike}>\n        {liked ? \"Dislike 💔\" : \"Like ❤️\"} {likes}\n      </button>\n    </div>\n  );\n};\n\nexport default Test;"
        }
    ]
}