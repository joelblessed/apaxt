{
    "sourceFile": "src/components/category.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 55,
            "patches": [
                {
                    "date": 1736935428412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736935433769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n   \n   return (\n     <div>\n       \n-<\n+<h1>cat</h1>\n       <div style={{ display: 'flex', flexWrap: 'wrap' }} >\n         {filteredItems.map((product) => (\n             <div key={product._id} className='box2'  >\n                        \n"
                },
                {
                    "date": 1736937007856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n                 onClick={() => handleProductClick(product)}\n                \n                 />\n                  <span className='text'>\n-                    <a  className='name'><span style={{color:\"black\"}} \n+                    <a  className='name'><span style={{color:\"red\"}} \n                         dangerouslySetInnerHTML={{\n                         __html: highlightText(product.name, searchTerm),\n                                }}\n                          ></span> </a>\n"
                },
                {
                    "date": 1736937027839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n                 onClick={() => handleProductClick(product)}\n                \n                 />\n                  <span className='text'>\n-                    <a  className='name'><span style={{color:\"red\"}} \n+                    <a  className='name'><span style={{color:\"\"}} \n                         dangerouslySetInnerHTML={{\n                         __html: highlightText(product.name, searchTerm),\n                                }}\n                          ></span> </a>\n"
                },
                {
                    "date": 1736940533054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n       setFilteredItems(items.filter((item) => item.category === selectedCategory));\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n+  \n \n   \n   return (\n     <div>\n@@ -41,9 +42,9 @@\n                 onClick={() => handleProductClick(product)}\n                \n                 />\n                  <span className='text'>\n-                    <a  className='name'><span style={{color:\"\"}} \n+                    <a  className='name'><span style={{color:\"black\"}} \n                         dangerouslySetInnerHTML={{\n                         __html: highlightText(product.name, searchTerm),\n                                }}\n                          ></span> </a>\n"
                },
                {
                    "date": 1736940553201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n \n-function Category({addToCart,searchTerm, highlightText, handleProductClick,selectedCategory}) {\n+function Category({addToCart,searchTerm, highlightText, ,selectedCategory}) {\n   const [items, setItems] = useState([]);\n   \n   const [filteredItems, setFilteredItems] = useState([]);\n \n@@ -24,10 +24,14 @@\n       setFilteredItems(items.filter((item) => item.category === selectedCategory));\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n-  \n \n+  const handleProductClick = (product) => {\n+    setSelectedProduct(product);\n+    navigate(\"/selectedProduct\")\n+  };\n+\n   \n   return (\n     <div>\n       \n"
                },
                {
                    "date": 1736940558613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n \n-function Category({addToCart,searchTerm, highlightText, ,selectedCategory}) {\n+function Category({addToCart,searchTerm, highlightText, setSelectedProduct,selectedCategory}) {\n   const [items, setItems] = useState([]);\n   \n   const [filteredItems, setFilteredItems] = useState([]);\n \n"
                },
                {
                    "date": 1736940607075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n \n+\n function Category({addToCart,searchTerm, highlightText, setSelectedProduct,selectedCategory}) {\n   const [items, setItems] = useState([]);\n   \n   const [filteredItems, setFilteredItems] = useState([]);\n"
                },
                {
                    "date": 1736940629322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n+import { useNavigate } from 'react-router-dom';\n \n-\n function Category({addToCart,searchTerm, highlightText, setSelectedProduct,selectedCategory}) {\n   const [items, setItems] = useState([]);\n   \n   const [filteredItems, setFilteredItems] = useState([]);\n@@ -25,8 +25,9 @@\n       setFilteredItems(items.filter((item) => item.category === selectedCategory));\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n+  \n \n   const handleProductClick = (product) => {\n     setSelectedProduct(product);\n     navigate(\"/selectedProduct\")\n"
                },
                {
                    "date": 1736941707867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,14 +21,14 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) => item.category === selectedCategory));\n+      setFilteredItems(items.filter((item) => item.category === selectedCategory)) \n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n-  \n \n+const navigate = useNavigate();\n   const handleProductClick = (product) => {\n     setSelectedProduct(product);\n     navigate(\"/selectedProduct\")\n   };\n"
                },
                {
                    "date": 1736941714441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,13 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) => item.category === selectedCategory)) \n+      setFilteredItems(items.filter((item) => item.category === selectedCategory)) ||\n+      const filteredProducts = products.filter((product) => ( \n+        product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n+        product.name .toLowerCase().includes(searchTerm.toLowerCase())\n+      ));\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n"
                },
                {
                    "date": 1736941724183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n       setFilteredItems(items.filter((item) => item.category === selectedCategory)) ||\n-      const filteredProducts = products.filter((product) => ( \n+      \n         product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n         product.name .toLowerCase().includes(searchTerm.toLowerCase())\n       ));\n       \n"
                },
                {
                    "date": 1736941753623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n       setFilteredItems(items.filter((item) => item.category === selectedCategory)) ||\n-      \n+      const filteredProducts = products.filter((product) => ( \n         product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n         product.name .toLowerCase().includes(searchTerm.toLowerCase())\n       ));\n       \n"
                },
                {
                    "date": 1736941788907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n       setFilteredItems(items.filter((item) => item.category === selectedCategory)) ||\n-      const filteredProducts = products.filter((product) => ( \n+      \n         product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n         product.name .toLowerCase().includes(searchTerm.toLowerCase())\n       ));\n       \n"
                },
                {
                    "date": 1736941794736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) => item.category === selectedCategory)) ||\n+      setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) ||\n       \n         product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n         product.name .toLowerCase().includes(searchTerm.toLowerCase())\n       ));\n"
                },
                {
                    "date": 1736941800140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     } else {\n       setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) ||\n       \n         product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-        product.name .toLowerCase().includes(searchTerm.toLowerCase())\n+        product.name .toLowerCase().includes(searchTerm.toLowerCase()))\n       ));\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n"
                },
                {
                    "date": 1736941821587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,10 +24,10 @@\n     } else {\n       setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) ||\n       \n         product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-        product.name .toLowerCase().includes(searchTerm.toLowerCase()))\n-      ));\n+        product.name .toLowerCase().includes(searchTerm.toLowerCase())\n+      )));\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n"
                },
                {
                    "date": 1736941839686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,14 +21,14 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) ||\n+      setFilteredItems(items.filter((item) => item.category === selectedCategory)) ||\n+        const filteredProducts = products.filter((product) => ( \n+    product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n+    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n+  ));\n       \n-        product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-        product.name .toLowerCase().includes(searchTerm.toLowerCase())\n-      )));\n-      \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n const navigate = useNavigate();\n"
                },
                {
                    "date": 1736941848625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n     product.name .toLowerCase().includes(searchTerm.toLowerCase())\n   ));\n       \n-    }\n+  }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n const navigate = useNavigate();\n   const handleProductClick = (product) => {\n"
                },
                {
                    "date": 1736941868196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,15 +21,14 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) => item.category === selectedCategory)) ||\n+      setFilteredItems(items.filter((item) => (item.category === selectedCategory)) ||\n         const filteredProducts = products.filter((product) => ( \n     product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n     product.name .toLowerCase().includes(searchTerm.toLowerCase())\n   ));\n-      \n-  }\n+    }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n const navigate = useNavigate();\n   const handleProductClick = (product) => {\n"
                },
                {
                    "date": 1736941873700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     } else {\n       setFilteredItems(items.filter((item) => (item.category === selectedCategory)) ||\n         const filteredProducts = products.filter((product) => ( \n     product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n+    product.name .toLowerCase().includes(searchTerm.toLowerCase()))\n   ));\n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n"
                },
                {
                    "date": 1736941887498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,12 +21,12 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) => (item.category === selectedCategory)) ||\n+      setFilteredItems(items.filter((item) => item.category === selectedCategory)) ||\n         const filteredProducts = products.filter((product) => ( \n     product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-    product.name .toLowerCase().includes(searchTerm.toLowerCase()))\n+    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n   ));\n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n"
                },
                {
                    "date": 1736941900352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,13 @@\n   ));\n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n+  const filteredProducts = products.filter((product) => ( \n+    product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n+    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n+  ));\n+\n const navigate = useNavigate();\n   const handleProductClick = (product) => {\n     setSelectedProduct(product);\n     navigate(\"/selectedProduct\")\n"
                },
                {
                    "date": 1736941920202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) => item.category === selectedCategory)) ||\n+      setFilteredItems(items.filter((item) => (item.category === selectedCategory)) ||\n         const filteredProducts = products.filter((product) => ( \n     product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n     product.name .toLowerCase().includes(searchTerm.toLowerCase())\n   ));\n"
                },
                {
                    "date": 1736941943585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     } else {\n       setFilteredItems(items.filter((item) => (item.category === selectedCategory)) ||\n         const filteredProducts = products.filter((product) => ( \n     product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n+    product.name .toLowerCase().includes(searchTerm.toLowerCase()))\n   ));\n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n"
                },
                {
                    "date": 1736941956073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n       setFilteredItems(items.filter((item) => (item.category === selectedCategory)) ||\n-        const filteredProducts = products.filter((product) => ( \n+      \n     product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n     product.name .toLowerCase().includes(searchTerm.toLowerCase()))\n   ));\n     }\n"
                },
                {
                    "date": 1736942021894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,21 +21,13 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) => (item.category === selectedCategory)) ||\n+      setFilteredItems(items.filter((item) => item.category === selectedCategory)) ||\n       \n-    product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-    product.name .toLowerCase().includes(searchTerm.toLowerCase()))\n-  ));\n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n-  const filteredProducts = products.filter((product) => ( \n-    product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n-  ));\n-\n const navigate = useNavigate();\n   const handleProductClick = (product) => {\n     setSelectedProduct(product);\n     navigate(\"/selectedProduct\")\n"
                },
                {
                    "date": 1736942033702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) => item.category === selectedCategory)) ||\n+      setFilteredItems(items.filter((item) =>() item.category === selectedCategory)) ||\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n"
                },
                {
                    "date": 1736942047058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) =>() item.category === selectedCategory)) ||\n+      setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) )||\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n"
                },
                {
                    "date": 1736942052685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) )||\n+      setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) )\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n"
                },
                {
                    "date": 1736942132571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+import React, { useState, useEffect } from \"react\";\n+import { useNavigate } from 'react-router-dom';\n+\n+function Category({addToCart,searchTerm, highlightText, setSelectedProduct,selectedCategory}) {\n+  const [items, setItems] = useState([]);\n+  \n+  const [filteredItems, setFilteredItems] = useState([]);\n+\n+  // Fetch items from db.json (JSON Server)\n+  useEffect(() => {\n+    fetch(\"http://localhost:5000/products\")\n+      .then((response) => response.json())\n+      .then((data) => {\n+        setItems(data); // Store all items\n+        setFilteredItems(data); // Set initial filtered items\n+      })\n+      .catch((error) => console.error(\"Error fetching data:\", error));\n+  }, []);\n+\n+  // Filter items based on selected category\n+  useEffect(() => {\n+    if (selectedCategory === \"All\" ) {\n+      setFilteredItems(items);\n+    } else {\n+      setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) )\n+      \n+    }\n+  }, [selectedCategory, items]); // Re-run filter when category or items change\n+\n+  \n+\n+const navigate = useNavigate();\n+  const handleProductClick = (product) => {\n+    setSelectedProduct(product);\n+    navigate(\"/selectedProduct\")\n+  };\n+\n+  \n+  return (\n+    <div>\n+      \n+<h1>cat</h1>\n+      <div style={{ display: 'flex', flexWrap: 'wrap' }} >\n+        {filteredItems.map((product) => (\n+            <div key={product._id} className='box2'  >\n+                       \n+            <img className='image'\n+                src={'http://localhost:5000/images/'+product.image}\n+                alt={product.name}\n+                onClick={() => handleProductClick(product)}\n+               \n+                />\n+                 <span className='text'>\n+                    <a  className='name'><span style={{color:\"black\"}} \n+                        dangerouslySetInnerHTML={{\n+                        __html: highlightText(product.name, searchTerm),\n+                               }}\n+                         ></span> </a>\n+                    <a>Description: {product.desc}</a>\n+                    <a>Price: {product.price}</a>\n+                 </span>\n+                 <div className='cart'>\n+                    <button className='btn btn-warning' onClick={() => addToCart(product)} >Add to Cart</button>\n+                    \n+                 </div>\n+                  \n+                 \n+            </div>\n+        ))}\n+      </div>\n+    </div>\n+  );\n+}\n+\n+export default Category\n+;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736942161897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,14 +21,19 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) )\n+      setFilteredItems(items.filter((item) =>( item.category === selectedCategory\n+        \n+      )) )\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n-  \n+  const filteredProducts = products.filter((product) => ( \n+    product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n+    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n+  ));\n \n const navigate = useNavigate();\n   const handleProductClick = (product) => {\n     setSelectedProduct(product);\n@@ -72,79 +77,5 @@\n   );\n }\n \n export default Category\n-;\n-import React, { useState, useEffect } from \"react\";\n-import { useNavigate } from 'react-router-dom';\n-\n-function Category({addToCart,searchTerm, highlightText, setSelectedProduct,selectedCategory}) {\n-  const [items, setItems] = useState([]);\n-  \n-  const [filteredItems, setFilteredItems] = useState([]);\n-\n-  // Fetch items from db.json (JSON Server)\n-  useEffect(() => {\n-    fetch(\"http://localhost:5000/products\")\n-      .then((response) => response.json())\n-      .then((data) => {\n-        setItems(data); // Store all items\n-        setFilteredItems(data); // Set initial filtered items\n-      })\n-      .catch((error) => console.error(\"Error fetching data:\", error));\n-  }, []);\n-\n-  // Filter items based on selected category\n-  useEffect(() => {\n-    if (selectedCategory === \"All\" ) {\n-      setFilteredItems(items);\n-    } else {\n-      setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) )\n-      \n-    }\n-  }, [selectedCategory, items]); // Re-run filter when category or items change\n-\n-const navigate = useNavigate();\n-  const handleProductClick = (product) => {\n-    setSelectedProduct(product);\n-    navigate(\"/selectedProduct\")\n-  };\n-\n-  \n-  return (\n-    <div>\n-      \n-<h1>cat</h1>\n-      <div style={{ display: 'flex', flexWrap: 'wrap' }} >\n-        {filteredItems.map((product) => (\n-            <div key={product._id} className='box2'  >\n-                       \n-            <img className='image'\n-                src={'http://localhost:5000/images/'+product.image}\n-                alt={product.name}\n-                onClick={() => handleProductClick(product)}\n-               \n-                />\n-                 <span className='text'>\n-                    <a  className='name'><span style={{color:\"black\"}} \n-                        dangerouslySetInnerHTML={{\n-                        __html: highlightText(product.name, searchTerm),\n-                               }}\n-                         ></span> </a>\n-                    <a>Description: {product.desc}</a>\n-                    <a>Price: {product.price}</a>\n-                 </span>\n-                 <div className='cart'>\n-                    <button className='btn btn-warning' onClick={() => addToCart(product)} >Add to Cart</button>\n-                    \n-                 </div>\n-                  \n-                 \n-            </div>\n-        ))}\n-      </div>\n-    </div>\n-  );\n-}\n-\n-export default Category\n ;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736942183825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,10 @@\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n       setFilteredItems(items.filter((item) =>( item.category === selectedCategory\n-        \n+        product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n+    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n       )) )\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n"
                },
                {
                    "date": 1736942192951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) =>( item.category === selectedCategory\n+      setFilteredItems(items.filter((item) =>( item.category === selectedCategory \n         product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n     product.name .toLowerCase().includes(searchTerm.toLowerCase())\n       )) )\n       \n"
                },
                {
                    "date": 1736942208523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,10 +21,10 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) =>( item.category === selectedCategory \n-        product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n+      setFilteredItems(items.filter((item) =>( item.category === selectedCategory ||\n+        .category.toLowerCase().includes(searchTerm.toLowerCase())||\n     product.name .toLowerCase().includes(searchTerm.toLowerCase())\n       )) )\n       \n     }\n"
                },
                {
                    "date": 1736942220990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n       setFilteredItems(items.filter((item) =>( item.category === selectedCategory ||\n-        .category.toLowerCase().includes(searchTerm.toLowerCase())||\n-    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n+        item.category.toLowerCase().includes(searchTerm.toLowerCase())||\n+    item.name .toLowerCase().includes(searchTerm.toLowerCase())\n       )) )\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n"
                },
                {
                    "date": 1736942237322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n       setFilteredItems(items);\n     } else {\n       setFilteredItems(items.filter((item) =>( item.category === selectedCategory ||\n         item.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-    item.name .toLowerCase().includes(searchTerm.toLowerCase())\n+        item.name .toLowerCase().includes(searchTerm.toLowerCase())\n       )) )\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n"
                },
                {
                    "date": 1736942249826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,13 +29,10 @@\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n-  const filteredProducts = products.filter((product) => ( \n-    product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n-  ));\n \n+\n const navigate = useNavigate();\n   const handleProductClick = (product) => {\n     setSelectedProduct(product);\n     navigate(\"/selectedProduct\")\n"
                },
                {
                    "date": 1736942375700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) =>( item.category === selectedCategory ||\n+      setFilteredItems(items.filter((item) =>( \n         item.category.toLowerCase().includes(searchTerm.toLowerCase())||\n         item.name .toLowerCase().includes(searchTerm.toLowerCase())\n       )) )\n       \n"
                },
                {
                    "date": 1736942426054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n       setFilteredItems(items);\n     } else {\n       setFilteredItems(items.filter((item) =>( \n         item.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-        item.name .toLowerCase().includes(searchTerm.toLowerCase())\n+        item.name .toLowerCase().includes(searchTerm.toLowerCase()) \n       )) )\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n"
                },
                {
                    "date": 1736942431532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,10 @@\n       setFilteredItems(items);\n     } else {\n       setFilteredItems(items.filter((item) =>( \n         item.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-        item.name .toLowerCase().includes(searchTerm.toLowerCase()) \n+        item.name .toLowerCase().includes(searchTerm.toLowerCase()) ||\n+        item.category === selectedCategory ||\n       )) )\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n"
                },
                {
                    "date": 1736942470881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,19 +21,21 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) =>( \n+      setFilteredItems(items.filter((item) =>( item.category === selectedCategory ||\n         item.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-        item.name .toLowerCase().includes(searchTerm.toLowerCase()) ||\n-        item.category === selectedCategory ||\n+        item.name .toLowerCase().includes(searchTerm.toLowerCase())\n       )) )\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n+  const filteredProducts = products.filter((product) => ( \n+    product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n+    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n+  ));\n \n-\n const navigate = useNavigate();\n   const handleProductClick = (product) => {\n     setSelectedProduct(product);\n     navigate(\"/selectedProduct\")\n"
                },
                {
                    "date": 1736942490919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,20 +22,16 @@\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n       setFilteredItems(items.filter((item) =>( item.category === selectedCategory ||\n-        item.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-        item.name .toLowerCase().includes(searchTerm.toLowerCase())\n+        \n       )) )\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n-  const filteredProducts = products.filter((product) => ( \n-    product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n-  ));\n \n+\n const navigate = useNavigate();\n   const handleProductClick = (product) => {\n     setSelectedProduct(product);\n     navigate(\"/selectedProduct\")\n"
                },
                {
                    "date": 1736942518377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,11 @@\n \n   // Filter items based on selected category\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n-      setFilteredItems(items);\n+      setFilteredItems(items );\n     } else {\n-      setFilteredItems(items.filter((item) =>( item.category === selectedCategory ||\n+      setFilteredItems(items.filter((item) =>( item.category === selectedCategory\n         \n       )) )\n       \n     }\n"
                },
                {
                    "date": 1736942524357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n   // Filter items based on selected category\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n-      setFilteredItems(items );\n+      setFilteredItems(items.filter );\n     } else {\n       setFilteredItems(items.filter((item) =>( item.category === selectedCategory\n         \n       )) )\n"
                },
                {
                    "date": 1736942531464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n   // Filter items based on selected category\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n-      setFilteredItems(items.filter );\n+      setFilteredItems(items.filter (()));\n     } else {\n       setFilteredItems(items.filter((item) =>( item.category === selectedCategory\n         \n       )) )\n"
                },
                {
                    "date": 1736942554683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n   // Filter items based on selected category\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n-      setFilteredItems(items.filter (()));\n+      setFilteredItems(items.filter ((item) ));\n     } else {\n       setFilteredItems(items.filter((item) =>( item.category === selectedCategory\n         \n       )) )\n"
                },
                {
                    "date": 1736942567693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n   // Filter items based on selected category\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n-      setFilteredItems(items.filter ((item) ));\n+      setFilteredItems(items.filter ((item) => ()));\n     } else {\n       setFilteredItems(items.filter((item) =>( item.category === selectedCategory\n         \n       )) )\n"
                },
                {
                    "date": 1736942583260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,11 @@\n \n   // Filter items based on selected category\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n-      setFilteredItems(items.filter ((item) => ()));\n+      setFilteredItems(items.filter ((item) => (\n+        item.category.toLowerCase().includes(searchTerm.toLowerCase())||\n+      item.name .toLowerCase().includes(searchTerm.toLowerCase()))));\n     } else {\n       setFilteredItems(items.filter((item) =>( item.category === selectedCategory\n         \n       )) )\n"
                },
                {
                    "date": 1736942664516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,21 +19,23 @@\n \n   // Filter items based on selected category\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n-      setFilteredItems(items.filter ((item) => (\n+      setFilteredItems(items);\n+    } else {\n+      setFilteredItems(items.filter((item) =>( item.category === selectedCategory ||\n         item.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-      item.name .toLowerCase().includes(searchTerm.toLowerCase()))));\n-    } else {\n-      setFilteredItems(items.filter((item) =>( item.category === selectedCategory\n-        \n+    item.name .toLowerCase().includes(searchTerm.toLowerCase())\n       )) )\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n+  const filteredProducts = products.filter((product) => ( \n+    product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n+    product.name .toLowerCase().includes(searchTerm.toLowerCase())\n+  ));\n \n-\n const navigate = useNavigate();\n   const handleProductClick = (product) => {\n     setSelectedProduct(product);\n     navigate(\"/selectedProduct\")\n"
                },
                {
                    "date": 1736942691710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,17 +21,14 @@\n   useEffect(() => {\n     if (selectedCategory === \"All\" ) {\n       setFilteredItems(items);\n     } else {\n-      setFilteredItems(items.filter((item) =>( item.category === selectedCategory ||\n-        item.category.toLowerCase().includes(searchTerm.toLowerCase())||\n-    item.name .toLowerCase().includes(searchTerm.toLowerCase())\n-      )) )\n+      setFilteredItems(items.filter((item) =>( item.category === selectedCategory)) )\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n-  const filteredProducts = products.filter((product) => ( \n+  const filteredProducts = .filter((product) => ( \n     product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n     product.name .toLowerCase().includes(searchTerm.toLowerCase())\n   ));\n \n"
                },
                {
                    "date": 1736942700199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n-  const filteredProducts = .filter((product) => ( \n+  const filteredProducts = setFilteredItems.filter((product) => ( \n     product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n     product.name .toLowerCase().includes(searchTerm.toLowerCase())\n   ));\n \n"
                },
                {
                    "date": 1736942729028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n-  const filteredProducts = setFilteredItems.filter((product) => ( \n+  const filteredProducts = filteredItems.filter((product) => ( \n     product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n     product.name .toLowerCase().includes(searchTerm.toLowerCase())\n   ));\n \n"
                },
                {
                    "date": 1736942736603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n-  const filteredProducts = filteredItems.filter((product) => ( \n+  const filteredProducts = filteredItemsilteredItems.filter((product) => ( \n     product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n     product.name .toLowerCase().includes(searchTerm.toLowerCase())\n   ));\n \n@@ -43,9 +43,9 @@\n     <div>\n       \n <h1>cat</h1>\n       <div style={{ display: 'flex', flexWrap: 'wrap' }} >\n-        {filteredItems.map((product) => (\n+        {filtere.map((product) => (\n             <div key={product._id} className='box2'  >\n                        \n             <img className='image'\n                 src={'http://localhost:5000/images/'+product.image}\n"
                },
                {
                    "date": 1736942742588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     <div>\n       \n <h1>cat</h1>\n       <div style={{ display: 'flex', flexWrap: 'wrap' }} >\n-        {filtere.map((product) => (\n+        {filteredProducts.map((product) => (\n             <div key={product._id} className='box2'  >\n                        \n             <img className='image'\n                 src={'http://localhost:5000/images/'+product.image}\n"
                },
                {
                    "date": 1736942766328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       \n     }\n   }, [selectedCategory, items]); // Re-run filter when category or items change\n \n-  const filteredProducts = filteredItemsilteredItems.filter((product) => ( \n+  const filteredProducts = filteredItems.filter((product) => ( \n     product.category.toLowerCase().includes(searchTerm.toLowerCase())||\n     product.name .toLowerCase().includes(searchTerm.toLowerCase())\n   ));\n \n"
                }
            ],
            "date": 1736935428412,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\n\nfunction Category({addToCart,searchTerm, highlightText, handleProductClick,selectedCategory}) {\n  const [items, setItems] = useState([]);\n  \n  const [filteredItems, setFilteredItems] = useState([]);\n\n  // Fetch items from db.json (JSON Server)\n  useEffect(() => {\n    fetch(\"http://localhost:5000/products\")\n      .then((response) => response.json())\n      .then((data) => {\n        setItems(data); // Store all items\n        setFilteredItems(data); // Set initial filtered items\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  // Filter items based on selected category\n  useEffect(() => {\n    if (selectedCategory === \"All\" ) {\n      setFilteredItems(items);\n    } else {\n      setFilteredItems(items.filter((item) => item.category === selectedCategory));\n      \n    }\n  }, [selectedCategory, items]); // Re-run filter when category or items change\n\n  \n  return (\n    <div>\n      \n<\n      <div style={{ display: 'flex', flexWrap: 'wrap' }} >\n        {filteredItems.map((product) => (\n            <div key={product._id} className='box2'  >\n                       \n            <img className='image'\n                src={'http://localhost:5000/images/'+product.image}\n                alt={product.name}\n                onClick={() => handleProductClick(product)}\n               \n                />\n                 <span className='text'>\n                    <a  className='name'><span style={{color:\"black\"}} \n                        dangerouslySetInnerHTML={{\n                        __html: highlightText(product.name, searchTerm),\n                               }}\n                         ></span> </a>\n                    <a>Description: {product.desc}</a>\n                    <a>Price: {product.price}</a>\n                 </span>\n                 <div className='cart'>\n                    <button className='btn btn-warning' onClick={() => addToCart(product)} >Add to Cart</button>\n                    \n                 </div>\n                  \n                 \n            </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Category\n;"
        }
    ]
}