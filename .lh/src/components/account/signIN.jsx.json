{
    "sourceFile": "src/components/account/signIN.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 45,
            "patches": [
                {
                    "date": 1738167575523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738174079214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import { useEffect, useState } from \"react\";\n+import { Link, useNavigate } from \"react-router-dom\";\n+import { toast } from \"react-toastify\";\n+\n+const SignIN = ({onSignIn}) => {\n+    const [username, usernameupdate] = useState('');\n+    const [password, passwordupdate] = useState('');\n+\n+    const usenavigate=useNavigate();\n+\n+    useEffect(()=>{\n+sessionStorage.clear();\n+    },[]);\n+\n+    \n+\n+    const ProceedLogin = (e) => {\n+        e.preventDefault();\n+        if (validate()) {\n+            ///implentation\n+            // console.log('proceed');\n+            fetch(\"http://localhost:5000/user/\" + username).then((res) => {\n+                return res.json();\n+            }).then((resp) => {\n+                //console.log(resp)\n+                if (Object.keys(resp).length === 0) {\n+                    toast.error('Please Enter valid username');\n+                } else {\n+                    if (resp.password === password) {\n+                        toast.success('Success');\n+                        sessionStorage.setItem('username',username);\n+                        sessionStorage.setItem('userrole',resp.role);\n+                        onSignIn()\n+                        usenavigate('/')\n+                    }else{\n+                        toast.error('Please Enter valid credentials');\n+                    }\n+                }\n+            }).catch((err) => {\n+                toast.error('Login Failed due to :' + err.message);\n+            });\n+        }\n+    }\n+\n+    const ProceedLoginusingAPI = (e) => {\n+        e.preventDefault();\n+        if (validate()) {\n+            ///implentation\n+            // console.log('proceed');\n+            let inputobj={\"username\": username,\n+            \"password\": password};\n+            fetch(\"https://localhost:44308/User/Authenticate\",{\n+                method:'POST',\n+                headers:{'content-type':'application/json'},\n+                body:JSON.stringify(inputobj)\n+            }).then((res) => {\n+                return res.json();\n+            }).then((resp) => {\n+                console.log(resp)\n+                if (Object.keys(resp).length === 0) {\n+                    toast.error('Login failed, invalid credentials');\n+                }else{\n+                     toast.success('Success');\n+                     sessionStorage.setItem('username',username);\n+                     sessionStorage.setItem('jwttoken',resp.jwtToken);\n+                   usenavigate('/')\n+                }\n+                // if (Object.keys(resp).length === 0) {\n+                //     toast.error('Please Enter valid username');\n+                // } else {\n+                //     if (resp.password === password) {\n+                //         toast.success('Success');\n+                //         sessionStorage.setItem('username',username);\n+                //         usenavigate('/')\n+                //     }else{\n+                //         toast.error('Please Enter valid credentials');\n+                //     }\n+                // }\n+            }).catch((err) => {\n+                toast.error('Login Failed due to :' + err.message);\n+            });\n+        }\n+    }\n+    const validate = () => {\n+        let result = true;\n+        if (username === '' || username === null) {\n+            result = false;\n+            toast.warning('Please Enter Username');\n+        }\n+        if (password === '' || password === null) {\n+            result = false;\n+            toast.warning('Please Enter Password');\n+        }\n+        return result;\n+    }\n+    return (\n+        <div className=\"row\">\n+            <div className=\"offset-lg-3 col-lg-6\" style={{ marginTop: '100px' }}>\n+                <form onSubmit={ProceedLogin} className=\"container\">\n+                    <div className=\"card\">\n+                        <div className=\"card-header\">\n+                            <h2>User Login</h2>\n+                        </div>\n+                        <div className=\"card-body\">\n+                            <div className=\"form-group\">\n+                                <label>User Name <span className=\"errmsg\">*</span></label>\n+                                <input value={username} onChange={e => usernameupdate(e.target.value)} className=\"form-control\"></input>\n+                            </div>\n+                            <div className=\"form-group\">\n+                                <label>Password <span className=\"errmsg\">*</span></label>\n+                                <input type=\"password\" value={password} onChange={e => passwordupdate(e.target.value)} className=\"form-control\"></input>\n+                            </div>\n+                        </div>\n+                        <div className=\"card-footer\">\n+                            <button type=\"submit\" className=\"btn btn-primary\" >Login</button> |\n+                            <Link className=\"btn btn-success\" to={'/register'}>New User</Link>\n+                        </div>\n+                    </div>\n+                </form>\n+            </div>\n+        </div>\n+    );\n+}\n+\n+export default SignIN;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738174095308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,128 +121,5 @@\n         </div>\n     );\n }\n \n-export default SignIN;\n-import { useEffect, useState } from \"react\";\n-import { Link, useNavigate } from \"react-router-dom\";\n-import { toast } from \"react-toastify\";\n-\n-const SignIN = ({onSignIn}) => {\n-    const [username, usernameupdate] = useState('');\n-    const [password, passwordupdate] = useState('');\n-\n-    const usenavigate=useNavigate();\n-\n-    useEffect(()=>{\n-sessionStorage.clear();\n-    },[]);\n-\n-    const ProceedLogin = (e) => {\n-        e.preventDefault();\n-        if (validate()) {\n-            ///implentation\n-            // console.log('proceed');\n-            fetch(\"http://localhost:500/user/\" + username).then((res) => {\n-                return res.json();\n-            }).then((resp) => {\n-                //console.log(resp)\n-                if (Object.keys(resp).length === 0) {\n-                    toast.error('Please Enter valid username');\n-                } else {\n-                    if (resp.password === password) {\n-                        toast.success('Success');\n-                        sessionStorage.setItem('username',username);\n-                        sessionStorage.setItem('userrole',resp.role);\n-                        onSignIn()\n-                        usenavigate('/')\n-                    }else{\n-                        toast.error('Please Enter valid credentials');\n-                    }\n-                }\n-            }).catch((err) => {\n-                toast.error('Login Failed due to :' + err.message);\n-            });\n-        }\n-    }\n-\n-    const ProceedLoginusingAPI = (e) => {\n-        e.preventDefault();\n-        if (validate()) {\n-            ///implentation\n-            // console.log('proceed');\n-            let inputobj={\"username\": username,\n-            \"password\": password};\n-            fetch(\"https://localhost:44308/User/Authenticate\",{\n-                method:'POST',\n-                headers:{'content-type':'application/json'},\n-                body:JSON.stringify(inputobj)\n-            }).then((res) => {\n-                return res.json();\n-            }).then((resp) => {\n-                console.log(resp)\n-                if (Object.keys(resp).length === 0) {\n-                    toast.error('Login failed, invalid credentials');\n-                }else{\n-                     toast.success('Success');\n-                     sessionStorage.setItem('username',username);\n-                     sessionStorage.setItem('jwttoken',resp.jwtToken);\n-                   usenavigate('/')\n-                }\n-                // if (Object.keys(resp).length === 0) {\n-                //     toast.error('Please Enter valid username');\n-                // } else {\n-                //     if (resp.password === password) {\n-                //         toast.success('Success');\n-                //         sessionStorage.setItem('username',username);\n-                //         usenavigate('/')\n-                //     }else{\n-                //         toast.error('Please Enter valid credentials');\n-                //     }\n-                // }\n-            }).catch((err) => {\n-                toast.error('Login Failed due to :' + err.message);\n-            });\n-        }\n-    }\n-    const validate = () => {\n-        let result = true;\n-        if (username === '' || username === null) {\n-            result = false;\n-            toast.warning('Please Enter Username');\n-        }\n-        if (password === '' || password === null) {\n-            result = false;\n-            toast.warning('Please Enter Password');\n-        }\n-        return result;\n-    }\n-    return (\n-        <div className=\"row\">\n-            <div className=\"offset-lg-3 col-lg-6\" style={{ marginTop: '100px' }}>\n-                <form onSubmit={ProceedLogin} className=\"container\">\n-                    <div className=\"card\">\n-                        <div className=\"card-header\">\n-                            <h2>User Login</h2>\n-                        </div>\n-                        <div className=\"card-body\">\n-                            <div className=\"form-group\">\n-                                <label>User Name <span className=\"errmsg\">*</span></label>\n-                                <input value={username} onChange={e => usernameupdate(e.target.value)} className=\"form-control\"></input>\n-                            </div>\n-                            <div className=\"form-group\">\n-                                <label>Password <span className=\"errmsg\">*</span></label>\n-                                <input type=\"password\" value={password} onChange={e => passwordupdate(e.target.value)} className=\"form-control\"></input>\n-                            </div>\n-                        </div>\n-                        <div className=\"card-footer\">\n-                            <button type=\"submit\" className=\"btn btn-primary\" >Login</button> |\n-                            <Link className=\"btn btn-success\" to={'/register'}>New User</Link>\n-                        </div>\n-                    </div>\n-                </form>\n-            </div>\n-        </div>\n-    );\n-}\n-\n export default SignIN;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738174100437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,8 @@\n     useEffect(()=>{\n sessionStorage.clear();\n     },[]);\n \n-    \n-\n     const ProceedLogin = (e) => {\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n"
                },
                {
                    "date": 1738174228651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,10 @@\n     useEffect(()=>{\n sessionStorage.clear();\n     },[]);\n \n+\n+    \n     const ProceedLogin = (e) => {\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n"
                },
                {
                    "date": 1738174234683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,29 @@\n     useEffect(()=>{\n sessionStorage.clear();\n     },[]);\n \n+    var myHeaders = new Headers();\n+myHeaders.append(\"Content-Type\", \"application/json\");\n \n-    \n+var raw = JSON.stringify({\n+  \"email\": \"i@gmail.com\",\n+  \"password\": \"y*~8G}pz9G7'aPt\"\n+});\n+\n+var requestOptions = {\n+  method: 'POST',\n+  headers: myHeaders,\n+  body: raw,\n+  redirect: 'follow'\n+};\n+\n+fetch(\"http://localhost:5000/signin\", requestOptions)\n+  .then(response => response.text())\n+  .then(result => console.log(result))\n+  .catch(error => console.log('error', error));\n+\n+\n     const ProceedLogin = (e) => {\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n"
                },
                {
                    "date": 1738174286974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,29 +11,11 @@\n     useEffect(()=>{\n sessionStorage.clear();\n     },[]);\n \n-    var myHeaders = new Headers();\n-myHeaders.append(\"Content-Type\", \"application/json\");\n+    \n \n-var raw = JSON.stringify({\n-  \"email\": \"i@gmail.com\",\n-  \"password\": \"y*~8G}pz9G7'aPt\"\n-});\n \n-var requestOptions = {\n-  method: 'POST',\n-  headers: myHeaders,\n-  body: raw,\n-  redirect: 'follow'\n-};\n-\n-fetch(\"http://localhost:5000/signin\", requestOptions)\n-  .then(response => response.text())\n-  .then(result => console.log(result))\n-  .catch(error => console.log('error', error));\n-\n-\n     const ProceedLogin = (e) => {\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n"
                },
                {
                    "date": 1738174315661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n             // console.log('proceed');\n-            fetch(\"http://localhost:5000/user/\" + username).then((res) => {\n+            fetch(\"http://localhost:5000/user/\" + email).then((res) => {\n                 return res.json();\n             }).then((resp) => {\n                 //console.log(resp)\n                 if (Object.keys(resp).length === 0) {\n"
                },
                {
                    "date": 1738174334720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n \n const SignIN = ({onSignIn}) => {\n-    const [username, usernameupdate] = useState('');\n+    const [email, usernameupdate] = useState('');\n     const [password, passwordupdate] = useState('');\n \n     const usenavigate=useNavigate();\n \n"
                },
                {
                    "date": 1738174340319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n \n const SignIN = ({onSignIn}) => {\n-    const [email, usernameupdate] = useState('');\n+    const [email, ] = useState('');\n     const [password, passwordupdate] = useState('');\n \n     const usenavigate=useNavigate();\n \n"
                },
                {
                    "date": 1738174350424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n \n const SignIN = ({onSignIn}) => {\n-    const [email, ] = useState('');\n+    const [email, setEmail] = useState('');\n     const [password, passwordupdate] = useState('');\n \n     const usenavigate=useNavigate();\n \n"
                },
                {
                    "date": 1738174435645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n             // console.log('proceed');\n-            let inputobj={\"username\": username,\n+            let inputobj={\"username\": username ,\n             \"password\": password};\n             fetch(\"https://localhost:44308/User/Authenticate\",{\n                 method:'POST',\n                 headers:{'content-type':'application/json'},\n"
                },
                {
                    "date": 1738174480917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n \n const SignIN = ({onSignIn}) => {\n-    const [email, setEmail] = useState('');\n+    const [email, setmail] = useState('');\n     const [password, passwordupdate] = useState('');\n \n     const usenavigate=useNavigate();\n \n@@ -47,9 +47,9 @@\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n             // console.log('proceed');\n-            let inputobj={\"username\": username ,\n+            let inputobj={\"username\": username,\n             \"password\": password};\n             fetch(\"https://localhost:44308/User/Authenticate\",{\n                 method:'POST',\n                 headers:{'content-type':'application/json'},\n"
                },
                {
                    "date": 1738174486452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n \n const SignIN = ({onSignIn}) => {\n-    const [email, setmail] = useState('');\n+    const [username, usernameupdate] = useState('');\n     const [password, passwordupdate] = useState('');\n \n     const usenavigate=useNavigate();\n \n@@ -19,9 +19,9 @@\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n             // console.log('proceed');\n-            fetch(\"http://localhost:5000/user/\" + email).then((res) => {\n+            fetch(\"http://localhost:5000/user/\" + ).then((res) => {\n                 return res.json();\n             }).then((resp) => {\n                 //console.log(resp)\n                 if (Object.keys(resp).length === 0) {\n"
                },
                {
                    "date": 1738174541166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,17 +11,16 @@\n     useEffect(()=>{\n sessionStorage.clear();\n     },[]);\n \n+\n     \n-\n-\n     const ProceedLogin = (e) => {\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n             // console.log('proceed');\n-            fetch(\"http://localhost:5000/user/\" + ).then((res) => {\n+            fetch(\"http://localhost:5000/user/\" + userName).then((res) => {\n                 return res.json();\n             }).then((resp) => {\n                 //console.log(resp)\n                 if (Object.keys(resp).length === 0) {\n"
                },
                {
                    "date": 1738174638464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n             // console.log('proceed');\n-            fetch(\"http://localhost:5000/user/\" + userName).then((res) => {\n+            fetch(\"http://localhost:5000/user/\" + userame).then((res) => {\n                 return res.json();\n             }).then((resp) => {\n                 //console.log(resp)\n                 if (Object.keys(resp).length === 0) {\n"
                },
                {
                    "date": 1738175105335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n \n const SignIN = ({onSignIn}) => {\n-    const [username, usernameupdate] = useState('');\n+    const [userName, usernameupdate] = useState('');\n     const [password, passwordupdate] = useState('');\n \n     const usenavigate=useNavigate();\n \n@@ -18,9 +18,9 @@\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n             // console.log('proceed');\n-            fetch(\"http://localhost:5000/user/\" + userame).then((res) => {\n+            fetch(\"http://localhost:5000/user/\" + username).then((res) => {\n                 return res.json();\n             }).then((resp) => {\n                 //console.log(resp)\n                 if (Object.keys(resp).length === 0) {\n"
                },
                {
                    "date": 1738175111023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Link, useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n \n const SignIN = ({onSignIn}) => {\n-    const [userName, usernameupdate] = useState('');\n+    const [userName, userNameupdate] = useState('');\n     const [password, passwordupdate] = useState('');\n \n     const usenavigate=useNavigate();\n \n"
                },
                {
                    "date": 1738175120372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n             // console.log('proceed');\n-            fetch(\"http://localhost:5000/user/\" + username).then((res) => {\n+            fetch(\"http://localhost:5000/user/\" + userName).then((res) => {\n                 return res.json();\n             }).then((resp) => {\n                 //console.log(resp)\n                 if (Object.keys(resp).length === 0) {\n"
                },
                {
                    "date": 1738175142483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n                         </div>\n                         <div className=\"card-body\">\n                             <div className=\"form-group\">\n                                 <label>User Name <span className=\"errmsg\">*</span></label>\n-                                <input value={username} onChange={e => usernameupdate(e.target.value)} className=\"form-control\"></input>\n+                                <input value={username} onChange={e => userNameupdate(e.target.value)} className=\"form-control\"></input>\n                             </div>\n                             <div className=\"form-group\">\n                                 <label>Password <span className=\"errmsg\">*</span></label>\n                                 <input type=\"password\" value={password} onChange={e => passwordupdate(e.target.value)} className=\"form-control\"></input>\n"
                },
                {
                    "date": 1738175168859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n                         </div>\n                         <div className=\"card-body\">\n                             <div className=\"form-group\">\n                                 <label>User Name <span className=\"errmsg\">*</span></label>\n-                                <input value={username} onChange={e => userNameupdate(e.target.value)} className=\"form-control\"></input>\n+                                <input value={userame} onChange={e => userNameupdate(e.target.value)} className=\"form-control\"></input>\n                             </div>\n                             <div className=\"form-group\">\n                                 <label>Password <span className=\"errmsg\">*</span></label>\n                                 <input type=\"password\" value={password} onChange={e => passwordupdate(e.target.value)} className=\"form-control\"></input>\n"
                },
                {
                    "date": 1738175212734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n                     toast.error('Please Enter valid username');\n                 } else {\n                     if (resp.password === password) {\n                         toast.success('Success');\n-                        sessionStorage.setItem('username',username);\n+                        sessionStorage.setItem('username',userame);\n                         sessionStorage.setItem('userrole',resp.role);\n                         onSignIn()\n                         usenavigate('/')\n                     }else{\n@@ -103,9 +103,9 @@\n                         </div>\n                         <div className=\"card-body\">\n                             <div className=\"form-group\">\n                                 <label>User Name <span className=\"errmsg\">*</span></label>\n-                                <input value={userame} onChange={e => userNameupdate(e.target.value)} className=\"form-control\"></input>\n+                                <input value={userName} onChange={e => userNameupdate(e.target.value)} className=\"form-control\"></input>\n                             </div>\n                             <div className=\"form-group\">\n                                 <label>Password <span className=\"errmsg\">*</span></label>\n                                 <input type=\"password\" value={password} onChange={e => passwordupdate(e.target.value)} className=\"form-control\"></input>\n"
                },
                {
                    "date": 1738175255024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n                     toast.error('Please Enter valid username');\n                 } else {\n                     if (resp.password === password) {\n                         toast.success('Success');\n-                        sessionStorage.setItem('username',userame);\n+                        sessionStorage.setItem('username',userName);\n                         sessionStorage.setItem('userrole',resp.role);\n                         onSignIn()\n                         usenavigate('/')\n                     }else{\n@@ -46,9 +46,9 @@\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n             // console.log('proceed');\n-            let inputobj={\"username\": username,\n+            let inputobj={\"username\": userName,\n             \"password\": password};\n             fetch(\"https://localhost:44308/User/Authenticate\",{\n                 method:'POST',\n                 headers:{'content-type':'application/json'},\n"
                },
                {
                    "date": 1738175264386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n                 if (Object.keys(resp).length === 0) {\n                     toast.error('Login failed, invalid credentials');\n                 }else{\n                      toast.success('Success');\n-                     sessionStorage.setItem('username',username);\n+                     sessionStorage.setItem('username',userName);\n                      sessionStorage.setItem('jwttoken',resp.jwtToken);\n                    usenavigate('/')\n                 }\n                 // if (Object.keys(resp).length === 0) {\n"
                },
                {
                    "date": 1738175299928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import { useEffect, useState } from \"react\";\n+import { Link, useNavigate } from \"react-router-dom\";\n+import { toast } from \"react-toastify\";\n+\n+const SignIN = ({onSignIn}) => {\n+    const [userName, userNameupdate] = useState('');\n+    const [password, passwordupdate] = useState('');\n+\n+    const usenavigate=useNavigate();\n+\n+    useEffect(()=>{\n+sessionStorage.clear();\n+    },[]);\n+\n+\n+    \n+    const ProceedLogin = (e) => {\n+        e.preventDefault();\n+        if (validate()) {\n+            ///implentation\n+            // console.log('proceed');\n+            fetch(\"http://localhost:5000/user/\" + userName).then((res) => {\n+                return res.json();\n+            }).then((resp) => {\n+                //console.log(resp)\n+                if (Object.keys(resp).length === 0) {\n+                    toast.error('Please Enter valid username');\n+                } else {\n+                    if (resp.password === password) {\n+                        toast.success('Success');\n+                        sessionStorage.setItem('username',userName);\n+                        sessionStorage.setItem('userrole',resp.role);\n+                        onSignIn()\n+                        usenavigate('/')\n+                    }else{\n+                        toast.error('Please Enter valid credentials');\n+                    }\n+                }\n+            }).catch((err) => {\n+                toast.error('Login Failed due to :' + err.message);\n+            });\n+        }\n+    }\n+\n+    const ProceedLoginusingAPI = (e) => {\n+        e.preventDefault();\n+        if (validate()) {\n+            ///implentation\n+            // console.log('proceed');\n+            let inputobj={\"username\": userName,\n+            \"password\": password};\n+            fetch(\"https://localhost:44308/User/Authenticate\",{\n+                method:'POST',\n+                headers:{'content-type':'application/json'},\n+                body:JSON.stringify(inputobj)\n+            }).then((res) => {\n+                return res.json();\n+            }).then((resp) => {\n+                console.log(resp)\n+                if (Object.keys(resp).length === 0) {\n+                    toast.error('Login failed, invalid credentials');\n+                }else{\n+                     toast.success('Success');\n+                     sessionStorage.setItem('username',userName);\n+                     sessionStorage.setItem('jwttoken',resp.jwtToken);\n+                   usenavigate('/')\n+                }\n+                // if (Object.keys(resp).length === 0) {\n+                //     toast.error('Please Enter valid username');\n+                // } else {\n+                //     if (resp.password === password) {\n+                //         toast.success('Success');\n+                //         sessionStorage.setItem('username',username);\n+                //         usenavigate('/')\n+                //     }else{\n+                //         toast.error('Please Enter valid credentials');\n+                //     }\n+                // }\n+            }).catch((err) => {\n+                toast.error('Login Failed due to :' + err.message);\n+            });\n+        }\n+    }\n+    const validate = () => {\n+        let result = true;\n+        if (userame === '' || username === null) {\n+            result = false;\n+            toast.warning('Please Enter Username');\n+        }\n+        if (password === '' || password === null) {\n+            result = false;\n+            toast.warning('Please Enter Password');\n+        }\n+        return result;\n+    }\n+    return (\n+        <div className=\"row\">\n+            <div className=\"offset-lg-3 col-lg-6\" style={{ marginTop: '100px' }}>\n+                <form onSubmit={ProceedLogin} className=\"container\">\n+                    <div className=\"card\">\n+                        <div className=\"card-header\">\n+                            <h2>User Login</h2>\n+                        </div>\n+                        <div className=\"card-body\">\n+                            <div className=\"form-group\">\n+                                <label>User Name <span className=\"errmsg\">*</span></label>\n+                                <input value={userName} onChange={e => userNameupdate(e.target.value)} className=\"form-control\"></input>\n+                            </div>\n+                            <div className=\"form-group\">\n+                                <label>Password <span className=\"errmsg\">*</span></label>\n+                                <input type=\"password\" value={password} onChange={e => passwordupdate(e.target.value)} className=\"form-control\"></input>\n+                            </div>\n+                        </div>\n+                        <div className=\"card-footer\">\n+                            <button type=\"submit\" className=\"btn btn-primary\" >Login</button> |\n+                            <Link className=\"btn btn-success\" to={'/register'}>New User</Link>\n+                        </div>\n+                    </div>\n+                </form>\n+            </div>\n+        </div>\n+    );\n+}\n+\n+export default SignIN;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738175306050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import { useEffect, useState } from \"react\";\n+import { Link, useNavigate } from \"react-router-dom\";\n+import { toast } from \"react-toastify\";\n+\n+const SignIN = ({onSignIn}) => {\n+    const [userName, userNameupdate] = useState('');\n+    const [password, passwordupdate] = useState('');\n+\n+    const usenavigate=useNavigate();\n+\n+    useEffect(()=>{\n+sessionStorage.clear();\n+    },[]);\n+\n+\n+    \n+    const ProceedLogin = (e) => {\n+        e.preventDefault();\n+        if (validate()) {\n+            ///implentation\n+            // console.log('proceed');\n+            fetch(\"http://localhost:5000/user/\" + userName).then((res) => {\n+                return res.json();\n+            }).then((resp) => {\n+                //console.log(resp)\n+                if (Object.keys(resp).length === 0) {\n+                    toast.error('Please Enter valid username');\n+                } else {\n+                    if (resp.password === password) {\n+                        toast.success('Success');\n+                        sessionStorage.setItem('username',userName);\n+                        sessionStorage.setItem('userrole',resp.role);\n+                        onSignIn()\n+                        usenavigate('/')\n+                    }else{\n+                        toast.error('Please Enter valid credentials');\n+                    }\n+                }\n+            }).catch((err) => {\n+                toast.error('Login Failed due to :' + err.message);\n+            });\n+        }\n+    }\n+\n+    const ProceedLoginusingAPI = (e) => {\n+        e.preventDefault();\n+        if (validate()) {\n+            ///implentation\n+            // console.log('proceed');\n+            let inputobj={\"username\": userName,\n+            \"password\": password};\n+            fetch(\"https://localhost:44308/User/Authenticate\",{\n+                method:'POST',\n+                headers:{'content-type':'application/json'},\n+                body:JSON.stringify(inputobj)\n+            }).then((res) => {\n+                return res.json();\n+            }).then((resp) => {\n+                console.log(resp)\n+                if (Object.keys(resp).length === 0) {\n+                    toast.error('Login failed, invalid credentials');\n+                }else{\n+                     toast.success('Success');\n+                     sessionStorage.setItem('username',userName);\n+                     sessionStorage.setItem('jwttoken',resp.jwtToken);\n+                   usenavigate('/')\n+                }\n+                // if (Object.keys(resp).length === 0) {\n+                //     toast.error('Please Enter valid username');\n+                // } else {\n+                //     if (resp.password === password) {\n+                //         toast.success('Success');\n+                //         sessionStorage.setItem('username',username);\n+                //         usenavigate('/')\n+                //     }else{\n+                //         toast.error('Please Enter valid credentials');\n+                //     }\n+                // }\n+            }).catch((err) => {\n+                toast.error('Login Failed due to :' + err.message);\n+            });\n+        }\n+    }\n+    const validate = () => {\n+        let result = true;\n+        if (userName === '' || userName === null) {\n+            result = false;\n+            toast.warning('Please Enter Username');\n+        }\n+        if (password === '' || password === null) {\n+            result = false;\n+            toast.warning('Please Enter Password');\n+        }\n+        return result;\n+    }\n+    return (\n+        <div className=\"row\">\n+            <div className=\"offset-lg-3 col-lg-6\" style={{ marginTop: '100px' }}>\n+                <form onSubmit={ProceedLogin} className=\"container\">\n+                    <div className=\"card\">\n+                        <div className=\"card-header\">\n+                            <h2>User Login</h2>\n+                        </div>\n+                        <div className=\"card-body\">\n+                            <div className=\"form-group\">\n+                                <label>User Name <span className=\"errmsg\">*</span></label>\n+                                <input value={userName} onChange={e => userNameupdate(e.target.value)} className=\"form-control\"></input>\n+                            </div>\n+                            <div className=\"form-group\">\n+                                <label>Password <span className=\"errmsg\">*</span></label>\n+                                <input type=\"password\" value={password} onChange={e => passwordupdate(e.target.value)} className=\"form-control\"></input>\n+                            </div>\n+                        </div>\n+                        <div className=\"card-footer\">\n+                            <button type=\"submit\" className=\"btn btn-primary\" >Login</button> |\n+                            <Link className=\"btn btn-success\" to={'/register'}>New User</Link>\n+                        </div>\n+                    </div>\n+                </form>\n+            </div>\n+        </div>\n+    );\n+}\n+\n+export default SignIN;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738175480664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,30 +18,30 @@\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n             // console.log('proceed');\n-            fetch(\"http://localhost:5000/user/\" + userName).then((res) => {\n-                return res.json();\n-            }).then((resp) => {\n-                //console.log(resp)\n-                if (Object.keys(resp).length === 0) {\n-                    toast.error('Please Enter valid username');\n-                } else {\n-                    if (resp.password === password) {\n-                        toast.success('Success');\n-                        sessionStorage.setItem('username',userName);\n-                        sessionStorage.setItem('userrole',resp.role);\n-                        onSignIn()\n-                        usenavigate('/')\n-                    }else{\n-                        toast.error('Please Enter valid credentials');\n-                    }\n-                }\n-            }).catch((err) => {\n-                toast.error('Login Failed due to :' + err.message);\n-            });\n-        }\n-    }\n+    //         fetch(\"http://localhost:5000/user/\" + userName).then((res) => {\n+    //             return res.json();\n+    //         }).then((resp) => {\n+    //             //console.log(resp)\n+    //             if (Object.keys(resp).length === 0) {\n+    //                 toast.error('Please Enter valid username');\n+    //             } else {\n+    //                 if (resp.password === password) {\n+    //                     toast.success('Success');\n+    //                     sessionStorage.setItem('username',userName);\n+    //                     sessionStorage.setItem('userrole',resp.role);\n+    //                     onSignIn()\n+    //                     usenavigate('/')\n+    //                 }else{\n+    //                     toast.error('Please Enter valid credentials');\n+    //                 }\n+    //             }\n+    //         }).catch((err) => {\n+    //             toast.error('Login Failed due to :' + err.message);\n+    //         });\n+    //     }\n+    // }\n \n     const ProceedLoginusingAPI = (e) => {\n         e.preventDefault();\n         if (validate()) {\n@@ -121,255 +121,5 @@\n         </div>\n     );\n }\n \n-export default SignIN;\n-import { useEffect, useState } from \"react\";\n-import { Link, useNavigate } from \"react-router-dom\";\n-import { toast } from \"react-toastify\";\n-\n-const SignIN = ({onSignIn}) => {\n-    const [userName, userNameupdate] = useState('');\n-    const [password, passwordupdate] = useState('');\n-\n-    const usenavigate=useNavigate();\n-\n-    useEffect(()=>{\n-sessionStorage.clear();\n-    },[]);\n-\n-\n-    \n-    const ProceedLogin = (e) => {\n-        e.preventDefault();\n-        if (validate()) {\n-            ///implentation\n-            // console.log('proceed');\n-            fetch(\"http://localhost:5000/user/\" + userName).then((res) => {\n-                return res.json();\n-            }).then((resp) => {\n-                //console.log(resp)\n-                if (Object.keys(resp).length === 0) {\n-                    toast.error('Please Enter valid username');\n-                } else {\n-                    if (resp.password === password) {\n-                        toast.success('Success');\n-                        sessionStorage.setItem('username',userName);\n-                        sessionStorage.setItem('userrole',resp.role);\n-                        onSignIn()\n-                        usenavigate('/')\n-                    }else{\n-                        toast.error('Please Enter valid credentials');\n-                    }\n-                }\n-            }).catch((err) => {\n-                toast.error('Login Failed due to :' + err.message);\n-            });\n-        }\n-    }\n-\n-    const ProceedLoginusingAPI = (e) => {\n-        e.preventDefault();\n-        if (validate()) {\n-            ///implentation\n-            // console.log('proceed');\n-            let inputobj={\"username\": userName,\n-            \"password\": password};\n-            fetch(\"https://localhost:44308/User/Authenticate\",{\n-                method:'POST',\n-                headers:{'content-type':'application/json'},\n-                body:JSON.stringify(inputobj)\n-            }).then((res) => {\n-                return res.json();\n-            }).then((resp) => {\n-                console.log(resp)\n-                if (Object.keys(resp).length === 0) {\n-                    toast.error('Login failed, invalid credentials');\n-                }else{\n-                     toast.success('Success');\n-                     sessionStorage.setItem('username',userName);\n-                     sessionStorage.setItem('jwttoken',resp.jwtToken);\n-                   usenavigate('/')\n-                }\n-                // if (Object.keys(resp).length === 0) {\n-                //     toast.error('Please Enter valid username');\n-                // } else {\n-                //     if (resp.password === password) {\n-                //         toast.success('Success');\n-                //         sessionStorage.setItem('username',username);\n-                //         usenavigate('/')\n-                //     }else{\n-                //         toast.error('Please Enter valid credentials');\n-                //     }\n-                // }\n-            }).catch((err) => {\n-                toast.error('Login Failed due to :' + err.message);\n-            });\n-        }\n-    }\n-    const validate = () => {\n-        let result = true;\n-        if (userame === '' || username === null) {\n-            result = false;\n-            toast.warning('Please Enter Username');\n-        }\n-        if (password === '' || password === null) {\n-            result = false;\n-            toast.warning('Please Enter Password');\n-        }\n-        return result;\n-    }\n-    return (\n-        <div className=\"row\">\n-            <div className=\"offset-lg-3 col-lg-6\" style={{ marginTop: '100px' }}>\n-                <form onSubmit={ProceedLogin} className=\"container\">\n-                    <div className=\"card\">\n-                        <div className=\"card-header\">\n-                            <h2>User Login</h2>\n-                        </div>\n-                        <div className=\"card-body\">\n-                            <div className=\"form-group\">\n-                                <label>User Name <span className=\"errmsg\">*</span></label>\n-                                <input value={userName} onChange={e => userNameupdate(e.target.value)} className=\"form-control\"></input>\n-                            </div>\n-                            <div className=\"form-group\">\n-                                <label>Password <span className=\"errmsg\">*</span></label>\n-                                <input type=\"password\" value={password} onChange={e => passwordupdate(e.target.value)} className=\"form-control\"></input>\n-                            </div>\n-                        </div>\n-                        <div className=\"card-footer\">\n-                            <button type=\"submit\" className=\"btn btn-primary\" >Login</button> |\n-                            <Link className=\"btn btn-success\" to={'/register'}>New User</Link>\n-                        </div>\n-                    </div>\n-                </form>\n-            </div>\n-        </div>\n-    );\n-}\n-\n-export default SignIN;\n-import { useEffect, useState } from \"react\";\n-import { Link, useNavigate } from \"react-router-dom\";\n-import { toast } from \"react-toastify\";\n-\n-const SignIN = ({onSignIn}) => {\n-    const [userName, userNameupdate] = useState('');\n-    const [password, passwordupdate] = useState('');\n-\n-    const usenavigate=useNavigate();\n-\n-    useEffect(()=>{\n-sessionStorage.clear();\n-    },[]);\n-\n-\n-    \n-    const ProceedLogin = (e) => {\n-        e.preventDefault();\n-        if (validate()) {\n-            ///implentation\n-            // console.log('proceed');\n-            fetch(\"http://localhost:5000/user/\" + userName).then((res) => {\n-                return res.json();\n-            }).then((resp) => {\n-                //console.log(resp)\n-                if (Object.keys(resp).length === 0) {\n-                    toast.error('Please Enter valid username');\n-                } else {\n-                    if (resp.password === password) {\n-                        toast.success('Success');\n-                        sessionStorage.setItem('username',userName);\n-                        sessionStorage.setItem('userrole',resp.role);\n-                        onSignIn()\n-                        usenavigate('/')\n-                    }else{\n-                        toast.error('Please Enter valid credentials');\n-                    }\n-                }\n-            }).catch((err) => {\n-                toast.error('Login Failed due to :' + err.message);\n-            });\n-        }\n-    }\n-\n-    const ProceedLoginusingAPI = (e) => {\n-        e.preventDefault();\n-        if (validate()) {\n-            ///implentation\n-            // console.log('proceed');\n-            let inputobj={\"username\": userName,\n-            \"password\": password};\n-            fetch(\"https://localhost:44308/User/Authenticate\",{\n-                method:'POST',\n-                headers:{'content-type':'application/json'},\n-                body:JSON.stringify(inputobj)\n-            }).then((res) => {\n-                return res.json();\n-            }).then((resp) => {\n-                console.log(resp)\n-                if (Object.keys(resp).length === 0) {\n-                    toast.error('Login failed, invalid credentials');\n-                }else{\n-                     toast.success('Success');\n-                     sessionStorage.setItem('username',userName);\n-                     sessionStorage.setItem('jwttoken',resp.jwtToken);\n-                   usenavigate('/')\n-                }\n-                // if (Object.keys(resp).length === 0) {\n-                //     toast.error('Please Enter valid username');\n-                // } else {\n-                //     if (resp.password === password) {\n-                //         toast.success('Success');\n-                //         sessionStorage.setItem('username',username);\n-                //         usenavigate('/')\n-                //     }else{\n-                //         toast.error('Please Enter valid credentials');\n-                //     }\n-                // }\n-            }).catch((err) => {\n-                toast.error('Login Failed due to :' + err.message);\n-            });\n-        }\n-    }\n-    const validate = () => {\n-        let result = true;\n-        if (username === '' || username === null) {\n-            result = false;\n-            toast.warning('Please Enter Username');\n-        }\n-        if (password === '' || password === null) {\n-            result = false;\n-            toast.warning('Please Enter Password');\n-        }\n-        return result;\n-    }\n-    return (\n-        <div className=\"row\">\n-            <div className=\"offset-lg-3 col-lg-6\" style={{ marginTop: '100px' }}>\n-                <form onSubmit={ProceedLogin} className=\"container\">\n-                    <div className=\"card\">\n-                        <div className=\"card-header\">\n-                            <h2>User Login</h2>\n-                        </div>\n-                        <div className=\"card-body\">\n-                            <div className=\"form-group\">\n-                                <label>User Name <span className=\"errmsg\">*</span></label>\n-                                <input value={userName} onChange={e => userNameupdate(e.target.value)} className=\"form-control\"></input>\n-                            </div>\n-                            <div className=\"form-group\">\n-                                <label>Password <span className=\"errmsg\">*</span></label>\n-                                <input type=\"password\" value={password} onChange={e => passwordupdate(e.target.value)} className=\"form-control\"></input>\n-                            </div>\n-                        </div>\n-                        <div className=\"card-footer\">\n-                            <button type=\"submit\" className=\"btn btn-primary\" >Login</button> |\n-                            <Link className=\"btn btn-success\" to={'/register'}>New User</Link>\n-                        </div>\n-                    </div>\n-                </form>\n-            </div>\n-        </div>\n-    );\n-}\n-\n export default SignIN;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738175549801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,30 +18,11 @@\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n             // console.log('proceed');\n-    //         fetch(\"http://localhost:5000/user/\" + userName).then((res) => {\n-    //             return res.json();\n-    //         }).then((resp) => {\n-    //             //console.log(resp)\n-    //             if (Object.keys(resp).length === 0) {\n-    //                 toast.error('Please Enter valid username');\n-    //             } else {\n-    //                 if (resp.password === password) {\n-    //                     toast.success('Success');\n-    //                     sessionStorage.setItem('username',userName);\n-    //                     sessionStorage.setItem('userrole',resp.role);\n-    //                     onSignIn()\n-    //                     usenavigate('/')\n-    //                 }else{\n-    //                     toast.error('Please Enter valid credentials');\n-    //                 }\n-    //             }\n-    //         }).catch((err) => {\n-    //             toast.error('Login Failed due to :' + err.message);\n-    //         });\n-    //     }\n-    // }\n+        \n+        }\n+    }\n \n     const ProceedLoginusingAPI = (e) => {\n         e.preventDefault();\n         if (validate()) {\n"
                },
                {
                    "date": 1738175566979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,27 @@\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n             // console.log('proceed');\n-        \n+            var myHeaders = new Headers();\n+            myHeaders.append(\"Content-Type\", \"application/json\");\n+            \n+            var raw = JSON.stringify({\n+              \"email\": \"i@gmail.com\",\n+              \"password\": \"y*~8G}pz9G7'aPt\"\n+            });\n+            \n+            var requestOptions = {\n+              method: 'POST',\n+              headers: myHeaders,\n+              body: raw,\n+              redirect: 'follow'\n+            };\n+            \n+            fetch(\"http://localhost:5000/signin\", requestOptions)\n+              .then(response => response.text())\n+              .then(result => console.log(result))\n+              .catch(error => console.log('error', error));\n         }\n     }\n \n     const ProceedLoginusingAPI = (e) => {\n"
                },
                {
                    "date": 1738175612358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,12 +21,9 @@\n             // console.log('proceed');\n             var myHeaders = new Headers();\n             myHeaders.append(\"Content-Type\", \"application/json\");\n             \n-            var raw = JSON.stringify({\n-              \"email\": \"i@gmail.com\",\n-              \"password\": \"y*~8G}pz9G7'aPt\"\n-            });\n+            var raw = JSON.stringify(;\n             \n             var requestOptions = {\n               method: 'POST',\n               headers: myHeaders,\n"
                },
                {
                    "date": 1738175628415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n             // console.log('proceed');\n             var myHeaders = new Headers();\n             myHeaders.append(\"Content-Type\", \"application/json\");\n             \n-            var raw = JSON.stringify(;\n+            var raw = JSON.stringify();\n             \n             var requestOptions = {\n               method: 'POST',\n               headers: myHeaders,\n"
                },
                {
                    "date": 1738175640560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n             // console.log('proceed');\n             var myHeaders = new Headers();\n             myHeaders.append(\"Content-Type\", \"application/json\");\n             \n-            var raw = JSON.stringify();\n+            var raw = JSON.stringify(us);\n             \n             var requestOptions = {\n               method: 'POST',\n               headers: myHeaders,\n"
                },
                {
                    "date": 1738175646807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n             // console.log('proceed');\n             var myHeaders = new Headers();\n             myHeaders.append(\"Content-Type\", \"application/json\");\n             \n-            var raw = JSON.stringify(us);\n+            var raw = JSON.stringify(userName,);\n             \n             var requestOptions = {\n               method: 'POST',\n               headers: myHeaders,\n"
                },
                {
                    "date": 1738175652979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n             // console.log('proceed');\n             var myHeaders = new Headers();\n             myHeaders.append(\"Content-Type\", \"application/json\");\n             \n-            var raw = JSON.stringify(userName,);\n+            var raw = JSON.stringify(userName,password);\n             \n             var requestOptions = {\n               method: 'POST',\n               headers: myHeaders,\n"
                },
                {
                    "date": 1738175927443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n             };\n             \n             fetch(\"http://localhost:5000/signin\", requestOptions)\n               .then(response => response.text())\n-              .then(result => console.log(result))\n+              .then(result => {console.log(result))\n               .catch(error => console.log('error', error));\n         }\n     }\n \n"
                },
                {
                    "date": 1738175936093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n             };\n             \n             fetch(\"http://localhost:5000/signin\", requestOptions)\n               .then(response => response.text())\n-              .then(result => {console.log(result))\n+              .then(result => {console.log(result))}\n               .catch(error => console.log('error', error));\n         }\n     }\n \n"
                },
                {
                    "date": 1738175948241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n             };\n             \n             fetch(\"http://localhost:5000/signin\", requestOptions)\n               .then(response => response.text())\n-              .then(result => {console.log(result))}\n+              .then(result => {console.log(result))\n               .catch(error => console.log('error', error));\n         }\n     }\n \n"
                },
                {
                    "date": 1738175958061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n             };\n             \n             fetch(\"http://localhost:5000/signin\", requestOptions)\n               .then(response => response.text())\n-              .then(result => {console.log(result))\n+              .then(result => {(result)})\n               .catch(error => console.log('error', error));\n         }\n     }\n \n"
                },
                {
                    "date": 1738176055524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n \n const SignIN = ({onSignIn}) => {\n     const [userName, userNameupdate] = useState('');\n     const [password, passwordupdate] = useState('');\n+    \n \n     const usenavigate=useNavigate();\n \n     useEffect(()=>{\n"
                },
                {
                    "date": 1738176063202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n const SignIN = ({onSignIn}) => {\n     const [userName, userNameupdate] = useState('');\n     const [password, passwordupdate] = useState('');\n-    \n+    const []\n \n     const usenavigate=useNavigate();\n \n     useEffect(()=>{\n"
                },
                {
                    "date": 1738176072179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n const SignIN = ({onSignIn}) => {\n     const [userName, userNameupdate] = useState('');\n     const [password, passwordupdate] = useState('');\n-    const []\n+    const [err, seter]\n \n     const usenavigate=useNavigate();\n \n     useEffect(()=>{\n"
                },
                {
                    "date": 1738176078764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n const SignIN = ({onSignIn}) => {\n     const [userName, userNameupdate] = useState('');\n     const [password, passwordupdate] = useState('');\n-    const [err, seter]\n+    const [err, seter] = s\n \n     const usenavigate=useNavigate();\n \n     useEffect(()=>{\n"
                },
                {
                    "date": 1738176084684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n const SignIN = ({onSignIn}) => {\n     const [userName, userNameupdate] = useState('');\n     const [password, passwordupdate] = useState('');\n-    const [err, seter] = s\n+    const [err, seter] = useState\n \n     const usenavigate=useNavigate();\n \n     useEffect(()=>{\n"
                },
                {
                    "date": 1738176092879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n const SignIN = ({onSignIn}) => {\n     const [userName, userNameupdate] = useState('');\n     const [password, passwordupdate] = useState('');\n-    const [err, seter] = useState\n+    const [err, seter] = useState{}\n \n     const usenavigate=useNavigate();\n \n     useEffect(()=>{\n"
                },
                {
                    "date": 1738176111608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n             };\n             \n             fetch(\"http://localhost:5000/signin\", requestOptions)\n               .then(response => response.text())\n-              .then(result => {set(result)})\n+              .then(result => {seter(result)})\n               .catch(error => console.log('error', error));\n         }\n     }\n \n"
                },
                {
                    "date": 1738176230859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,28 @@\n         e.preventDefault();\n         if (validate()) {\n             ///implentation\n             // console.log('proceed');\n-        \n+            fetch(\"http://localhost:5000/user/\" + userName).then((res) => {\n+                return res.json();\n+            }).then((resp) => {\n+                //console.log(resp)\n+                if (Object.keys(resp).length === 0) {\n+                    toast.error('Please Enter valid username');\n+                } else {\n+                    if (resp.password === password) {\n+                        toast.success('Success');\n+                        sessionStorage.setItem('username',userName);\n+                        sessionStorage.setItem('userrole',resp.role);\n+                        onSignIn()\n+                        usenavigate('/')\n+                    }else{\n+                        toast.error('Please Enter valid credentials');\n+                    }\n+                }\n+            }).catch((err) => {\n+                toast.error('Login Failed due to :' + err.message);\n+            });\n         }\n     }\n \n     const ProceedLoginusingAPI = (e) => {\n"
                }
            ],
            "date": 1738167575523,
            "name": "Commit-0",
            "content": "import { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst SignIN = ({onSignIn}) => {\n    const [username, usernameupdate] = useState('');\n    const [password, passwordupdate] = useState('');\n\n    const usenavigate=useNavigate();\n\n    useEffect(()=>{\nsessionStorage.clear();\n    },[]);\n\n    const ProceedLogin = (e) => {\n        e.preventDefault();\n        if (validate()) {\n            ///implentation\n            // console.log('proceed');\n            fetch(\"http://localhost:500/user/\" + username).then((res) => {\n                return res.json();\n            }).then((resp) => {\n                //console.log(resp)\n                if (Object.keys(resp).length === 0) {\n                    toast.error('Please Enter valid username');\n                } else {\n                    if (resp.password === password) {\n                        toast.success('Success');\n                        sessionStorage.setItem('username',username);\n                        sessionStorage.setItem('userrole',resp.role);\n                        onSignIn()\n                        usenavigate('/')\n                    }else{\n                        toast.error('Please Enter valid credentials');\n                    }\n                }\n            }).catch((err) => {\n                toast.error('Login Failed due to :' + err.message);\n            });\n        }\n    }\n\n    const ProceedLoginusingAPI = (e) => {\n        e.preventDefault();\n        if (validate()) {\n            ///implentation\n            // console.log('proceed');\n            let inputobj={\"username\": username,\n            \"password\": password};\n            fetch(\"https://localhost:44308/User/Authenticate\",{\n                method:'POST',\n                headers:{'content-type':'application/json'},\n                body:JSON.stringify(inputobj)\n            }).then((res) => {\n                return res.json();\n            }).then((resp) => {\n                console.log(resp)\n                if (Object.keys(resp).length === 0) {\n                    toast.error('Login failed, invalid credentials');\n                }else{\n                     toast.success('Success');\n                     sessionStorage.setItem('username',username);\n                     sessionStorage.setItem('jwttoken',resp.jwtToken);\n                   usenavigate('/')\n                }\n                // if (Object.keys(resp).length === 0) {\n                //     toast.error('Please Enter valid username');\n                // } else {\n                //     if (resp.password === password) {\n                //         toast.success('Success');\n                //         sessionStorage.setItem('username',username);\n                //         usenavigate('/')\n                //     }else{\n                //         toast.error('Please Enter valid credentials');\n                //     }\n                // }\n            }).catch((err) => {\n                toast.error('Login Failed due to :' + err.message);\n            });\n        }\n    }\n    const validate = () => {\n        let result = true;\n        if (username === '' || username === null) {\n            result = false;\n            toast.warning('Please Enter Username');\n        }\n        if (password === '' || password === null) {\n            result = false;\n            toast.warning('Please Enter Password');\n        }\n        return result;\n    }\n    return (\n        <div className=\"row\">\n            <div className=\"offset-lg-3 col-lg-6\" style={{ marginTop: '100px' }}>\n                <form onSubmit={ProceedLogin} className=\"container\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h2>User Login</h2>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"form-group\">\n                                <label>User Name <span className=\"errmsg\">*</span></label>\n                                <input value={username} onChange={e => usernameupdate(e.target.value)} className=\"form-control\"></input>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Password <span className=\"errmsg\">*</span></label>\n                                <input type=\"password\" value={password} onChange={e => passwordupdate(e.target.value)} className=\"form-control\"></input>\n                            </div>\n                        </div>\n                        <div className=\"card-footer\">\n                            <button type=\"submit\" className=\"btn btn-primary\" >Login</button> |\n                            <Link className=\"btn btn-success\" to={'/register'}>New User</Link>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default SignIN;"
        }
    ]
}